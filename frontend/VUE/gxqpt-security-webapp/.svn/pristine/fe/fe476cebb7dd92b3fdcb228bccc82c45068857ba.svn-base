<!-- 单位->部门->人员选择 -->
<template>
  <Modal v-model="showModal" title="选择人员" class-name="vertical-center-modal" width="40%">
    <Tree
      ref="personTree"
      :data="treeData"
      :load-data="getPerson"
      :show-checkbox="showCheckbox"
      :multiple="multiple"></Tree>
    <div slot="footer">
      <Button type="primary" @click="submit" size="large">确定</Button>
      <Button type="default" @click="showModal = false" size="large">取消</Button>
    </div>
  </Modal>
</template>

<script>
import api from '@/api/axiosApi'
import operationApiList from '@/api/operationApiList'

// 处理单位和部门的数据
function handleUnitData(data) {
  const treeData = []
  data.map(item => {
    const children = []
    if (item.dpms) {
      item.dpms.map(value => {
        children.push({
          id: value.id,
          title: value.name,
          loading: false,
          parentId: item.id,
          systemCode: item.systemCode,
          children: []
        })
      })
    }
    treeData.push({
      title: item.name,
      id: item.id,
      children: children
    })
  })
  return treeData
}

// 处理人员列表数据
function handlePersonData(data) {
  const personList = []
  data.map(item => {
    personList.push({
      title: item.name,
      id: item.personId
    })
  })
  return personList
}

export default {
  props: {
    multiple: {
      type: Boolean,
      default: false
    },
    showCheckbox: {
      type: Boolean,
      default: false
    }
  },
  data () {
    return {
      showModal: false,
      treeData: []
    }
  },
  methods: {
    // 获取运维单位树
    findOrgAndDpmOperationTree() {
      const vm = this
      api(operationApiList.findOrgAndDpmOperationTree)
      .then(res => {
        if (res.data.errcode === 0) {
          vm.treeData = handleUnitData(res.data.data)
        }
      },(error) => {console.log(error)})
    },
    // 根据单位和部门id查询人员列表
    getPerson(item, callback) {
      // item为当前节点信息
      const vm = this
      api(operationApiList.getDeptPerson, {
        data: {
          // 单位id
          mainorgid: item.parentId,
          // 部门id
          maindeptid: item.id,
          // 体系
          systemCode: item.systemCode || 'gxqpt'
        },
        pageNo: 1,
        pageSize: 1000
      }).then(res => {
        if (res.data.errcode === 0) {
          const result = res.data.data.list
          const personList = handlePersonData(result)
          if (personList.length === 0) {
            this.$Message.info('该部门下无人员')
          }
          callback(personList)
        }
      },(error) => {console.log(error)})
    },
    open() {
      this.treeData = []
      this.findOrgAndDpmOperationTree()
      this.showModal = true
    },
    // 确定提交
    submit() {
      // 有checkbox的情况
      const checkedList = this.$refs.personTree.getCheckedNodes()
      // 没有checkbox的情况
      const selectedList = this.$refs.personTree.getSelectedNodes()
      let data = []
      if (this.showCheckbox) {
        data = checkedList
      } else {
        data = selectedList
      }
      if (data.length === 0) {
        this.$Message.info('请选择人员')
        return
      }
      for (let item of data) {
        if (item.children) {
          this.$Message.info('只能选择人员')
          return
        }
      }
      this.$emit('on-ok', data)
      this.showModal = false
    }
  }
}
</script>

<style lang="less" scoped>

</style>
