<template>
  <Layout>
    <Content>
      <Breadcrumb>
        <BreadcrumbItem>运维分析</BreadcrumbItem>
        <BreadcrumbItem>应用流量监控</BreadcrumbItem>
      </Breadcrumb>
      <Card>
        <Row type="flex" justify="space-between">
          <Col style="width: 49%">
            <chart-card title="Top5接口流量">
              <Table
                border
                :columns="tableList1.columns"
                :data="tableList1.data"></Table>
            </chart-card>
          </Col>
          <Col style="width: 49%">
            <chart-card title="Top5接口利用率">
              <Table
                border
                :columns="tableList2.columns"
                :data="tableList2.data"></Table>
            </chart-card>
          </Col>
        </Row>
        <Row>
          <Col span="24">
            <chart-card title="Top5接口流量">
              <Row style="margin-top: 15px;">
                <Col span="24">
                  <RadioGroup v-model="time">
                    <Radio label="apple">
                      <span>近1小时</span>
                    </Radio>
                    <Radio label="android">
                      <span>近12小时</span>
                    </Radio>
                    <Radio label="windows">
                      <span>近24小时</span>
                    </Radio>
                    <Radio label="windows">
                      <span>近7天</span>
                    </Radio>
                    <Radio label="windows">
                      <span>近1个月</span>
                    </Radio>
                    <Radio label="windows">
                      <span>近1年</span>
                    </Radio>
                  </RadioGroup>
                </Col>
              </Row>
              <chartLine ref="appflowChart1" el="appflowChart1" :lineOption="appflowChart1Option">
                <div id="appflowChart1" style="height: 400px;"></div>
              </chartLine>
              <Table
                border
                :columns="tableList1.columns"
                :data="tableList1.data"></Table>
            </chart-card>
          </Col>
        </Row>
      </Card>
    </Content>
  </Layout>
</template>

<script>
import {mapState} from 'vuex'
import api from '@/api/axiosApi'
import operationApiList from '@/api/operationApiList'
// echart图外层容器，包括卡片样式
import chartCard from '@/view/home/chartCard.vue'
import chartLine from './../echarts/ChartLine.vue'
import {areaLine} from '@/assets/js/echartOption'

export default {
  components: {
    chartCard,
    chartLine
  },
  data () {
    return {
      appflowChart1Option: areaLine(),
      time: 'apple',
      tableList1: {
        columns: [{
          title: '接口',
          key: 'service',
          align: 'center'
        }, {
          title: '流入速率',
          key: 'serviceType',
          align: 'center'
        }, {
          title: '流出速率',
          key: 'serviceName',
          align: 'center'
        }, {
          title: '流入包速率',
          key: 'serviceName',
          align: 'center'
        }, {
          title: '流出包速率',
          key: 'serviceName',
          align: 'center'
        }],
        data: []
      },
      tableList2: {
        columns: [{
          title: '接口',
          key: 'service',
          align: 'center'
        }, {
          title: '流入利用率',
          key: 'serviceType',
          align: 'center'
        }, {
          title: '流出利用率',
          key: 'serviceName',
          align: 'center'
        }],
        data: []
      }
    }
  },
  computed: {
    ...mapState(['userInfo'])
  },
  mounted() {
    this.drawTable()
    this.drawAppflowChart1()
  },
  methods: {
    drawTable () {
      this.tableList1.data = [{
        service: 'jkdsjfk',
        serviceType: 'jkdsjfk',
        serviceName: 'jkdsjfk',
        serviceName: 'jkdsjfk',
        serviceName: 'jkdsjfk'
      }]
      this.tableList2.data = [{
        service: 'jkdsjfk',
        serviceType: 'jkdsjfk',
        serviceName: 'jkdsjfk',
        serviceName: 'jkdsjfk',
        serviceName: 'jkdsjfk'
      }]
    },
    drawAppflowChart1 () {
      const num = Math.floor(Math.random() * 600)
      this.appflowChart1Option.xAxis.data = ['Mon', 'Tue', 'Wed', 'Thu']
      this.appflowChart1Option.series[0].data = [10, num, 100, num]
      this.appflowChart1Option.series[0].areaStyle = {
        normal: {
          color: 'rgba(0, 0, 0, 0)'
        }
      }
      this.appflowChart1Option.series[0].smooth = false
      this.$refs.appflowChart1.refresh()
    }
  },
  watch: {
    time () {
      this.drawAppflowChart1()
    }
  }
}
</script>
