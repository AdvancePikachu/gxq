<template>
  <Layout>
    <Content>
      <Breadcrumb>
        <BreadcrumbItem>接入管理</BreadcrumbItem>
        <BreadcrumbItem>应用升级</BreadcrumbItem>
      </Breadcrumb>
      <Card>
        <Form
          ref="formValidate"
          inline
          :label-width="100"
          :model="searchCondition">
          <FormItem label="发布日期：">
            <DatePicker
              v-model="publishTime"
              format="yyyy-MM-dd"
              type="daterange"
              placement="bottom-end"
              placeholder="请选择日期">
            </DatePicker>
          </FormItem>
          <FormItem label="版本号：">
            <Input
              type="text"
              v-model="searchCondition.versionNumber">
            </Input>
          </FormItem>
          <FormItem>
            <Button type="primary" @click="search" style="margin-right: 20px;">查询</Button>
            <router-link to="/accessList">
              <Button type="default">返回</Button>
            </router-link>
          </FormItem>
          <FormItem style="float: right;">
            <Button type="primary" @click="publishNewVertion">发布新版本</Button>
          </FormItem>
        </Form>
        <hy-table
          highlight-row
          :columns="tableList.columns"
          :data="tableList.data"
          :total="Number(pageInfo.total)"
          pageType="small"
          show-elevator
          show-sizer
          class="access-upgrade"
          @on-page-change="search" />
        <Modal
          v-model="showModal"
          title="版本查看"
          @on-ok="saveInfo">
          <Form
          :label-width="100"
          :model="modalForm">
            <FormItem label="系统名称：">
              <Input
                type="text"
                v-model="modalForm.systemName" disabled>
              </Input>
            </FormItem>
            <FormItem label="版本号：">
              <Input
                type="text"
                v-model="modalForm.versionNumber">
              </Input>
            </FormItem>
            <FormItem label="版本名称：">
              <Input
                type="text"
                v-model="modalForm.versionName">
              </Input>
            </FormItem>
            <FormItem label="发布服务器：">
              <!-- <Select v-model="searchCondition.hostId">
                <Option v-for="item in serverList" :value="item.hostId" :key="item.hostId">{{item.hostName}}</Option>
              </Select> -->
              <Input
                type="text"
                v-model="modalForm.publishingServer">
              </Input>
            </FormItem>
            <FormItem label="是否启用：">
              <RadioGroup v-model="modalForm.status">
                <Radio label="1">启用</Radio>
                <Radio label="2">不启用</Radio>
              </RadioGroup>
            </FormItem>
            <FormItem label="发布文件：">
              <hyUpload
                ref="fileUpload"
                action="http://139.159.241.21:10086/api/file/file/upload"
                :onSuccess="fileUploadSuccess"/>
            </FormItem>
            <FormItem label="升级内容：">
              <Input
                type="textarea"
                :autosize="{minRows: 3, maxRows: 3}"
                v-model="modalForm.upgradeContent">
              </Input>
            </FormItem>
            <FormItem label="备注：">
              <Input
                type="textarea"
                :autosize="{minRows: 3, maxRows: 3}"
                v-model="modalForm.remark">
              </Input>
            </FormItem>
          </Form>
        </Modal>
      </Card>
    </Content>
  </Layout>
</template>

<script>
import api from '@/api/axiosApi'
import operationApiList from '@/api/operationApiList'
// 文件上传
import hyUpload from '@/components/hengyun/hyUpload'

const ACTS = {
  // 发布新版本
  create: 'create',
  // 查看详情
  detail: 'detail'
}

function defaultDisplay(h, params, key) {
  return h('span', params.row[key] || '--')
}

function getDateRange(time) {
  if (!time) {
    return ''
  }
  // 结束日期
  const endDate = new Date(time)
  // 当前日期往前推30天
  const startDate = new Date(time - 30 * 24 * 60 * 60 * 1000)
  return {
    start: `${startDate.getFullYear()}-${startDate.getMonth() + 1}-${startDate.getDate()}`,
    end: `${endDate.getFullYear()}-${endDate.getMonth() + 1}-${endDate.getDate()}`
  }
}
export default {
  components: {
    hyUpload
  },
  data () {
    const vm = this
    const defaultDateRange = getDateRange(Date.now())
    return {
      currentAct: '',
      searchCondition: {
        // 版本号
        versionNumber: ''
      },
      publishTime: [defaultDateRange.start, defaultDateRange.end],
      modalForm: {
        systemName: vm.$route.query.name,
        versionNumber: '',
        versionName: '',
        publishingServer: '',
        status: '1',
        upgradeContent: '',
        remark: ''
      },
      fileList: [],
      tableList: {
        columns: [{
          type: 'index',
          title: '序号',
          width: 60,
          align: 'center'
        },
        {
          title: '系统名称',
          key: 'name',
          render: (h, params) => {
            return defaultDisplay(h, params, 'name')
          }
        },
        {
          title: '发布日期',
          key: 'age',
          render: (h, params) => {
            return defaultDisplay(h, params, 'name')
          }
        },
        {
          title: '版本名称',
          key: 'address',
          render: (h, params) => {
            return defaultDisplay(h, params, 'name')
          }
        },
        {
          title: '发布版本号',
          key: 'age',
          render: (h, params) => {
            return defaultDisplay(h, params, 'name')
          }
        },
        {
          title: '升级内容',
          key: 'age',
          render: (h, params) => {
            return defaultDisplay(h, params, 'name')
          }
        },
        {
          title: '发布服务器',
          key: 'age',
          render: (h, params) => {
            return defaultDisplay(h, params, 'name')
          }
        },
        {
          title: '状态',
          key: 'age',
          render: (h, params) => {
            return defaultDisplay(h, params, 'name')
          }
        },
        {
          title: '操作',
          key: 'address',
          render: (h, params) => {
            const id = params.row.age
            const detail = h('span', {
              class: 'handle',
              domProps: {
                innerHTML: '详情'
              },
              on: {
                click () {
                  vm.showDeails(id)
                }
              }
            })
            const open = h('span', {
              class: 'handle',
              domProps: {
                innerHTML: '启用'
              },
              on: {
                click () {
                  vm.open(id)
                }
              }
            })
            const close = h('span', {
              class: 'handle',
              domProps: {
                innerHTML: '禁用'
              },
              on: {
                click () {
                  vm.disable(id)
                }
              }
            })
            return h('span', [detail, open, close])
          }
        }],
        data: []
      },
      serverList: [],
      showModal: false,
      pageInfo: {
        pageNo: 0,
        pageSize: 10,
        total: 0
      }
    }
  },
  methods: {
    // 获取主机列表
    // getHostName() {
    //   const vm = this
    //   api(operationApiList.getHostName)
    //   .then(res => {
    //     if (res.data.errcode === 0) {
    //       vm.serverList = res.data.data
    //     }
    //   }, error => {console.log(error)})
    // },
    // 获取列表
    search (pageNo, pageSize) {
      const vm = this
      api(operationApiList.appUpgradePage, {
        pageNo: pageNo || vm.pageInfo.pageNo,
        pageSize: pageSize || vm.pageInfo.pageSize,
        data: {
          startTime: `${getDateRange(vm.publishTime[0]).end} 00:00:00`,
          endTime: `${getDateRange(vm.publishTime[1]).end} 23:59:59`,
          appId: vm.$route.query.id,
          ...vm.searchCondition
        }
      }).then(res => {
        if (res.data.errcode === 0) {
          const result = res.data.data
          vm.pageInfo.pageNo = result.pageNum
          vm.pageInfo.total = result.total
          vm.tableList.data = result.list
        }
      }, error => {console.log(error)})
    },
    saveInfo () {
      const vm = this
      const files = []
      vm.fileList.map(value => {
        const file = value.response.data.list[0]
        files.push({
          fileName: file.submittedFileName,
          fileSize: file.size,
          fileType: file.mime,
          fileUrl: file.url,
        })
      })
      api(operationApiList.appSave, {
        systemId: vm.$route.query.id,
        files,
        ...vm.modalForm
      }).then(res => {
        if (res.data.errcode === 0) {
          debugger
          const result = res.data.data
        }
      }, error => {console.log(error)})
    },
    // 启用
    open (id) {
      console.log('启用')
    },
    disable(id) {
      console.log('禁用')
    },
    // 点击发布新版本
    publishNewVertion () {
      const vm = this
      vm.currentAct = ACTS.create
      vm.showModal = true
    },
    // 点击详情
    showDeails () {
      const vm = this
      vm.currentAct = ACTS.detail
      vm.showModal = true
    },
    fileUploadSuccess(resp, file, fileList) {
      this.fileList = fileList
    }
  },
  mounted () {
    this.search()
    // this.getHostName()
  },
  watch: {
    showModal () {
      // 关闭时清空文件数据
      if (this.showModal === false) {
        this.$nextTick(() => {
          this.$refs.fileUpload.clearFiles()
        })
      }
    }
  }
}
</script>

<style lang='less'>
.access-upgrade{
  span.handle{
    margin: 0 5px;
    display: inline-block;
  }
}
</style>
