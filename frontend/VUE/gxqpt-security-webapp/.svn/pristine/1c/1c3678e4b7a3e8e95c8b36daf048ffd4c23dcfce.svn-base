<template>
	<Layout>
		<hengyun-header logoClass="logo-security"></hengyun-header>
		<Layout class="ivu-layout-has-sider">
			<hengyun-sidebar :menus="menus" />
			<router-view></router-view>
		</Layout>
	</Layout>
</template>
<script>
	import api from '@/api/axiosApi'
	import apiList from '@/api/comApiList'
	import { mapState, mapMutations } from 'vuex'
	// 头部
	import header from '@/components/hengyun/header'
	// 侧边栏
	import siderBar from '@/components/hengyun/sideBar'
	const menus = [{
		name: '接口权限',
		link: '/interfacePermission',
		icon: 'icon-quanxian'
	}, {
		name: '备份监控',
		icon: 'icon-beifen',
		subMenu: [{
			name: '备份设置',
			link: '/backupSetting'
		}, {
			name: '备份监控',
			link: '/backupMonitor'
		}]
	}, {
		name: '服务器监控',
		icon: 'icon-fuwujiankong',
		subMenu: [{
			name: '服务器访问监控',
			link: '/serverAccessMonitor'
		}, {
			name: '进程监控',
			link: '/processMonitor'
		}, {
			name: '服务监控',
			link: '/serverMonitor'
		}]
	}, {
		name: '程序发布管理',
		link: '/programRelease',
		icon: 'icon-fabu'
	}, {
		name: '系统安全评测',
		link: '/systemSafetyEvaluation',
		icon: 'icon-safty'
	}]
	export default {
		components: {
			'hengyun-sidebar': siderBar,
			'hengyun-header': header
		},
		data() {
			return {
				isCollapsed: false,
				menus: menus
			}
		},
		computed: {
			rotateIcon() {
				return [
					'menu-icon',
					this.isCollapsed ? 'rotate-icon' : ''
				];
			},
			menuitemClasses() {
				return [
					'menu-item',
					this.isCollapsed ? 'collapsed-menu' : ''
				]
			},
			...mapState([
				'userInfo',
				'appId'
			])
		},
		methods: {
			init() {
				this.getUserInfo();
				this.getOperateMenu();
			},
			getOperateMenu() {
				function buildMenu(data) {
					var arr = [];
					data.forEach(function(item, index) {
						var obj = {
							name: item.name,
							link: item.url,
							icon: item.icon,
							id: item.id,
							subMenu: item.children ? buildMenu(item.children) : null
						}
						arr.push(obj);
					})
					return arr;
				}
				api(apiList.getOperateMenu, {
					userId: this.userInfo.userid,
					group: 'DEFAULT'
				}).then((res) => {
					if(res.status == 200) {
						this.menus = buildMenu(res.data.data);
					}
				})
			},
			collapsedSider() {
				this.$refs.side1.toggleCollapse();
			},
			...mapMutations([
				'getUserInfo'
			])
		},
		created() {
			this.$nextTick(() => {
				this.init();
			})
		}

	}
</script>