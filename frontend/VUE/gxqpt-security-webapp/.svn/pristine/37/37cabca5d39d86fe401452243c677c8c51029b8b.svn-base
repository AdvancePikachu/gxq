<template>
	<Layout>
		<Content>
			<Breadcrumb>
				<BreadcrumbItem>告警管理</BreadcrumbItem>
				<BreadcrumbItem>告警列表</BreadcrumbItem>
			</Breadcrumb>
			<Card>
				<Form :model="searchCondition" ref="searchformData" inline :label-width="80">
          <FormItem label="告警名称">
            <Input type="text" v-model="searchCondition.name"></Input>
          </FormItem>
          <FormItem label="告警级别" prop="context">
            <Select v-model="searchCondition.status">
              <Option :value="1">一级</Option>
              <Option :value="2">二级</Option>
              <Option :value="3">三级</Option>
            </Select>
					</FormItem>
          <FormItem label="系统名称" prop="status" style="width: 177px;">
            <Select v-model="searchCondition.status">
              <Option value="0">全部</Option>
              <Option :value="1">申请</Option>
              <Option :value="2">驳回</Option>
              <Option :value="3">同意</Option>
              <Option :value="4">驳回后申请</Option>
              <Option :value="5">完结</Option>
            </Select>
          </FormItem>
          <FormItem label="产生时间" prop="serviceDate">
            <DatePicker
              type="daterange"
              v-model="trainTime"
              show-week-numbers
              placeholder="请选择服务时间"
              style="width: 200px">
            </DatePicker>
          </FormItem>
					<FormItem label="告警状态" prop="status" style="width: 177px;">
						<Select v-model="searchCondition.status">
              <Option :value="1">启用</Option>
              <Option :value="2">禁用</Option>
            </Select>
					</FormItem>
					<FormItem>
						<Button type="primary" @click="preSearch" v-if="authButton.includes('ops_train_list_query')">查询</Button>
					</FormItem>
				</Form>
        <Row style="margin-bottom: 20px;">
          <Col span="24">
            <Button type="primary" @click="openCreateModal" v-if="authButton.includes('ops_train_list_query')">新增</Button>
            <Button type="primary" @click="openDeleteModal" v-if="authButton.includes('ops_train_list_query')">删除</Button>
          </Col>
        </Row>
        <hy-table
          highlight-row
          border
          :current="pageInfo.pageNo"
          :columns="tableList.columns"
          :data="tableList.data"
          :total="Number(pageInfo.total)"
          :pageSize="Number(pageInfo.pageSize)"
          pageType="small"
          show-elevator
          show-sizer
          ref="safetyEvalTable"
          @on-page-change="pageChange"
          @on-selection-change="doSelect" />
			</Card>
		</Content>
    <ruleModal
      ref="ruleModal"
      :currentAct="currentAct">
    </ruleModal>
	</Layout>
</template>
<script>
import {mapState} from 'vuex'
import api from '@/api/axiosApi'
import operationApiList from '@/api/operationApiList'

import ruleModal from "./ruleModal.vue";

function convertTime(time) {
    const date = new Date(time)
    return `${date.getFullYear()}-${date.getMonth() + 1}-${date.getDate()} ${date.getHours()}:${date.getMinutes()}:${date.getSeconds()}`
}

function getDateRange(time) {
  if (!time) {
    return ''
  }
  // 结束日期
  const endDate = new Date(time)
  // 当前日期往前推30天
  const startDate = new Date(time - 30 * 24 * 60 * 60 * 1000)
  return {
    start: `${startDate.getFullYear()}-${startDate.getMonth() + 1}-${startDate.getDate()}`,
    end: `${endDate.getFullYear()}-${endDate.getMonth() + 1}-${endDate.getDate()}`
  }
}

export default {
  components: {
    ruleModal
  },
  data() {
    const vm = this
    return {
      currentAct: 'create',
      selections: [],
      currentTypeIdx: 0,
      rule: false,
      searchCondition: {
        context: '',
        name: '',
        status: '0',
        type: ''
      },
      trainTime: [],
      tableList: {
        columns: [{
          type: 'selection',
          width: 60,
          align: 'center'
        }, {
          title: '序号',
          type: 'index',
          width: 60,
          align: 'center'
        }, {
          title: '告警名称',
          key: 'name'
        }, {
          title: '告警级别',
          key: 'type'
        }, {
          title: '系统名称',
          key: 'trainTime'
        }, {
          title: '告警状态',
          key: 'status',
          render: (h, params) => {
            const status = ['--', '申请', '驳回', '同意', '驳回后申请', '完结']
            return h('span', status[params.row.status])
          }
        }, {
          title: '产生时间',
          key: 'trainSorce'
        }, {
          title: '处理结果',
          key: 'fileUrl',
          align: 'center'
        }, {
          title: '处理说明',
          key: 'fileUrl',
          align: 'center'
        }, {
          title: '操作',
          type: 'act',
          width: 200,
          align: 'center',
          render: (h, params) => {
            const {status, trainSorce, id} = params.row
            const detail = h('Button', {
              props: {
                type: 'primary',
                size: 'small'
              },
              style: {
                marginRight: '5px'
              },
              on: {
                click: () => {
                  this.currentAct = 'detail'
                  this.$refs.ruleModal.open(id)
                }
              }
            }, '查看')
            const edit = h('Button', {
              props: {
                type: 'primary',
                size: 'small'
              },
              style: {
                marginRight: '5px'
              },
              on: {
                click: () => {
                  vm.currentAct = 'edit'
                  vm.$refs.ruleModal.open(id)
                }
              }
            }, '修改')
            const remove = h('Button', {
              props: {
                type: 'primary',
                size: 'small'
              },
              style: {
                marginRight: '5px'
              },
              on: {
                click: () => {
                  vm.$Modal.confirm({
                    title: '删除确认',
                    content: '确认删除这条告警规则吗？',
                    onOk: () => {
                      alert('删除')
                    }
                  })
                }
              }
            }, '删除')
            const btns = []
            // 驳回
            if (vm.authButton.includes('ops_train_list_update') && status === 2) {
              btns.push(edit)
            }
            // 已完结
            if (vm.authButton.includes('ops_train_list_evaluate') && status === 5) {
              btns.push(remove)
            }
            if (vm.authButton.includes('ops_train_list_detail')) {
              btns.push(detail)
            }
            return h('div', btns)
          }
        }],
        data: []
      },
      pageInfo: {
        pageNo: 1,
        pageSize: 10,
        total: 0
      },
      // 当前修改的培训的信息
      currentActTrainInfo: {}
    }
  },
  computed: {
    ...mapState(['authButton'])
  },
  mounted () {
    this.doSearch()
  },
  methods: {
    // 勾选列表时触发
    doSelect(selection) {
      this.selections = selection
    },
    preSearch() {
      this.pageInfo.pageNo = 1
      this.doSearch()
    },
    pageChange(pageNo, pageSize) {
      this.pageInfo.pageNo = pageNo
      this.pageInfo.pageSize = pageSize
      this.doSearch()
    },
    // 查询
    doSearch () {
      this.getList()
    },
    // 获取列表
    getList(pageNo, pageSize) {
      const vm = this
      const endTime = vm.trainTime.length > 0 ? getDateRange(vm.trainTime[1]).end : ''
      const startTime = vm.trainTime.length > 0 ? getDateRange(vm.trainTime[0]).end : ''
      api(operationApiList.trainList, {
        pageNo: pageNo || vm.pageInfo.pageNo,
        pageSize: pageSize || vm.pageInfo.pageSize,
        data: {
          ...vm.searchCondition,
          endTime: endTime ? `${endTime} 23:59:59` : '',
          startTime: startTime ? `${startTime} 00:00:00` : ''
        }
      }).then(res => {
        if (res.data.errcode === 0) {
          const result = res.data.data
          vm.pageInfo.pageNo = result.pageNum
          vm.pageInfo.total = result.total
          vm.tableList.data = result.list
        }
      }, error => {console.log(error)})
    },
    // 更新
    update(data) {
      const vm = this
      data.id = vm.currentActTrainInfo.id
      data.trainTime = convertTime(data.trainTime)
      api(operationApiList.trainUpdate, data)
      .then(res => {
        if (res.data.errcode === 0) {
          vm.$Message.success('申请成功，等待审批！！')
          vm.getList()
        }
      }, error => {console.log(error)})
    },
    // 打开新增的弹窗
    openCreateModal () {
      this.currentAct = 'create'
      this.$refs.ruleModal.open()
    },
    // 打开批量删除弹窗
    openDeleteModal () {
      this.$Modal.confirm({
        title: '删除确认',
        content: '确认删除选中的告警规则吗？',
        onOk: () => {
          alert('删除')
        }
      })
    }
  }
}
</script>
<style lang="less" scoped="scoped">
.act-btn-group{
	button{
		margin: 0 12px;
	}
}
.ivu-modal-footer{
  display: none;
}
</style>