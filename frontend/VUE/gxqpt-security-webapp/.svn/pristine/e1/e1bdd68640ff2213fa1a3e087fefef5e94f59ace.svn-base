<template>
  <Card>
    <Form
      ref="formValidate"
      inline
      :label-width="100"
      :model="formInfo">
      <FormItem label="申请单位：">
        <Select v-model="formInfo.name" style="width:140px">
          <Option v-for="item in categoryList" :value="item.value" :key="item.value">{{item.label}}</Option>
        </Select>
      </FormItem>
      <FormItem label="申请人：">
        <Select v-model="formInfo.name" style="width:140px">
          <Option v-for="item in categoryList" :value="item.value" :key="item.value">{{item.label}}</Option>
        </Select>
      </FormItem>
      <FormItem label="申请人邮箱：">
        <Select v-model="formInfo.name" style="width:140px">
          <Option v-for="item in typeList" :value="item.value" :key="item.value">{{item.label}}</Option>
        </Select>
      </FormItem>
      <FormItem>
        <Button type="primary" @click="popModal">+添加</Button>
      </FormItem>
    </Form>
    <hy-table
      highlight-row
      :columns="tableList.columns"
      :data="tableList.data"
      class="server-list"
      @on-page-change="getList"
      :needPage="false" />
    <Row style="margin-top: 20px;">
      <Form
      ref="formValidate"
      :label-width="100"
      :model="formInfo">
        <FormItem label="申请原因：">
          <Input
            type="textarea"
            style="width: 400px;"
            v-model="formInfo.name">
          </Input>
        </FormItem>
        <FormItem label="附件说明：" style="margin-top: 40px;">
          <Input
            type="text"
            style="width: 400px;"
            v-model="formInfo.name">
          </Input>
          <Button type="primary">上传</Button>
        </FormItem>
      </Form>
    </Row>
    <Row class="bottom-bar" style="text-align: center">
      <Col>
        <Button type="default" @click="quit">取消</Button>
        <Button type="primary">保存</Button>
        <Button type="primary">提交</Button>
      </Col>
    </Row>
    <Modal
      v-model="showModal"
      title="服务器资源资源配置"
      @on-ok="doAddServer">
      <server-config ref="serverConfig" :configInfo="configInfo" />
    </Modal>
  </Card>
</template>

<script>
import serverConfig from './../common/serverConfig'

const list = {
  name: '4核',
  age: 1,
  address: 'New York No. 1 Lake Park',
  date: '2016-10-03',
  diskList: [0]
}

function getConfigInfo() {
  return {
    name: '',
    content: '',
    type: '',
    count: 1,
    diskList: [0, 1]
  }
}

export default {
  components: {
    serverConfig
  },
  data () {
    return {
      formInfo: {
        name: ''
      },
      tableList: {
        columns: [
          {
            type: 'index',
            title: '序号',
            width: 60,
            align: 'center'
          },
          {
            title: 'CPU核数',
            key: 'name'
          },
          {
            title: '内存',
            key: 'age'
          },
          {
            title: '操作系统',
            key: 'address'
          },
          {
            title: '网络区域',
            key: 'age'
          },
          {
            title: '网络宽带',
            key: 'address'
          },
          {
            title: '申请数量',
            key: 'age'
          },
          {
            title: '磁盘',
            key: 'address'
          },
          {
            title: '大小',
            key: 'age'
          },
          {
            title: '操作',
            key: 'address',
            render: (h, params) => {
              const vm = this
              const age = params.row.age
              const id = params.row.age
              const edit = h('span', {
                class: 'handle',
                domProps: {
                  innerHTML: '修改'
                },
                on: {
                  click () {
                    vm.gotoCtrl(1, params.index)
                  }
                }
              })
              const deleteServer = h('span', {
                class: 'handle',
                domProps: {
                  innerHTML: '删除'
                },
                on: {
                  click () {
                    vm.gotoCtrl(0, params.index)
                  }
                }
              })
              return h('div', [edit, deleteServer])
            }
          }
        ],
        data: [list, list]
      },
      categoryList: [{
        value: 1,
        label: '分类1'
      }],
      typeList: [{
        value: 2,
        label: '类型1'
      }],
      providerList: [{
        value: 3,
        label: '提供方1'
      }],
      showModal: false,
      // 修改时服务器配置的一些信息
      configInfo: getConfigInfo()
    }
  },
  methods: {
    // 点击查询按钮
    handleSubmit () {
      alert()
    },
    // 从服务端获取列表数据
    getList (pageNo, pageSize) {
      console.log(pageNo)
      console.log(pageSize)
    },
    // 操作
    gotoCtrl (type, idx) {
      // 删除
      if (type === 0) {
        this.tableList.data.splice(idx, 1)
      } else {
      // 修改
        const data = JSON.parse(JSON.stringify(this.tableList.data[idx]))
        this.configInfo = {...getConfigInfo(), ...data}
        this.popModal(true)
      }
    },
    // 点击添加按钮
    popModal (isEdit) {
      // 非编辑
      if (isEdit !== true) {
        this.configInfo = getConfigInfo()
      }
      this.showModal = true
    },
    // 添加服务器确定按钮
    doAddServer () {
      this.tableList.data.push(this.configInfo)
    },
    // 取消
    quit () {
      this.$router.go(-1)
    }
  },
  mounted () {
    const params = this.$route.params
    console.log(this.$route)
    // 修改
    if (params.id) {
      console.log('修改')
    } else {
      console.log('新增')
    }
  }
}
</script>

<style lang='less'>
.server-list{
  span.handle{
    margin: 0 5px;
    display: inline-block;
    cursor: pointer;
    &:hover{
      color: #57a3f3;
    }
  }
}
</style>
