<template>
    <Modal v-model="showModal" title="上传" width="300px" class-name="vertical-center-modal">
        <div style="text-align:center">
            <Form ref="evalData" :label-width="80" class="clearfix">
                <FormItem label="培训签到表" prop="evalReport">
                    <hyUpload
                        ref="signUpload"
                        action="/api/file/file/upload"
                        :onSuccess="signTableSuccess"/>
                </FormItem>
                <FormItem label="培训反馈表" prop="reformReport">
                    <hyUpload
                        ref="feedbackUpload"
                        action="/api/file/file/upload"
                        :onSuccess="feedbackSuccess"/>
                </FormItem>
            </Form>
        </div>
        <div slot="footer">
            <Button class="modalBtn" type="primary" @click="handleSubmit" size="large">确定</Button>
            <Button class="modalBtn" type="default" @click="showModal = false" size="large">关闭</Button>
        </div>
    </Modal>
</template>

<script>
// 文件上传
import hyUpload from '@/components/hengyun/hyUpload'
export default {
    components: {
        hyUpload
    },
    data(){
        return{
            showModal: false,
            signFileList: [],
            feedbackFileList: [],
            // 操作的行的id
            id: ''
        }
    },
    methods: {
        handleSubmit() {
            const vm = this
            const files = []
            const allFile = [...vm.signFileList, ...vm.feedbackFileList]
            allFile.map(item => {
                const file = item.response.data.list[0]
                files.push({
                    bussId: vm.id,
                    fileId: file.id,
                    fileSize: file.size,
                    fileUrl: file.url,
                    name: file.submittedFileName,
                    type: file.ext
                })
            })
            vm.$emit('on-ok', files)
            vm.showModal = false
        },
        signTableSuccess(resp, file, fileList) {
            this.signFileList = fileList
        },
        feedbackSuccess(resp, file, fileList) {
            this.feedbackFileList = fileList
        },
        open(id) {
            this.id = id
            this.$refs.signUpload.clearFiles()
            this.$refs.feedbackUpload.clearFiles()
            this.showModal = true
            this.signFileList = []
            this.feedbackFileList = []
        }
    }
}
</script>

<style scoped>
.ivu-form-item >>> .ivu-form-item-content{
    height:auto;
}
.ivu-input-wrapper >>> textarea{
    resize: none;
}
.download,.download:hover{
    width: 100px;
    height: 32px;
    line-height: 30px;
    color: #000;
    float: left;
}
</style>
