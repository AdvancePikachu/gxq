<template>
	<Layout>
		<Content>
			<Breadcrumb>
				<BreadcrumbItem>安全保障平台</BreadcrumbItem>
				<BreadcrumbItem>程序发布管理</BreadcrumbItem>
			</Breadcrumb>
			<Card>
				<Form ref="formValidate" :model="formData" inline :label-width="60">
					<FormItem label="系统名称">
						<Select v-model="formData.name" style="min-width: 150px;">
							<Option value="-1">全部</Option>
							<Option v-for="(name, idx) in systemNames" :value="name.applicationName" :key="idx">{{name.applicationName}}</Option>
						</Select>
					</FormItem>
					<FormItem label="审核状态">
						<Select v-model="formData.auditStatus" style="min-width: 80px;">
							<Option value="-1">全部</Option>
							<Option value="1">已审核</Option>
							<Option value="2">未审核</Option>
						</Select>
					</FormItem>
					<FormItem label="日期范围">
						<DatePicker type="daterange" v-model="dateRange"> </DatePicker>
					</FormItem>
					<FormItem :label-width="30">
						<Button type="info" @click="getProgram">查询</Button>
					</FormItem>
					<router-link to="/programRelease/create" class="right">
						<Button type="success">发布新版本</Button>
					</router-link>
				</Form>
				<Table border ref="selection" :columns="columns" :data="data"></Table>
				<div class="bottom-bar">
					<Page :total="pageOption.total" :page-size="pageOption.pageSize" @on-change="pageChange" @on-page-size-change="changePageSize" show-sizer show-elevator></Page>
				</div>
			</Card>
		</Content>
		<Modal v-model="modal" title="审核" class-name="vertical-center-modal" width="60%">
			<examine :id="selectedId" ref="examine" @examine="examineSave"></examine>
			<div slot="footer">
				<Button type="primary" @click="handleSubmit('examine')">确认</Button>
				<Button type="text" @click="closeModal">取消</Button>
			</div>
		</Modal>
	</Layout>
</template>

<script>
	import examine from './examine'
	import api from '@/api/axiosApi'
	import apiList from '@/api/securityApiList'
	export default {
		data() {
			return {
				modal: false, //模态框显示状态
				systemNames: [],
				formData: {
					name: '-1', //系统名称
					startDate: '', //开始时间
					endDate: '', //结束时间
					auditStatus: "-1" //审批状态
				},
				selectedId: '', //点击审批时记录的当前系统版本的id
				dateRange: [],
				pageOption: {
					current: 1,
					total: 0,
					pageSize: 20
				},
				columns: [{
						type: 'index',
						title: '序号',
						width: 60,
						align: 'center'
					},
					{
						title: '系统名称',
						key: 'name'
					},
					{
						title: '发布日期',
						key: 'upgradeTime'
					},
					{
						title: '版本名称',
						key: 'versionName'
					},
					{
						title: '发布版本号',
						key: 'versionId'
					},
					{
						title: '升级内容',
						key: 'upgradeConent'
					},
					{
						title: '发布服务器',
						key: 'serverIp'
					},
					{
						title: '审核状态',
						key: 'auditStatus',
						render(h, params) {
							if(params.row.auditStatus == 0) {
								return h('div', [
									h('span', {
										style: {
											color: 'red'
										}
									}, '未审核')
								])
							} else {
								return h('div', [
									h('span', {}, '已审核')
								])
							}
						}
					},
					{
						title: '操作',
						key: 'act',
						align: 'center',
						render: (h, params) => {
							if(params.row.auditStatus == 0) {
								return h('div', [
									h('Button', {
										props: {
											type: 'primary',
											size: 'small'
										},
										style: {
											marginRight: '5px'
										},
										on: {
											click: () => {
												this.modal = true;
												this.selectedId = params.row.id;
											}
										}
									}, '审核')
								]);
							} else {
								return h('div', [
									h('Button', {
										props: {
											type: 'primary',
											size: 'small'
										},
										on: {
											click: () => {
												this.$router.push({
													path: "/programRelease/" + params.row.id,
												});
											}
										}
									}, '查看')
								]);
							}
						}
					},
				],
				data: []
			}
		},
		components: {
			examine
		},
		methods: {
			init() {
				hy_auth_login();
				let d = new Date();
				this.formData.startDate = this.formData.endDate = d.getFullYear() + '-' + (d.getMonth() + 1) + '-' + d.getDate();
				this.dateRange = [];
				this.dateRange.push(this.formData.startDate);
				this.dateRange.push(this.formData.endDate);
				this.getSystemName();
			},
			getSystemName() {
				api(apiList.getSystemName).then((res) => {
					if(res.status == 200 && res.data.data) {
						this.systemNames = res.data.data;
						this.getProgram();
					}
				}, (err) => {
					//dong something...
				})
			},
			getProgram() { //获取程序
				let params = {
					data: this.formData,
					pageNo: this.pageOption.current,
					pageSize: this.pageOption.pageSize
				}
				api(apiList.getProgram, params).then((res) => {
					if(res.status == 200 && res.data.data.list) {
						this.data = res.data.data.list;
						this.pageOption.total = res.data.data.pages;
					}
				}, (err) => {
					//dong something...
				})
			},
			examineSave(param) {
				param.id = this.selectedId;
				api(apiList.auditProgram, param).then((res) => {
					if(res.status == 200) {
						this.modal = false;
						this.getProgram();
					} else {
						this.$Message.error('审核失败');
					}
				}, (err) => {
					//do something...
				})
			},
			handleSubmit(name) {
				this.$refs[name].handleSubmit("examineData");
			},
			closeModal() {
				this.modal = false;
			},
			pageChange(num) { //页码改变的回调
				this.pageOption.current = num;
				this.getProgram();
			},
			changePageSize(num) { //切换每页条数时的回调
				this.pageOption.pageSize = num;
				this.getProgram();
			}
		},
		watch: {
			dateRange: function(val, oldVal) {
				let d1 = new Date(val[0]);
				let d2 = new Date(val[1]);
				this.formData.startDate = d1.getFullYear() + '-' + (d1.getMonth() + 1) + '-' + d1.getDate();
				this.formData.endDate = d2.getFullYear() + '-' + (d2.getMonth() + 1) + '-' + d2.getDate();
			}
		},
		created() {
			this.$nextTick(() => {
				this.init();
			})
		}
	}
</script>

<style type="text/css" scoped>
	.w168 {
		width: 168px;
	}
</style>