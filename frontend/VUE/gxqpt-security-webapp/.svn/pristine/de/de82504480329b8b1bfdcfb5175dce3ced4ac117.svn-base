<template>
	<Layout>
		<Content>
			<Breadcrumb>
				<BreadcrumbItem>培训管理</BreadcrumbItem>
				<BreadcrumbItem>培训处理</BreadcrumbItem>
			</Breadcrumb>
			<Card>
				<Form :model="searchCondition" ref="searchCondition" inline :label-width="80">
                    <FormItem label="培训时间" prop="serviceDate">
                        <DatePicker type="daterange" v-model="trainTime" show-week-numbers placement="bottom-end" placeholder="请选择培训时间" style="width: 200px"></DatePicker>
                    </FormItem>
                    <FormItem label="培训类别" prop="type">
                        <Select v-model="searchCondition.type" style="width: 140px;">
                            <Option value="">全部</Option>
                            <Option value="类别1">类别1</Option>
                            <Option value="类别2">类别2</Option>
                        </Select>
                    </FormItem>
                    <FormItem label="培训名称" prop="name">
                        <Input v-model="searchCondition.name" style="width: 140px;"></Input>
                    </FormItem>
                    <FormItem label="培训内容" prop="context">
                        <Input v-model="searchCondition.context" style="width: 140px;"></Input>
                    </FormItem>
                    <FormItem label="提交单位" prop="company">
                        <Select v-model="searchCondition.company" style="width: 140px;">
                            <Option value="">全部</Option>
                            <Option value="单位1">单位1</Option>
                            <Option value="单位2">单位2</Option>
                            <Option value="单位3">单位3</Option>
                        </Select>
                    </FormItem>
                    <FormItem label="提交人" prop="person">
                        <Select v-model="searchCondition.person" style="width: 140px;">
                            <Option value="">全部</Option>
                            <Option value="张三">张三</Option>
                            <Option value="李四">李四</Option>
                        </Select>
                    </FormItem>
					<FormItem label="状态" prop="status">
						<Select v-model="searchCondition.status" style="width: 140px;">
                            <Option value="">全部</Option>
                            <Option :value="1">申请</Option>
                            <Option :value="2">驳回</Option>
                            <Option :value="3">同意</Option>
                            <Option :value="4">驳回后申请</Option>
                            <Option :value="5">完结</Option>
                        </Select>
					</FormItem>
					<FormItem>
						<Button type="info" @click="search">查询</Button>
					</FormItem>
				</Form>
                <hy-table
                    highlight-row
                    border
                    :columns="tableList.columns"
                    :data="tableList.data"
                    :total="Number(pageInfo.total)"
                    :pageSize="Number(pageInfo.pageSize)"
                    pageType="small"
                    show-elevator
                    show-sizer
                    ref="thisTable"
                    @on-page-change="search" />
			</Card>
		</Content>
        <uploadModal @on-ok="uploadFile" ref="uploadModal"></uploadModal>
	</Layout>
</template>
<script>
import api from '@/api/axiosApi'
import operationApiList from '@/api/operationApiList'
import uploadModal from "./trainModal/uploadModal.vue"

function getDateRange(time) {
  if (!time) {
    return ''
  }
  // 结束日期
  const endDate = new Date(time)
  // 当前日期往前推30天
  const startDate = new Date(time - 30 * 24 * 60 * 60 * 1000)
  return {
    start: `${startDate.getFullYear()}-${startDate.getMonth() + 1}-${startDate.getDate()}`,
    end: `${endDate.getFullYear()}-${endDate.getMonth() + 1}-${endDate.getDate()}`
  }
}

export default {
    components: {
        uploadModal
    },
    data() {
        const vm = this
        const date = getDateRange(Date.now())
        return {
            download: false,
            upload: false,
            searchCondition: {
                type: '',
                name: '',
                context: '',
                company: '',
                person: '',
                status: ''
            },
            tableList: {
                columns: [{
                    title: '序号',
                    type: 'index',
                    width: 80,
                    align: 'center'
                }, {
                    title: '培训类型',
                    key: 'type'
                }, {
                    title: '培训名称',
                    key: 'name'
                }, {
                    title: '培训时间',
                    key: 'trainTime'
                }, {
                    title: '培训地址',
                    key: 'trainAddress'
                }, {
                    title: '培训内容',
                    key: 'context'
                }, {
                    title: '状态',
                    key: 'status',
                    render: (h, params) => {
                        const status = ['--', '申请', '驳回', '同意', '驳回后申请', '完结']
                        return h('span', status[params.row.status])
                    }
                }, {
                    title: '培训评分',
                    key: 'trainSorce',
                    width: 100
                }, {
                    title: '培训反馈文件',
                    key: 'trainBackDoc',
                    minWidth: 80,
                    align: 'center',
                    render: (h, params) => {
                        const id = params.row.id
                        return h('div', [
                            h('Button', {
                                props: {
                                    type: 'primary',
                                    size: 'small',
                                    icon:'ios-cloud-upload-outline'
                                },
                                style: {
                                    marginRight:"25px"
                                },
                                on: {
                                    click: () => {
                                        vm.$refs.uploadModal.open(id)
                                    }
                                }
                            }, '上传'),
                            h('Button', {
                                props: {
                                    type: 'primary',
                                    size: 'small',
                                    icon:'ios-cloud-download-outline'
                                },
                                on: {
                                    click: () => {
                                        
                                    }
                                }
                            }, '下载')
                        ]);
                    }
                }, {
                    title: '操作',
                    type: 'act',
                    width: 100,
                    align: 'center',
                    render: (h, params) => {
                        const id = params.row.id
                        return h('div', [
                            h('Button', {
                                props: {
                                    type: 'primary',
                                    size: 'small'
                                },
                                style: {
                                    marginRight: '5px'
                                },
                                on: {
                                    click: () => {
                                        vm.endTrain(id)
                                    }
                                }
                            }, '完结'),
                        ]);
                    }
                }],
                data: []
            },
            pageInfo: {
                pageNo: 1,
                pageSize: 10,
                total: 0
            },
            // 培训时间的数组
            trainTime: [date.start, date.end],
        }
    },
    mounted () {
        this.search()
    },
    methods: {
        // 搜索列表
        doSearch(pageNo, pageSize) {
            const vm = this
            const endTime = getDateRange(vm.trainTime[1]).end
            const startTime = getDateRange(vm.trainTime[0]).end
            api(operationApiList.trainAuditorPage, {
                pageNo: pageNo || vm.pageInfo.pageNo,
                pageSize: pageSize || vm.pageInfo.pageSize,
                data: vm.searchCondition,
                createTimeEnd: endTime ? `${endTime} 23:59:59` : '',
                createTimeStart: startTime ? `${startTime} 00:00:00` : ''
            }).then(res => {
                if (res.data.errcode === 0) {
                    const result = res.data.data
                    vm.pageInfo.pageNo = result.pageNum
                    vm.pageInfo.total = result.total
                    vm.tableList.data = result.list
                }
            }, error => {console.log(error)})
        },
        search() {
            this.doSearch()
        },
        // 完结
        endTrain(id) {
            const vm = this
            api(operationApiList.trainEndUpdate, {
                id: id
            }).then(res => {
                if (res.data.errcode === 0) {
                    vm.$Message.success('完结成功！！！')
                    vm.search()
                }
            }, error => {console.log(error)})
        },
        // 文件上传
        uploadFile(files) {
            const vm = this
            api(operationApiList.trainFileSave, {
                files
            }).then(res => {
                if (res.data.errcode === 0) {
                    debugger
                }
            }, error => {console.log(error)})
        }
    }
}
</script>
<style scoped="scoped">
	.act-btn-group button{
        margin: 0 12px;
    }
    .ivu-modal-footer{
        display: none;
    }
    .ivu-form-item >>> .ivu-form-item-content{
        height:auto;
    }
    .ivu-input-wrapper >>> textarea{
        resize: none;
    }
</style>