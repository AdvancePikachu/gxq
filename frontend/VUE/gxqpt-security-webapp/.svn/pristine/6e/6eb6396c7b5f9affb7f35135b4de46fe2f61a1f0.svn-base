<template>
	<Layout>
		<Content>
			<Breadcrumb>
				<BreadcrumbItem>安全保障平台</BreadcrumbItem>
				<BreadcrumbItem>备份监控</BreadcrumbItem>
			</Breadcrumb>
			<Card>
				<Form ref="formValidate" :model="formData" inline :label-width="90">
					<FormItem label="备份系统名称">
						<Select :value='formData.applicationName' @on-query-change="applicationNameChange" style="min-width: 150px;">
							<Option v-for="(name,index) of systemNames" :value="name.applicationName" :key="index">{{name.applicationName}}</Option>
						</Select>
					</FormItem>
					<FormItem label="备份名称" :label-width="80">
						<Select :value='formData.name' style="min-width: 150px;" @on-query-change="nameChange">
							<Option v-for="(name,index) of BackupNames" :value="name.name" :key="index">{{name.name}}</Option>
						</Select>
					</FormItem>
				</Form>
				<div id='calendar' style="width: 100%;height: 700px;"></div>
				<div class="clearfix"> </div>
			</Card>
		</Content>
	</Layout>
</template>
<script>
	import $ from 'jquery'
	import calendar from '@static/Simple-Calendar' //使用日历模板
	import api from '@/api/axiosApi'
	import apiList from '@/api/securityApiList'
	export default {
		data() {
			return {
				systemNames: [],
				BackupNames: [],
				myCalendar: null,
				formData: {
					yearMonth: '',
				}
			}
		},
		methods: {
			init() {
				this.getSystemName();
			},
			getSystemName() {
				api(apiList.getSystemName).then((res) => {
					if(res.status == 200 && res.data.data) {
						this.systemNames = res.data.data;
						this.formData.applicationName = res.data.data[0].applicationName;
						this.getBackupName();
					}
				}, (err) => {
					//dong something...
				})
			},
			getBackupName() {
				api(apiList.getBackupName).then((res) => {
					if(res.status == 200) {
						this.BackupNames = res.data.data;
						this.formData.name = res.data.data[0].name;
						this.getBackupLog();
					}
				})
			},
			applicationNameChange(val) {
				this.formData.applicationName = val;
				this.getBackupLog()
			},
			nameChange(val) {
				this.formData.name = val;
				this.getBackupLog()
			},
			getBackupLog() {
				this.formData.yearMonth = this.myCalendar.getYearMonth();
				var d = new Date();
				var year = this.formData.yearMonth.split('-')[0];
				var month = this.formData.yearMonth.split('-')[1];
				$('.sc-item:not(.sc-othermenth)').removeClass('sc-backup');
				$('.sc-item:not(.sc-othermenth)').removeClass('sc-backup-err');
				api(apiList.getBackupLog, this.formData).then((res) => {
					if(res.status == 200) {
						if(res.data.errcode != 0) {
							this.$Message.error(res.data.errmsg);
						} else {
							var arr = [];
							res.data.data.forEach(function(item) {
								arr.push(Number(item.createTime.split(' ')[0].split('-')[2]));
							})
							$.each($('.sc-item:not(.sc-othermenth)'), function(idx, item) {
								if(d.getFullYear() >= year) {
									if((d.getMonth() + 1) > month) {
										arr.forEach(function(num) {
											if($(item).find('.day').text() == num) {
												$(item).addClass('sc-backup');
												flag = true;
												return false;
											}
										})
										if(!flag) {
											$(item).addClass('sc-backup-err');
										}
									} else if((d.getMonth() + 1) == month) {
										if(d.getDate() >= $(item).find('.day').text()) {
											var flag = false;
											arr.forEach(function(num) {
												if($(item).find('.day').text() == num) {
													$(item).addClass('sc-backup');
													flag = true;
													return false;
												}
											})
											if(!flag) {
												$(item).addClass('sc-backup-err');
											}
										}
									}
								}
							})
						}
					}
				}, (err) => {

				})
			}
		},
		mounted() {
			var _this = this;
			_this.myCalendar = new SimpleCalendar('#calendar', {
				showFestival: false,
				showHoliday: false,
				showSolarTerm: false,
				showLunarFestival: false,
				showMark: false,
				height: '720px',
				callBack: function(year, month) {
					_this.formData.yearMonth = year + '-' + month;
					_this.getBackupLog();
				}
			});
			_this.init();
		}
	}
</script>
<style lang="less" scoped="scoped">
	#calendar /deep/ .sc-item.sc-backup {
		background: #a3fda3;
	}
	
	#calendar /deep/ .sc-item.sc-backup-err {
		background: #ff968e;
	}
</style>