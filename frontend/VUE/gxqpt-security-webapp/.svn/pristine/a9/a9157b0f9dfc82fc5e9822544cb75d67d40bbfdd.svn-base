<template>
  <Layout>
    <Content>
      <Breadcrumb>
        <BreadcrumbItem>部门用户</BreadcrumbItem>
        <BreadcrumbItem>服务器配置变更</BreadcrumbItem>
      </Breadcrumb>
      <Card>
        <Form
          ref="formValidate"
          :label-width="100"
          :model="formInfo">
          <Row>
            <Col span="6">
              <FormItem label="申请单位：">
                <Input
                  type="text"
                  v-model="formInfo.orgname"
                  disabled>
                </Input>
              </FormItem>
            </Col>
            <Col span="6" :offset="1">
              <FormItem label="申请人：">
                <Input
                  type="text"
                  v-model="formInfo.manageUname"
                  disabled>
                </Input>
              </FormItem>
            </Col>
            <Col span="6" :offset="1">
              <FormItem label="服务器ID：">
                <Input
                  type="text"
                  v-model="formInfo.serverId"
                  disabled>
                </Input>
              </FormItem>
            </Col>
          </Row>
          <Row>
            <Col span="6">
              <FormItem label="服务器ip：">
                <Input
                  type="text"
                  v-model="formInfo.ip"
                  disabled>
                </Input>
              </FormItem>
            </Col>
            <Col span="6" :offset="1">
              <FormItem label="申请人邮箱：">
                <Input
                  type="text"
                  v-model="formInfo.applyEmail">
                </Input>
              </FormItem>
            </Col>
          </Row>
          <Row>
            <Col span="13">
              <Form
                ref="applyServer"
                :label-width="100"
                :model="applyServer">
                <FormItem label="CPU：">
                  <RadioGroup v-model="applyServer.cpuCount">
                    <Radio label="2">2核</Radio>
                    <Radio label="4">4核</Radio>
                    <Radio label="8">8核</Radio>
                    <Radio label="16">16核</Radio>
                  </RadioGroup>
                </FormItem>
                <FormItem label="内存：">
                  <RadioGroup v-model="applyServer.memorySize">
                    <Radio label="2">2GB</Radio>
                    <Radio label="4">4GB</Radio>
                    <Radio label="8">8GB</Radio>
                    <Radio label="16">16GB</Radio>
                    <Radio label="32">32GB</Radio>
                    <Radio label="64">64GB</Radio>
                  </RadioGroup>
                </FormItem>
                <FormItem label="操作系统：">
                  <Cascader :data="systemData" @on-change="handleChange" trigger="hover"></Cascader>
                </FormItem>
                <FormItem label="所属网络：">
                  <Select class="queryItem" v-model="applyServer.netScope">
                    <Option value="-1">全部</Option>
                    <Option v-for="netsItem in netScopeArray" :key="netsItem.id" :value="netsItem.name">{{netsItem.name}}</Option>
                  </Select>
                </FormItem>
                <FormItem label="网络带宽：">
                  <Select v-model="applyServer.netWide">
                    <Option v-for="item in netWideData" :value="item.value" :key="item.value">{{item.label}}</Option>
                  </Select>
                </FormItem>
                <FormItem label="网关描述：">
                  <Input
                    type="textarea"
                    v-model="applyServer.gatewayDesc"
                    :rows="5">
                  </Input>
                </FormItem>
                <FormItem label="系统盘大小">
                  <Input type="text" v-model="applyServer.sysDisksize"><span slot="append">GB</span></Input>
                </FormItem>
                <FormItem label="数据盘：">
                  <Button style="float: right;" type="primary" @click="addDisk(applyServer.disks.length)">+添加</Button>
                  <div class="disk" v-for="(item, idx) in applyServer.disks" :key="idx">
                    <FormItem v-model="item.diskName" :label="item.diskName || `数据磁盘${idx+1}：`" :label-width="100">
                      <Col span="12">
                        <Input
                          type="text"
                          v-model="item.diskSize">
                          <span slot="append">GB</span>
                        </Input>
                      </Col>
                      <Col span="4" offset="1">
                        <a @click="handleRemove(idx)">删除</a>
                      </Col>
                    </FormItem>
                  </div>
                </FormItem>
                <FormItem label="申请数量：">
                  <InputNumber v-model="applyServer.applyCount" :editable="false" :min='0'></InputNumber>
                </FormItem>
              </Form>
              <server-config v-if="flag" ref="serverConfig" :applyServer="applyServer" :disks="applyServer.disks" :hidecode="hidecode" />
            </Col>
          </Row>
          <FormItem label="申请原因：">
            <Input
              type="textarea"
              style="width: 400px;"
              v-model="formInfo.applyReason">
            </Input>
          </FormItem>
          <FormItem label="附件说明：" style="margin-top: 40px;">
            <hy-upload ref="evalReport" multiple :on-success="setEvalReport" :on-remove="removeEvalReport" :before-upload="evalBeforeUpload"></hy-upload>
          </FormItem>
          <FormItem>
            <Button type="default" @click="quit">取消</Button>
            <Button type="primary" @click="submit(1)">保存</Button>
            <Button type="primary" @click="submit(2)">提交</Button>
          </FormItem>
        </Form>
      </Card>
    </Content>
  </Layout>
</template>

<script>
// 服务器配置表单
import serverConfig from './../common/serverConfig'
import api from '@/api/axiosApi'
import softhardApiList from '@/api/softhardApiList'
import hyUpload from '@/components/hengyun/hyUpload'
const hidecode = ['操作系统', '网关描述', '申请数量']
function getConfigInfo() {
  return {
    cpuCount:'',
    memorySize:'',
    system:'',
    netScope:'',
    netWide:'',
    content:'',
    sysDisksize:0,
    applyCount: 1,
    disks: [
      {
        diskSize:'',
        diskName:''
      }
    ],
  }
}
export default {
  components: {
    serverConfig,
    hyUpload
  },
  data () {
    return {
      hidecode,
      formInfo: {},
      flag:false,
      applyServer:getConfigInfo(),
      categoryList: [{
        value: 1,
        label: '分类1'
      }],
      typeList: [{
        value: 2,
        label: '类型1'
      }],
      providerList: [{
        value: 3,
        label: '提供方1'
      }]
    }
  },
  mounted(){
    this.servermanagerDetail();
    this.formInfo = this.$route.params.departData;
    // this.applyServer.cpuCount = this.formInfo.cpuCount.toString();
    // this.applyServer.memorySize = this.formInfo.memorySize.toString();
    // this.applyServer.netScope = this.formInfo.netScope;
    // this.servermanagerDetail();
    // this.getApplyServerById();//需求变更，不请求接口数据
  },
  methods: {
    servermanagerDetail() {//获取更多详情}
      let serverId = this.$route.params.departData.id;
      api(softhardApiList.servermanagerDetail, {
        serverId: serverId
      }).then((res) => {
          console.log(res);
          // res.data.data.dtos.forEach(item => {
          //   item.diskName = '数据磁盘' + (item.order+1)
          // })
          this.applyServer = res.data.data;
          this.applyServer.disks = res.data.data.dtos;
          this.applyServer.cpuCount = this.applyServer.cpuCount.toString();
          this.applyServer.memorySize = this.applyServer.memorySize.toString();
          this.applyServer.netWide = parseFloat(this.applyServer.netWide);
          this.flag = true
          console.log(this.applyServer);
        console.log(res);
      }, (err) => {
        //dong something...
      })
    },
    getApplyServerById() { // 根据id查询申请服务器资源
      api(softhardApiList.getApplyServerById,{id:this.$route.params.departData.serverId}).then((res) => {
        if(res.data.errcode == 0){
          console.log(res);
          res.data.data.disks.forEach(item => {
            item.diskName = '数据磁盘' + (item.order+1)
          })
          this.applyServer = res.data.data;
          this.applyServer.cpuCount = this.applyServer.cpuCount.toString();
          this.applyServer.memorySize = this.applyServer.memorySize.toString();
          this.applyServer.netScope = parseFloat(this.applyServer.netScope);
          this.applyServer.netWide = parseFloat(this.applyServer.netWide);
          console.log(this.applyServer);
        }else{
          this.$Message.error(res.data.errmsg);
        }
      }, (err) => {
        //dong something...
      })
    },
    validForm() {
      this.$refs['formInfo'].validate();
    },
    evalBeforeUpload() { //文件上传前清空
      // this.$refs.evalReport.$children[0].clearFiles();
    },
    setEvalReport(response, file, fileList) {
      if(this.$route.params.id != 3){
        this.formInfo.attachment = [];
      }
      console.log(fileList);
      fileList.forEach(item => {
        let obj = {};
        if(item.response){
          obj.busType = 'hd_applymanage_upload';
          obj.fileName = item.response.data.list[0].submittedFileName;
          obj.fileSize = item.response.data.list[0].size;
          obj.fileType = item.response.data.list[0].mime;
          obj.fileUrl = item.response.data.list[0].url;
          obj.name = item.response.data.list[0].submittedFileName;
          obj.url = item.response.data.list[0].url;
          this.formInfo.attachment.push(obj);
        }
      });
      console.log(this.formInfo);
      this.validForm();
    },
    removeEvalReport(file, fileList) {
      if(fileList.length) {
        this.evalFormData.evalReport = 'ok';
      } else {
        this.evalFormData.evalReport = '';
      }
      this.validForm();
    },
    submit(type){//保存申请服务器
      let data = {};
      data = this.dataM(this.formInfo,type);
      console.log(data);
      api(softhardApiList.saveMyApply,data).then((res) => {
        if(res.data.errcode == 0) {
          this.$router.go(-1);//返回上一页
        }else{
            this.$Message.error(res.data.errmsg);
        }
      }, (error) => {})
    },
    dataM(formInfo,type){//保存的数据整理
      let data = {};
      data.applyEmail = formInfo.applyEmail;//申请人邮箱
      data.applyOrgid = formInfo.orgid;//申请单位id
      data.applyOrgname = formInfo.orgname;//申请单位名称
      data.applyReason = formInfo.applyReason;//申请原因
      data.serverKeyid = formInfo.id;//服务器变更id
      data.applyServer = [];
      data.applyServer.push(this.applyServer);//服务器申请
      data.applyType = 2;//申请类型(1新增2变更)
      data.attachment = formInfo.attachment;//附件集合
      data.id = formInfo.id;//主键
      data.type = type;//提交类型：1仅保存，2提交
      data.applyServer.forEach(item => {
        item.cpuCount = parseFloat(item.cpuCount);
        item.memorySize = parseFloat(item.memorySize);
        item.netScope = item.netScope.toString();
      })
      return data;
    },
    // 取消
    quit () {
      this.$router.go(-1)
    },
    // 弹框需要调用的方法
    addDisk (len) {
      let diskItem = {diskSize:'', diskName:''};
      this.configInfo.applyServer.disks.push(diskItem);
    },
    handleRemove (idx) {
      this.configInfo.applyServer.disks.splice(idx,1);
    },
    handleChange(value, selecteddata) {
      if(selecteddata.length>0){
        let val = selecteddata.map(o => o.value).reverse();
        this.configInfo.applyServer.system = val[0];
      }else{
        this.configInfo.applyServer.system = "";
      }
    },
  }
}
</script>
