<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.hengyunsoft.platform.warn.repository.dao.WarnTimeSlotMapper">
  <resultMap id="BaseResultMap" type="com.hengyunsoft.platform.warn.entity.po.WarnTimeSlot">
    <!--
    @mbggenerated
    -->
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="app_id" jdbcType="VARCHAR" property="appId" />
    <result column="app_name" jdbcType="VARCHAR" property="appName" />
    <result column="pending" jdbcType="INTEGER" property="pending" />
    <result column="new_come" jdbcType="INTEGER" property="newCome" />
    <result column="handled" jdbcType="INTEGER" property="handled" />
    <result column="confirm" jdbcType="INTEGER" property="confirm" />
    <result column="unconfirm" jdbcType="INTEGER" property="unconfirm" />
    <result column="statistical_time" jdbcType="VARCHAR" property="statisticalTime" />
    <result column="avg_handle_time" jdbcType="VARCHAR" property="avgHandleTime" />
    <result column="avg_confirm_time" jdbcType="VARCHAR" property="avgConfirmTime" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <!--
    @mbggenerated
    -->
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <!--
    @mbggenerated
    -->
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    <!--
    @mbggenerated
    -->
    id, app_id, app_name, pending, new_come, handled, confirm, unconfirm,statistical_time, avg_handle_time,
    avg_confirm_time, create_time
  </sql>
  <select id="selectByExample" parameterType="com.hengyunsoft.platform.warn.repository.example.WarnTimeSlotExample" resultMap="BaseResultMap">
    <!--
    @mbggenerated
    -->
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from b_warn_timeslot
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="groupByClause != null">
      group by ${groupByClause}
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <if test="limitValue != null">
      limit ${limitValue}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    <!--
    @mbggenerated
    -->
    select 
    <include refid="Base_Column_List" />
    from b_warn_timeslot
    where id = #{id,jdbcType=BIGINT}
  </select>
  <select id="selectEntity" parameterType="com.hengyunsoft.platform.warn.repository.example.WarnTimeSlotExample" resultMap="BaseResultMap">
    <!--
    @mbggenerated
    -->
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from b_warn_timeslot
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="groupByClause != null">
      group by ${groupByClause}
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    limit 0,1 
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    <!--
    @mbggenerated
    -->
    delete from b_warn_timeslot
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.hengyunsoft.platform.warn.repository.example.WarnTimeSlotExample">
    <!--
    @mbggenerated
    -->
    delete from b_warn_timeslot
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <update id="removeByExample" parameterType="com.hengyunsoft.platform.warn.entity.po.WarnTimeSlot">
    <!--
    @mbggenerated
    -->
    update b_warn_timeslot
    set is_delete = 1 

    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </update>
  <update id="removeByPrimaryKey" parameterType="java.lang.Long">
    <!--
    @mbggenerated
    -->
    update b_warn_timeslot
    set is_delete = 1 

     where 1=1 and id = #{id,jdbcType=BIGINT}
  </update>
  <insert id="insert" parameterType="com.hengyunsoft.platform.warn.entity.po.WarnTimeSlot">
    <!--
    @mbggenerated
    -->
    insert into b_warn_timeslot (id, app_id, app_name, 
      pending, new_come, handled, confirm, unconfirm,
      statistical_time, avg_handle_time, avg_confirm_time, 
      create_time)
    values (#{id,jdbcType=BIGINT}, #{appId,jdbcType=VARCHAR}, #{appName,jdbcType=VARCHAR}, 
      #{pending,jdbcType=INTEGER}, #{newCome,jdbcType=INTEGER}, #{handled,jdbcType=INTEGER}, #{confirm,jdbcType=INTEGER}, #{unconfirm,jdbcType=INTEGER}, 
      #{statisticalTime,jdbcType=VARCHAR}, #{avgHandleTime,jdbcType=VARCHAR}, #{avgConfirmTime,jdbcType=VARCHAR}, 
      #{createTime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="batchInsert" parameterType="java.util.List">
    <!--
    @mbggenerated
    -->
    insert into b_warn_timeslot (id, app_id, app_name, pending, new_come, handled, confirm, unconfirm,statistical_time, avg_handle_time, avg_confirm_time, create_time ) values 
    <foreach collection="list" index="index" item="item" separator=",">
      (#{item.id,jdbcType=BIGINT}, #{item.appId,jdbcType=VARCHAR}, #{item.appName,jdbcType=VARCHAR}, 
        #{item.pending,jdbcType=INTEGER}, #{item.newCome,jdbcType=INTEGER}, #{item.handled,jdbcType=INTEGER}, #{item.confirm,jdbcType=INTEGER}, #{item.unconfirm,jdbcType=INTEGER}, 
        #{item.statisticalTime,jdbcType=VARCHAR}, #{item.avgHandleTime,jdbcType=VARCHAR}, 
        #{item.avgConfirmTime,jdbcType=VARCHAR}, #{item.createTime,jdbcType=TIMESTAMP})
    </foreach>
  </insert>
  <insert id="insertSelective" parameterType="com.hengyunsoft.platform.warn.entity.po.WarnTimeSlot">
    <!--
    @mbggenerated
    -->
    insert into b_warn_timeslot
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="appId != null">
        app_id,
      </if>
      <if test="appName != null">
        app_name,
      </if>
      <if test="pending != null">
        pending,
      </if>
      <if test="newCome != null">
        new_come,
      </if>
      <if test="handled != null">
        handled,
      </if> 
      <if test="confirm != null">
        confirm,
      </if> 
      <if test="unconfirm != null">
        unconfirm,
      </if>
      <if test="statisticalTime != null">
        statistical_time,
      </if>
      <if test="avgHandleTime != null">
        avg_handle_time,
      </if>
      <if test="avgConfirmTime != null">
        avg_confirm_time,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=BIGINT},
      </if>
      <if test="appId != null">
        #{appId,jdbcType=VARCHAR},
      </if>
      <if test="appName != null">
        #{appName,jdbcType=VARCHAR},
      </if>
      <if test="pending != null">
        #{pending,jdbcType=INTEGER},
      </if>
      <if test="newCome != null">
        #{newCome,jdbcType=INTEGER},
      </if>
      <if test="handled != null">
        #{handled,jdbcType=INTEGER},
      </if>
      <if test="confirm != null">
        #{confirm,jdbcType=INTEGER},
      </if>
      <if test="unconfirm != null">
        #{unconfirm,jdbcType=INTEGER},
      </if>
      <if test="statisticalTime != null">
        #{statisticalTime,jdbcType=VARCHAR},
      </if>
      <if test="avgHandleTime != null">
        #{avgHandleTime,jdbcType=VARCHAR},
      </if>
      <if test="avgConfirmTime != null">
        #{avgConfirmTime,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.hengyunsoft.platform.warn.repository.example.WarnTimeSlotExample" resultType="java.lang.Integer">
    <!--
    @mbggenerated
    -->
    select count(*) from b_warn_timeslot
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    <!--
    @mbggenerated
    -->
    update b_warn_timeslot
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.appId != null">
        app_id = #{record.appId,jdbcType=VARCHAR},
      </if>
      <if test="record.appName != null">
        app_name = #{record.appName,jdbcType=VARCHAR},
      </if>
      <if test="record.pending != null">
        pending = #{record.pending,jdbcType=INTEGER},
      </if>
      <if test="record.newCome != null">
        new_come = #{record.newCome,jdbcType=INTEGER},
      </if>
      <if test="record.handled != null">
        handled = #{record.handled,jdbcType=INTEGER},
      </if> 
      <if test="record.confirm != null">
        confirm = #{record.confirm,jdbcType=INTEGER},
      </if> 
      <if test="record.unconfirm != null">
        unconfirm = #{record.unconfirm,jdbcType=INTEGER},
      </if>
      <if test="record.statisticalTime != null">
        statistical_time = #{record.statisticalTime,jdbcType=VARCHAR},
      </if>
      <if test="record.avgHandleTime != null">
        avg_handle_time = #{record.avgHandleTime,jdbcType=VARCHAR},
      </if>
      <if test="record.avgConfirmTime != null">
        avg_confirm_time = #{record.avgConfirmTime,jdbcType=VARCHAR},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    <!--
    @mbggenerated
    -->
    update b_warn_timeslot
    set id = #{record.id,jdbcType=BIGINT},
      app_id = #{record.appId,jdbcType=VARCHAR},
      app_name = #{record.appName,jdbcType=VARCHAR},
      pending = #{record.pending,jdbcType=INTEGER},
      new_come = #{record.newCome,jdbcType=INTEGER},
      handled = #{record.handled,jdbcType=INTEGER},
      confirm = #{record.confirm,jdbcType=INTEGER},
      unconfirm = #{record.unconfirm,jdbcType=INTEGER},
      statistical_time = #{record.statisticalTime,jdbcType=VARCHAR},
      avg_handle_time = #{record.avgHandleTime,jdbcType=VARCHAR},
      avg_confirm_time = #{record.avgConfirmTime,jdbcType=VARCHAR},
      create_time = #{record.createTime,jdbcType=TIMESTAMP}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.hengyunsoft.platform.warn.entity.po.WarnTimeSlot">
    <!--
    @mbggenerated
    -->
    update b_warn_timeslot
    <set>
      <if test="appId != null">
        app_id = #{appId,jdbcType=VARCHAR},
      </if>
      <if test="appName != null">
        app_name = #{appName,jdbcType=VARCHAR},
      </if>
      <if test="pending != null">
        pending = #{pending,jdbcType=INTEGER},
      </if>
      <if test="newCome != null">
        new_come = #{newCome,jdbcType=INTEGER},
      </if>
      <if test="handled != null">
        handled = #{handled,jdbcType=INTEGER},
      </if>
      <if test="confirm != null">
        confirm = #{confirm,jdbcType=INTEGER},
      </if>
      <if test="unconfirm != null">
        unconfirm = #{unconfirm,jdbcType=INTEGER},
      </if>
      <if test="statisticalTime != null">
        statistical_time = #{statisticalTime,jdbcType=VARCHAR},
      </if>
      <if test="avgHandleTime != null">
        avg_handle_time = #{avgHandleTime,jdbcType=VARCHAR},
      </if>
      <if test="avgConfirmTime != null">
        avg_confirm_time = #{avgConfirmTime,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.hengyunsoft.platform.warn.entity.po.WarnTimeSlot">
    <!--
    @mbggenerated
    -->
    update b_warn_timeslot
    set app_id = #{appId,jdbcType=VARCHAR},
      app_name = #{appName,jdbcType=VARCHAR},
      pending = #{pending,jdbcType=INTEGER},
      new_come = #{newCome,jdbcType=INTEGER},
      handled = #{handled,jdbcType=INTEGER},, 
      confirm = #{confirm,jdbcType=INTEGER},
      unconfirm = #{unconfirm,jdbcType=INTEGER},
      statistical_time = #{statisticalTime,jdbcType=VARCHAR},
      avg_handle_time = #{avgHandleTime,jdbcType=VARCHAR},
      avg_confirm_time = #{avgConfirmTime,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>