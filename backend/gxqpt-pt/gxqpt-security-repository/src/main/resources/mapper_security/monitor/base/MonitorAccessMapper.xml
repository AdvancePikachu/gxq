<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.hengyunsoft.platform.security.repository.monitor.dao.MonitorAccessMapper">
  <resultMap id="BaseResultMap" type="com.hengyunsoft.platform.security.entity.monitor.po.MonitorAccess">
    <!--
    @mbggenerated
    -->
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="from_server_ip" jdbcType="VARCHAR" property="fromServerIp" />
    <result column="account" jdbcType="VARCHAR" property="account" />
    <result column="login_time" jdbcType="TIMESTAMP" property="loginTime" />
    <result column="logout_time" jdbcType="TIMESTAMP" property="logoutTime" />
    <result column="login_duration" jdbcType="VARCHAR" property="loginDuration" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="to_server_ip" jdbcType="VARCHAR" property="toServerIp" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <!--
    @mbggenerated
    -->
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <!--
    @mbggenerated
    -->
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    <!--
    @mbggenerated
    -->
    id, from_server_ip, account, login_time, logout_time, login_duration, create_time, 
    to_server_ip
  </sql>
  <select id="selectByExample" parameterType="com.hengyunsoft.platform.security.repository.monitor.example.MonitorAccessExample" resultMap="BaseResultMap">
    <!--
    @mbggenerated
    -->
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from se_monitor_access
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="groupByClause != null">
      group by ${groupByClause}
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <if test="limitValue != null">
      limit ${limitValue}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    <!--
    @mbggenerated
    -->
    select 
    <include refid="Base_Column_List" />
    from se_monitor_access
    where id = #{id,jdbcType=BIGINT}
  </select>
  <select id="selectEntity" parameterType="com.hengyunsoft.platform.security.repository.monitor.example.MonitorAccessExample" resultMap="BaseResultMap">
    <!--
    @mbggenerated
    -->
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from se_monitor_access
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="groupByClause != null">
      group by ${groupByClause}
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    limit 0,1 
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    <!--
    @mbggenerated
    -->
    delete from se_monitor_access
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.hengyunsoft.platform.security.repository.monitor.example.MonitorAccessExample">
    <!--
    @mbggenerated
    -->
    delete from se_monitor_access
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <update id="removeByExample" parameterType="com.hengyunsoft.platform.security.entity.monitor.po.MonitorAccess">
    <!--
    @mbggenerated
    -->
    update se_monitor_access
    set is_delete = 1 

    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </update>
  <update id="removeByPrimaryKey" parameterType="java.lang.Long">
    <!--
    @mbggenerated
    -->
    update se_monitor_access
    set is_delete = 1 

     where 1=1 and id = #{id,jdbcType=BIGINT}
  </update>
  <insert id="insert" parameterType="com.hengyunsoft.platform.security.entity.monitor.po.MonitorAccess">
    <!--
    @mbggenerated
    -->
    insert into se_monitor_access (id, from_server_ip, account, 
      login_time, logout_time, login_duration, 
      create_time, to_server_ip)
    values (#{id,jdbcType=BIGINT}, #{fromServerIp,jdbcType=VARCHAR}, #{account,jdbcType=VARCHAR}, 
      #{loginTime,jdbcType=TIMESTAMP}, #{logoutTime,jdbcType=TIMESTAMP}, #{loginDuration,jdbcType=INTEGER}, 
      #{createTime,jdbcType=TIMESTAMP}, #{toServerIp,jdbcType=VARCHAR})
  </insert>
  <insert id="batchInsert" parameterType="java.util.List">
    <!--
    @mbggenerated
    -->
    insert into se_monitor_access (id, from_server_ip, account, login_time, logout_time, login_duration, create_time, to_server_ip ) values 
    <foreach collection="list" index="index" item="item" separator=",">
      (#{item.id,jdbcType=BIGINT}, #{item.fromServerIp,jdbcType=VARCHAR}, #{item.account,jdbcType=VARCHAR}, 
        #{item.loginTime,jdbcType=TIMESTAMP}, #{item.logoutTime,jdbcType=TIMESTAMP}, #{item.loginDuration,jdbcType=INTEGER}, 
        #{item.createTime,jdbcType=TIMESTAMP}, #{item.toServerIp,jdbcType=VARCHAR})
    </foreach>
  </insert>
  <insert id="insertSelective" parameterType="com.hengyunsoft.platform.security.entity.monitor.po.MonitorAccess">
    <!--
    @mbggenerated
    -->
    insert into se_monitor_access
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="fromServerIp != null">
        from_server_ip,
      </if>
      <if test="account != null">
        account,
      </if>
      <if test="loginTime != null">
        login_time,
      </if>
      <if test="logoutTime != null">
        logout_time,
      </if>
      <if test="loginDuration != null">
        login_duration,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="toServerIp != null">
        to_server_ip,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=BIGINT},
      </if>
      <if test="fromServerIp != null">
        #{fromServerIp,jdbcType=VARCHAR},
      </if>
      <if test="account != null">
        #{account,jdbcType=VARCHAR},
      </if>
      <if test="loginTime != null">
        #{loginTime,jdbcType=TIMESTAMP},
      </if>
      <if test="logoutTime != null">
        #{logoutTime,jdbcType=TIMESTAMP},
      </if>
      <if test="loginDuration != null">
        #{loginDuration,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="toServerIp != null">
        #{toServerIp,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.hengyunsoft.platform.security.repository.monitor.example.MonitorAccessExample" resultType="java.lang.Integer">
    <!--
    @mbggenerated
    -->
    select count(*) from se_monitor_access
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    <!--
    @mbggenerated
    -->
    update se_monitor_access
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.fromServerIp != null">
        from_server_ip = #{record.fromServerIp,jdbcType=VARCHAR},
      </if>
      <if test="record.account != null">
        account = #{record.account,jdbcType=VARCHAR},
      </if>
      <if test="record.loginTime != null">
        login_time = #{record.loginTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.logoutTime != null">
        logout_time = #{record.logoutTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.loginDuration != null">
        login_duration = #{record.loginDuration,jdbcType=VARCHAR},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.toServerIp != null">
        to_server_ip = #{record.toServerIp,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    <!--
    @mbggenerated
    -->
    update se_monitor_access
    set id = #{record.id,jdbcType=BIGINT},
      from_server_ip = #{record.fromServerIp,jdbcType=VARCHAR},
      account = #{record.account,jdbcType=VARCHAR},
      login_time = #{record.loginTime,jdbcType=TIMESTAMP},
      logout_time = #{record.logoutTime,jdbcType=TIMESTAMP},
      login_duration = #{record.loginDuration,jdbcType=VARCHAR},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      to_server_ip = #{record.toServerIp,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.hengyunsoft.platform.security.entity.monitor.po.MonitorAccess">
    <!--
    @mbggenerated
    -->
    update se_monitor_access
    <set>
      <if test="fromServerIp != null">
        from_server_ip = #{fromServerIp,jdbcType=VARCHAR},
      </if>
      <if test="account != null">
        account = #{account,jdbcType=VARCHAR},
      </if>
      <if test="loginTime != null">
        login_time = #{loginTime,jdbcType=TIMESTAMP},
      </if>
      <if test="logoutTime != null">
        logout_time = #{logoutTime,jdbcType=TIMESTAMP},
      </if>
      <if test="loginDuration != null">
        login_duration = #{loginDuration,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="toServerIp != null">
        to_server_ip = #{toServerIp,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.hengyunsoft.platform.security.entity.monitor.po.MonitorAccess">
    <!--
    @mbggenerated
    -->
    update se_monitor_access
    set from_server_ip = #{fromServerIp,jdbcType=VARCHAR},
      account = #{account,jdbcType=VARCHAR},
      login_time = #{loginTime,jdbcType=TIMESTAMP},
      logout_time = #{logoutTime,jdbcType=TIMESTAMP},
      login_duration = #{loginDuration,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      to_server_ip = #{toServerIp,jdbcType=VARCHAR}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>