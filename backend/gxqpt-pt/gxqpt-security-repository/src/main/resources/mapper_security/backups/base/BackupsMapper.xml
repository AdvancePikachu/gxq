<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.hengyunsoft.platform.security.repository.backups.dao.BackupsMapper">
  <resultMap id="BaseResultMap" type="com.hengyunsoft.platform.security.entity.backups.po.Backups">
    <!--
    @mbggenerated
    -->
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="app_id" jdbcType="VARCHAR" property="appId" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="application_name" jdbcType="VARCHAR" property="applicationName" />
    <result column="path" jdbcType="VARCHAR" property="path" />
    <result column="file_ext" jdbcType="VARCHAR" property="fileExt" />
    <result column="server_ip" jdbcType="VARCHAR" property="serverIp" />
    <result column="server_account" jdbcType="VARCHAR" property="serverAccount" />
    <result column="server_passwd" jdbcType="VARCHAR" property="serverPasswd" />
    <result column="db_type" jdbcType="INTEGER" property="dbType" />
    <result column="backup_frequency" jdbcType="VARCHAR" property="backupFrequency" />
    <result column="check_mark" jdbcType="BIT" property="checkMark" />
    <result column="start_time" jdbcType="TIMESTAMP" property="startTime" />
    <result column="remarks" jdbcType="VARCHAR" property="remarks" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="create_user" jdbcType="BIGINT" property="createUser" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
    <result column="update_user" jdbcType="BIGINT" property="updateUser" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <!--
    @mbggenerated
    -->
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <!--
    @mbggenerated
    -->
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    <!--
    @mbggenerated
    -->
    id, app_id, name, application_name, path, file_ext, server_ip, server_account, server_passwd, 
    db_type, backup_frequency, check_mark, start_time, remarks, create_time, create_user, 
    update_time, update_user
  </sql>
  <select id="selectByExample" parameterType="com.hengyunsoft.platform.security.repository.backups.example.BackupsExample" resultMap="BaseResultMap">
    <!--
    @mbggenerated
    -->
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from se_backups
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="groupByClause != null">
      group by ${groupByClause}
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <if test="limitValue != null">
      limit ${limitValue}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    <!--
    @mbggenerated
    -->
    select 
    <include refid="Base_Column_List" />
    from se_backups
    where id = #{id,jdbcType=BIGINT}
  </select>
  <select id="selectEntity" parameterType="com.hengyunsoft.platform.security.repository.backups.example.BackupsExample" resultMap="BaseResultMap">
    <!--
    @mbggenerated
    -->
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from se_backups
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="groupByClause != null">
      group by ${groupByClause}
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    limit 0,1 
  </select>
  <select id="selectByAppIdAndId" parameterType="map" resultMap="BaseResultMap">
    <!--
    @mbggenerated
    -->
    select
    <include refid="Base_Column_List" />
    from se_backups
    where 1=1 and app_id = #{appId,jdbcType=VARCHAR} and id = #{id,jdbcType=BIGINT}
  </select>
  <select id="selectAppIdById" parameterType="java.lang.Long" resultType="java.lang.String">
    <!--
    @mbggenerated
    -->
    select app_id 
    from se_backups
    where 1=1 and id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    <!--
    @mbggenerated
    -->
    delete from se_backups
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.hengyunsoft.platform.security.repository.backups.example.BackupsExample">
    <!--
    @mbggenerated
    -->
    delete from se_backups
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <delete id="deleteByIds" parameterType="list">
    <!--
    @mbggenerated
    -->
    delete from  se_backups where id in 
    <foreach collection="list" open="(" close=")" index="index" item="item" separator=",">
      #{item}
    </foreach> 
  </delete>
  <delete id="deleteByAppIdAndId" parameterType="map">
    <!--
    @mbggenerated
    -->
    delete from se_backups
    where id = #{id,jdbcType=BIGINT}
     and app_id = #{appId,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByAppIdAndIds" parameterType="map">
    <!--
    @mbggenerated
    -->
    delete from  se_backups where id in 
    <foreach collection="list" open="(" close=")" index="index" item="item" separator=",">
      #{item}
    </foreach> 
     and app_id = #{appId,jdbcType=VARCHAR}
  </delete>
  <update id="removeByExample" parameterType="com.hengyunsoft.platform.security.entity.backups.po.Backups">
    <!--
    @mbggenerated
    -->
    update se_backups
    set is_delete = 1 

    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </update>
  <update id="removeByAppIdAndIds" parameterType="map">
    <!--
    @mbggenerated
    -->
    update se_backups
    set is_delete = 1 
 where 1=1 and id in 
 <foreach collection="list" open="(" close=")" index="index" item="item" separator=",">
    #{item}
  </foreach>
     and app_id = #{appId,jdbcType=VARCHAR}
  </update>
  <update id="removeByPrimaryKey" parameterType="java.lang.Long">
    <!--
    @mbggenerated
    -->
    update se_backups
    set is_delete = 1 

     where 1=1 and id = #{id,jdbcType=BIGINT}
  </update>
  <update id="removeByAppIdAndId" parameterType="map">
    <!--
    @mbggenerated
    -->
    update se_backups
    set is_delete = 1 

     where 1=1 and id = #{id,jdbcType=BIGINT}
     and app_id = #{appId,jdbcType=VARCHAR}
  </update>
  <insert id="insert" parameterType="com.hengyunsoft.platform.security.entity.backups.po.Backups">
    <!--
    @mbggenerated
    -->
    insert into se_backups (id, app_id, name, 
      application_name, path, file_ext, 
      server_ip, server_account, server_passwd, 
      db_type, backup_frequency, check_mark, 
      start_time, remarks, create_time, 
      create_user, update_time, update_user
      )
    values (#{id,jdbcType=BIGINT}, #{appId,jdbcType=VARCHAR}, #{name,jdbcType=VARCHAR}, 
      #{applicationName,jdbcType=VARCHAR}, #{path,jdbcType=VARCHAR}, #{fileExt,jdbcType=VARCHAR}, 
      #{serverIp,jdbcType=VARCHAR}, #{serverAccount,jdbcType=VARCHAR}, #{serverPasswd,jdbcType=VARCHAR}, 
      #{dbType,jdbcType=INTEGER}, #{backupFrequency,jdbcType=VARCHAR}, #{checkMark,jdbcType=BIT}, 
      #{startTime,jdbcType=TIMESTAMP}, #{remarks,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}, 
      #{createUser,jdbcType=BIGINT}, #{updateTime,jdbcType=TIMESTAMP}, #{updateUser,jdbcType=BIGINT}
      )
  </insert>
  <insert id="batchInsert" parameterType="java.util.List">
    <!--
    @mbggenerated
    -->
    insert into se_backups (id, app_id, name, application_name, path, file_ext, server_ip, server_account, server_passwd, db_type, backup_frequency, check_mark, start_time, remarks, create_time, create_user, update_time, update_user ) values 
    <foreach collection="list" index="index" item="item" separator=",">
      (#{item.id,jdbcType=BIGINT}, #{item.appId,jdbcType=VARCHAR}, #{item.name,jdbcType=VARCHAR}, 
        #{item.applicationName,jdbcType=VARCHAR}, #{item.path,jdbcType=VARCHAR}, #{item.fileExt,jdbcType=VARCHAR}, 
        #{item.serverIp,jdbcType=VARCHAR}, #{item.serverAccount,jdbcType=VARCHAR}, #{item.serverPasswd,jdbcType=VARCHAR}, 
        #{item.dbType,jdbcType=INTEGER}, #{item.backupFrequency,jdbcType=VARCHAR}, #{item.checkMark,jdbcType=BIT}, 
        #{item.startTime,jdbcType=TIMESTAMP}, #{item.remarks,jdbcType=VARCHAR}, #{item.createTime,jdbcType=TIMESTAMP}, 
        #{item.createUser,jdbcType=BIGINT}, #{item.updateTime,jdbcType=TIMESTAMP}, #{item.updateUser,jdbcType=BIGINT}
        )
    </foreach>
  </insert>
  <insert id="insertSelective" parameterType="com.hengyunsoft.platform.security.entity.backups.po.Backups">
    <!--
    @mbggenerated
    -->
    insert into se_backups
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="appId != null">
        app_id,
      </if>
      <if test="name != null">
        name,
      </if>
      <if test="applicationName != null">
        application_name,
      </if>
      <if test="path != null">
        path,
      </if>
      <if test="fileExt != null">
        file_ext,
      </if>
      <if test="serverIp != null">
        server_ip,
      </if>
      <if test="serverAccount != null">
        server_account,
      </if>
      <if test="serverPasswd != null">
        server_passwd,
      </if>
      <if test="dbType != null">
        db_type,
      </if>
      <if test="backupFrequency != null">
        backup_frequency,
      </if>
      <if test="checkMark != null">
        check_mark,
      </if>
      <if test="startTime != null">
        start_time,
      </if>
      <if test="remarks != null">
        remarks,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="createUser != null">
        create_user,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
      <if test="updateUser != null">
        update_user,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=BIGINT},
      </if>
      <if test="appId != null">
        #{appId,jdbcType=VARCHAR},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="applicationName != null">
        #{applicationName,jdbcType=VARCHAR},
      </if>
      <if test="path != null">
        #{path,jdbcType=VARCHAR},
      </if>
      <if test="fileExt != null">
        #{fileExt,jdbcType=VARCHAR},
      </if>
      <if test="serverIp != null">
        #{serverIp,jdbcType=VARCHAR},
      </if>
      <if test="serverAccount != null">
        #{serverAccount,jdbcType=VARCHAR},
      </if>
      <if test="serverPasswd != null">
        #{serverPasswd,jdbcType=VARCHAR},
      </if>
      <if test="dbType != null">
        #{dbType,jdbcType=INTEGER},
      </if>
      <if test="backupFrequency != null">
        #{backupFrequency,jdbcType=VARCHAR},
      </if>
      <if test="checkMark != null">
        #{checkMark,jdbcType=BIT},
      </if>
      <if test="startTime != null">
        #{startTime,jdbcType=TIMESTAMP},
      </if>
      <if test="remarks != null">
        #{remarks,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createUser != null">
        #{createUser,jdbcType=BIGINT},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateUser != null">
        #{updateUser,jdbcType=BIGINT},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.hengyunsoft.platform.security.repository.backups.example.BackupsExample" resultType="java.lang.Integer">
    <!--
    @mbggenerated
    -->
    select count(*) from se_backups
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    <!--
    @mbggenerated
    -->
    update se_backups
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.appId != null">
        app_id = #{record.appId,jdbcType=VARCHAR},
      </if>
      <if test="record.name != null">
        name = #{record.name,jdbcType=VARCHAR},
      </if>
      <if test="record.applicationName != null">
        application_name = #{record.applicationName,jdbcType=VARCHAR},
      </if>
      <if test="record.path != null">
        path = #{record.path,jdbcType=VARCHAR},
      </if>
      <if test="record.fileExt != null">
        file_ext = #{record.fileExt,jdbcType=VARCHAR},
      </if>
      <if test="record.serverIp != null">
        server_ip = #{record.serverIp,jdbcType=VARCHAR},
      </if>
      <if test="record.serverAccount != null">
        server_account = #{record.serverAccount,jdbcType=VARCHAR},
      </if>
      <if test="record.serverPasswd != null">
        server_passwd = #{record.serverPasswd,jdbcType=VARCHAR},
      </if>
      <if test="record.dbType != null">
        db_type = #{record.dbType,jdbcType=INTEGER},
      </if>
      <if test="record.backupFrequency != null">
        backup_frequency = #{record.backupFrequency,jdbcType=VARCHAR},
      </if>
      <if test="record.checkMark != null">
        check_mark = #{record.checkMark,jdbcType=BIT},
      </if>
      <if test="record.startTime != null">
        start_time = #{record.startTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.remarks != null">
        remarks = #{record.remarks,jdbcType=VARCHAR},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.createUser != null">
        create_user = #{record.createUser,jdbcType=BIGINT},
      </if>
      <if test="record.updateTime != null">
        update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateUser != null">
        update_user = #{record.updateUser,jdbcType=BIGINT},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    <!--
    @mbggenerated
    -->
    update se_backups
    set id = #{record.id,jdbcType=BIGINT},
      app_id = #{record.appId,jdbcType=VARCHAR},
      name = #{record.name,jdbcType=VARCHAR},
      application_name = #{record.applicationName,jdbcType=VARCHAR},
      path = #{record.path,jdbcType=VARCHAR},
      file_ext = #{record.fileExt,jdbcType=VARCHAR},
      server_ip = #{record.serverIp,jdbcType=VARCHAR},
      server_account = #{record.serverAccount,jdbcType=VARCHAR},
      server_passwd = #{record.serverPasswd,jdbcType=VARCHAR},
      db_type = #{record.dbType,jdbcType=INTEGER},
      backup_frequency = #{record.backupFrequency,jdbcType=VARCHAR},
      check_mark = #{record.checkMark,jdbcType=BIT},
      start_time = #{record.startTime,jdbcType=TIMESTAMP},
      remarks = #{record.remarks,jdbcType=VARCHAR},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      create_user = #{record.createUser,jdbcType=BIGINT},
      update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      update_user = #{record.updateUser,jdbcType=BIGINT}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.hengyunsoft.platform.security.entity.backups.po.Backups">
    <!--
    @mbggenerated
    -->
    update se_backups
    <set>
      <if test="appId != null">
        app_id = #{appId,jdbcType=VARCHAR},
      </if>
      <if test="name != null">
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="applicationName != null">
        application_name = #{applicationName,jdbcType=VARCHAR},
      </if>
      <if test="path != null">
        path = #{path,jdbcType=VARCHAR},
      </if>
      <if test="fileExt != null">
        file_ext = #{fileExt,jdbcType=VARCHAR},
      </if>
      <if test="serverIp != null">
        server_ip = #{serverIp,jdbcType=VARCHAR},
      </if>
      <if test="serverAccount != null">
        server_account = #{serverAccount,jdbcType=VARCHAR},
      </if>
      <if test="serverPasswd != null">
        server_passwd = #{serverPasswd,jdbcType=VARCHAR},
      </if>
      <if test="dbType != null">
        db_type = #{dbType,jdbcType=INTEGER},
      </if>
      <if test="backupFrequency != null">
        backup_frequency = #{backupFrequency,jdbcType=VARCHAR},
      </if>
      <if test="checkMark != null">
        check_mark = #{checkMark,jdbcType=BIT},
      </if>
      <if test="startTime != null">
        start_time = #{startTime,jdbcType=TIMESTAMP},
      </if>
      <if test="remarks != null">
        remarks = #{remarks,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createUser != null">
        create_user = #{createUser,jdbcType=BIGINT},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateUser != null">
        update_user = #{updateUser,jdbcType=BIGINT},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByAppIdAndIdSelective" parameterType="com.hengyunsoft.platform.security.entity.backups.po.Backups">
    <!--
    @mbggenerated
    -->
    update se_backups
    <set>
      <if test="appId != null">
        app_id = #{appId,jdbcType=VARCHAR},
      </if>
      <if test="name != null">
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="applicationName != null">
        application_name = #{applicationName,jdbcType=VARCHAR},
      </if>
      <if test="path != null">
        path = #{path,jdbcType=VARCHAR},
      </if>
      <if test="fileExt != null">
        file_ext = #{fileExt,jdbcType=VARCHAR},
      </if>
      <if test="serverIp != null">
        server_ip = #{serverIp,jdbcType=VARCHAR},
      </if>
      <if test="serverAccount != null">
        server_account = #{serverAccount,jdbcType=VARCHAR},
      </if>
      <if test="serverPasswd != null">
        server_passwd = #{serverPasswd,jdbcType=VARCHAR},
      </if>
      <if test="dbType != null">
        db_type = #{dbType,jdbcType=INTEGER},
      </if>
      <if test="backupFrequency != null">
        backup_frequency = #{backupFrequency,jdbcType=VARCHAR},
      </if>
      <if test="checkMark != null">
        check_mark = #{checkMark,jdbcType=BIT},
      </if>
      <if test="startTime != null">
        start_time = #{startTime,jdbcType=TIMESTAMP},
      </if>
      <if test="remarks != null">
        remarks = #{remarks,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createUser != null">
        create_user = #{createUser,jdbcType=BIGINT},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateUser != null">
        update_user = #{updateUser,jdbcType=BIGINT},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
     and app_id = #{appId,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.hengyunsoft.platform.security.entity.backups.po.Backups">
    <!--
    @mbggenerated
    -->
    update se_backups
    set app_id = #{appId,jdbcType=VARCHAR},
      name = #{name,jdbcType=VARCHAR},
      application_name = #{applicationName,jdbcType=VARCHAR},
      path = #{path,jdbcType=VARCHAR},
      file_ext = #{fileExt,jdbcType=VARCHAR},
      server_ip = #{serverIp,jdbcType=VARCHAR},
      server_account = #{serverAccount,jdbcType=VARCHAR},
      server_passwd = #{serverPasswd,jdbcType=VARCHAR},
      db_type = #{dbType,jdbcType=INTEGER},
      backup_frequency = #{backupFrequency,jdbcType=VARCHAR},
      check_mark = #{checkMark,jdbcType=BIT},
      start_time = #{startTime,jdbcType=TIMESTAMP},
      remarks = #{remarks,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      create_user = #{createUser,jdbcType=BIGINT},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      update_user = #{updateUser,jdbcType=BIGINT}
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByAppIdAndId" parameterType="com.hengyunsoft.platform.security.entity.backups.po.Backups">
    <!--
    @mbggenerated
    -->
    update se_backups
    set app_id = #{appId,jdbcType=VARCHAR},
      name = #{name,jdbcType=VARCHAR},
      application_name = #{applicationName,jdbcType=VARCHAR},
      path = #{path,jdbcType=VARCHAR},
      file_ext = #{fileExt,jdbcType=VARCHAR},
      server_ip = #{serverIp,jdbcType=VARCHAR},
      server_account = #{serverAccount,jdbcType=VARCHAR},
      server_passwd = #{serverPasswd,jdbcType=VARCHAR},
      db_type = #{dbType,jdbcType=INTEGER},
      backup_frequency = #{backupFrequency,jdbcType=VARCHAR},
      check_mark = #{checkMark,jdbcType=BIT},
      start_time = #{startTime,jdbcType=TIMESTAMP},
      remarks = #{remarks,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      create_user = #{createUser,jdbcType=BIGINT},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      update_user = #{updateUser,jdbcType=BIGINT}
    where id = #{id,jdbcType=BIGINT}
     and app_id = #{appId,jdbcType=VARCHAR}
  </update>
</mapper>