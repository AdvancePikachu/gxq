<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.hengyunsoft.platform.security.repository.interfaces.dao.InterfaceConfigMapper">
  <resultMap id="BaseResultMap" type="com.hengyunsoft.platform.security.entity.interfaces.po.InterfaceConfig">
    <!--
    @mbggenerated
    -->
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="api_name" jdbcType="VARCHAR" property="apiName" />
    <result column="api_id" jdbcType="BIGINT" property="apiId" />
    <result column="api_url" jdbcType="VARCHAR" property="apiUrl" />
    <result column="app_id" jdbcType="VARCHAR" property="appId" />
    <result column="modular_name" jdbcType="VARCHAR" property="modularName" />
    <result column="method" jdbcType="VARCHAR" property="method" />
    <result column="error_count_minute" jdbcType="INTEGER" property="errorCountMinute" />
    <result column="upper_limit_count_by_day" jdbcType="INTEGER" property="upperLimitCountByDay" />
    <result column="is_sms_notify" jdbcType="BIT" property="isSmsNotify" />
    <result column="mobile" jdbcType="VARCHAR" property="mobile" />
    <result column="is_notify" jdbcType="BIT" property="isNotify" />
    <result column="status" jdbcType="INTEGER" property="status" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="create_user" jdbcType="BIGINT" property="createUser" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
    <result column="update_user" jdbcType="BIGINT" property="updateUser" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <!--
    @mbggenerated
    -->
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <!--
    @mbggenerated
    -->
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    <!--
    @mbggenerated
    -->
    id, api_name, api_id, api_url, app_id, modular_name, method, error_count_minute, 
    upper_limit_count_by_day, is_sms_notify, mobile, is_notify, status, create_time, 
    create_user, update_time, update_user
  </sql>
  <select id="selectByExample" parameterType="com.hengyunsoft.platform.security.repository.interfaces.example.InterfaceConfigExample" resultMap="BaseResultMap">
    <!--
    @mbggenerated
    -->
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from se_interface_config
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="groupByClause != null">
      group by ${groupByClause}
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <if test="limitValue != null">
      limit ${limitValue}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    <!--
    @mbggenerated
    -->
    select 
    <include refid="Base_Column_List" />
    from se_interface_config
    where id = #{id,jdbcType=BIGINT}
  </select>
  <select id="selectEntity" parameterType="com.hengyunsoft.platform.security.repository.interfaces.example.InterfaceConfigExample" resultMap="BaseResultMap">
    <!--
    @mbggenerated
    -->
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from se_interface_config
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="groupByClause != null">
      group by ${groupByClause}
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    limit 0,1 
  </select>
  <select id="selectByAppIdAndId" parameterType="map" resultMap="BaseResultMap">
    <!--
    @mbggenerated
    -->
    select
    <include refid="Base_Column_List" />
    from se_interface_config
    where 1=1 and app_id = #{appId,jdbcType=VARCHAR} and id = #{id,jdbcType=BIGINT}
  </select>
  <select id="selectAppIdById" parameterType="java.lang.Long" resultType="java.lang.String">
    <!--
    @mbggenerated
    -->
    select app_id 
    from se_interface_config
    where 1=1 and id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    <!--
    @mbggenerated
    -->
    delete from se_interface_config
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.hengyunsoft.platform.security.repository.interfaces.example.InterfaceConfigExample">
    <!--
    @mbggenerated
    -->
    delete from se_interface_config
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <delete id="deleteByIds" parameterType="list">
    <!--
    @mbggenerated
    -->
    delete from  se_interface_config where id in 
    <foreach close=")" collection="list" index="index" item="item" open="(" separator=",">
      #{item}
    </foreach> 
  </delete>
  <delete id="deleteByAppIdAndId" parameterType="map">
    <!--
    @mbggenerated
    -->
    delete from se_interface_config
    where id = #{id,jdbcType=BIGINT}
     and app_id = #{appId,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByAppIdAndIds" parameterType="map">
    <!--
    @mbggenerated
    -->
    delete from  se_interface_config where id in 
    <foreach close=")" collection="list" index="index" item="item" open="(" separator=",">
      #{item}
    </foreach> 
     and app_id = #{appId,jdbcType=VARCHAR}
  </delete>
  <update id="removeByExample" parameterType="com.hengyunsoft.platform.security.entity.interfaces.po.InterfaceConfig">
    <!--
    @mbggenerated
    -->
    update se_interface_config
    set is_delete = 1 

    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </update>
  <update id="removeByAppIdAndIds" parameterType="map">
    <!--
    @mbggenerated
    -->
    update se_interface_config
    set is_delete = 1 
 where 1=1 and id in 
 <foreach close=")" collection="list" index="index" item="item" open="(" separator=",">
    #{item}
  </foreach>
     and app_id = #{appId,jdbcType=VARCHAR}
  </update>
  <update id="removeByPrimaryKey" parameterType="java.lang.Long">
    <!--
    @mbggenerated
    -->
    update se_interface_config
    set is_delete = 1 

     where 1=1 and id = #{id,jdbcType=BIGINT}
  </update>
  <update id="removeByAppIdAndId" parameterType="map">
    <!--
    @mbggenerated
    -->
    update se_interface_config
    set is_delete = 1 

     where 1=1 and id = #{id,jdbcType=BIGINT}
     and app_id = #{appId,jdbcType=VARCHAR}
  </update>
  <insert id="insert" parameterType="com.hengyunsoft.platform.security.entity.interfaces.po.InterfaceConfig">
    <!--
    @mbggenerated
    -->
    insert into se_interface_config (id, api_name, api_id, 
      api_url, app_id, modular_name, 
      method, error_count_minute, upper_limit_count_by_day, 
      is_sms_notify, mobile, is_notify, 
      status, create_time, create_user, 
      update_time, update_user)
    values (#{id,jdbcType=BIGINT}, #{apiName,jdbcType=VARCHAR}, #{apiId,jdbcType=BIGINT}, 
      #{apiUrl,jdbcType=VARCHAR}, #{appId,jdbcType=VARCHAR}, #{modularName,jdbcType=VARCHAR}, 
      #{method,jdbcType=VARCHAR}, #{errorCountMinute,jdbcType=INTEGER}, #{upperLimitCountByDay,jdbcType=INTEGER}, 
      #{isSmsNotify,jdbcType=BIT}, #{mobile,jdbcType=VARCHAR}, #{isNotify,jdbcType=BIT}, 
      #{status,jdbcType=INTEGER}, #{createTime,jdbcType=TIMESTAMP}, #{createUser,jdbcType=BIGINT}, 
      #{updateTime,jdbcType=TIMESTAMP}, #{updateUser,jdbcType=BIGINT})
  </insert>
  <insert id="batchInsert" parameterType="java.util.List">
    <!--
    @mbggenerated
    -->
    insert into se_interface_config (id, api_name, api_id, api_url, app_id, modular_name, method, error_count_minute, upper_limit_count_by_day, is_sms_notify, mobile, is_notify, status, create_time, create_user, update_time, update_user ) values 
    <foreach collection="list" index="index" item="item" separator=",">
      (#{item.id,jdbcType=BIGINT}, #{item.apiName,jdbcType=VARCHAR}, #{item.apiId,jdbcType=BIGINT}, 
        #{item.apiUrl,jdbcType=VARCHAR}, #{item.appId,jdbcType=VARCHAR}, #{item.modularName,jdbcType=VARCHAR}, 
        #{item.method,jdbcType=VARCHAR}, #{item.errorCountMinute,jdbcType=INTEGER}, #{item.upperLimitCountByDay,jdbcType=INTEGER}, 
        #{item.isSmsNotify,jdbcType=BIT}, #{item.mobile,jdbcType=VARCHAR}, #{item.isNotify,jdbcType=BIT}, 
        #{item.status,jdbcType=INTEGER}, #{item.createTime,jdbcType=TIMESTAMP}, #{item.createUser,jdbcType=BIGINT}, 
        #{item.updateTime,jdbcType=TIMESTAMP}, #{item.updateUser,jdbcType=BIGINT})
    </foreach>
  </insert>
  <insert id="insertSelective" parameterType="com.hengyunsoft.platform.security.entity.interfaces.po.InterfaceConfig">
    <!--
    @mbggenerated
    -->
    insert into se_interface_config
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="apiName != null">
        api_name,
      </if>
      <if test="apiId != null">
        api_id,
      </if>
      <if test="apiUrl != null">
        api_url,
      </if>
      <if test="appId != null">
        app_id,
      </if>
      <if test="modularName != null">
        modular_name,
      </if>
      <if test="method != null">
        method,
      </if>
      <if test="errorCountMinute != null">
        error_count_minute,
      </if>
      <if test="upperLimitCountByDay != null">
        upper_limit_count_by_day,
      </if>
      <if test="isSmsNotify != null">
        is_sms_notify,
      </if>
      <if test="mobile != null">
        mobile,
      </if>
      <if test="isNotify != null">
        is_notify,
      </if>
      <if test="status != null">
        status,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="createUser != null">
        create_user,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
      <if test="updateUser != null">
        update_user,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=BIGINT},
      </if>
      <if test="apiName != null">
        #{apiName,jdbcType=VARCHAR},
      </if>
      <if test="apiId != null">
        #{apiId,jdbcType=BIGINT},
      </if>
      <if test="apiUrl != null">
        #{apiUrl,jdbcType=VARCHAR},
      </if>
      <if test="appId != null">
        #{appId,jdbcType=VARCHAR},
      </if>
      <if test="modularName != null">
        #{modularName,jdbcType=VARCHAR},
      </if>
      <if test="method != null">
        #{method,jdbcType=VARCHAR},
      </if>
      <if test="errorCountMinute != null">
        #{errorCountMinute,jdbcType=INTEGER},
      </if>
      <if test="upperLimitCountByDay != null">
        #{upperLimitCountByDay,jdbcType=INTEGER},
      </if>
      <if test="isSmsNotify != null">
        #{isSmsNotify,jdbcType=BIT},
      </if>
      <if test="mobile != null">
        #{mobile,jdbcType=VARCHAR},
      </if>
      <if test="isNotify != null">
        #{isNotify,jdbcType=BIT},
      </if>
      <if test="status != null">
        #{status,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createUser != null">
        #{createUser,jdbcType=BIGINT},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateUser != null">
        #{updateUser,jdbcType=BIGINT},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.hengyunsoft.platform.security.repository.interfaces.example.InterfaceConfigExample" resultType="java.lang.Integer">
    <!--
    @mbggenerated
    -->
    select count(*) from se_interface_config
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    <!--
    @mbggenerated
    -->
    update se_interface_config
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.apiName != null">
        api_name = #{record.apiName,jdbcType=VARCHAR},
      </if>
      <if test="record.apiId != null">
        api_id = #{record.apiId,jdbcType=BIGINT},
      </if>
      <if test="record.apiUrl != null">
        api_url = #{record.apiUrl,jdbcType=VARCHAR},
      </if>
      <if test="record.appId != null">
        app_id = #{record.appId,jdbcType=VARCHAR},
      </if>
      <if test="record.modularName != null">
        modular_name = #{record.modularName,jdbcType=VARCHAR},
      </if>
      <if test="record.method != null">
        method = #{record.method,jdbcType=VARCHAR},
      </if>
      <if test="record.errorCountMinute != null">
        error_count_minute = #{record.errorCountMinute,jdbcType=INTEGER},
      </if>
      <if test="record.upperLimitCountByDay != null">
        upper_limit_count_by_day = #{record.upperLimitCountByDay,jdbcType=INTEGER},
      </if>
      <if test="record.isSmsNotify != null">
        is_sms_notify = #{record.isSmsNotify,jdbcType=BIT},
      </if>
      <if test="record.mobile != null">
        mobile = #{record.mobile,jdbcType=VARCHAR},
      </if>
      <if test="record.isNotify != null">
        is_notify = #{record.isNotify,jdbcType=BIT},
      </if>
      <if test="record.status != null">
        status = #{record.status,jdbcType=INTEGER},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.createUser != null">
        create_user = #{record.createUser,jdbcType=BIGINT},
      </if>
      <if test="record.updateTime != null">
        update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateUser != null">
        update_user = #{record.updateUser,jdbcType=BIGINT},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    <!--
    @mbggenerated
    -->
    update se_interface_config
    set id = #{record.id,jdbcType=BIGINT},
      api_name = #{record.apiName,jdbcType=VARCHAR},
      api_id = #{record.apiId,jdbcType=BIGINT},
      api_url = #{record.apiUrl,jdbcType=VARCHAR},
      app_id = #{record.appId,jdbcType=VARCHAR},
      modular_name = #{record.modularName,jdbcType=VARCHAR},
      method = #{record.method,jdbcType=VARCHAR},
      error_count_minute = #{record.errorCountMinute,jdbcType=INTEGER},
      upper_limit_count_by_day = #{record.upperLimitCountByDay,jdbcType=INTEGER},
      is_sms_notify = #{record.isSmsNotify,jdbcType=BIT},
      mobile = #{record.mobile,jdbcType=VARCHAR},
      is_notify = #{record.isNotify,jdbcType=BIT},
      status = #{record.status,jdbcType=INTEGER},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      create_user = #{record.createUser,jdbcType=BIGINT},
      update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      update_user = #{record.updateUser,jdbcType=BIGINT}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.hengyunsoft.platform.security.entity.interfaces.po.InterfaceConfig">
    <!--
    @mbggenerated
    -->
    update se_interface_config
    <set>
      <if test="apiName != null">
        api_name = #{apiName,jdbcType=VARCHAR},
      </if>
      <if test="apiId != null">
        api_id = #{apiId,jdbcType=BIGINT},
      </if>
      <if test="apiUrl != null">
        api_url = #{apiUrl,jdbcType=VARCHAR},
      </if>
      <if test="appId != null">
        app_id = #{appId,jdbcType=VARCHAR},
      </if>
      <if test="modularName != null">
        modular_name = #{modularName,jdbcType=VARCHAR},
      </if>
      <if test="method != null">
        method = #{method,jdbcType=VARCHAR},
      </if>
      <if test="errorCountMinute != null">
        error_count_minute = #{errorCountMinute,jdbcType=INTEGER},
      </if>
      <if test="upperLimitCountByDay != null">
        upper_limit_count_by_day = #{upperLimitCountByDay,jdbcType=INTEGER},
      </if>
      <if test="isSmsNotify != null">
        is_sms_notify = #{isSmsNotify,jdbcType=BIT},
      </if>
      <if test="mobile != null">
        mobile = #{mobile,jdbcType=VARCHAR},
      </if>
      <if test="isNotify != null">
        is_notify = #{isNotify,jdbcType=BIT},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createUser != null">
        create_user = #{createUser,jdbcType=BIGINT},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateUser != null">
        update_user = #{updateUser,jdbcType=BIGINT},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByAppIdAndIdSelective" parameterType="com.hengyunsoft.platform.security.entity.interfaces.po.InterfaceConfig">
    <!--
    @mbggenerated
    -->
    update se_interface_config
    <set>
      <if test="apiName != null">
        api_name = #{apiName,jdbcType=VARCHAR},
      </if>
      <if test="apiId != null">
        api_id = #{apiId,jdbcType=BIGINT},
      </if>
      <if test="apiUrl != null">
        api_url = #{apiUrl,jdbcType=VARCHAR},
      </if>
      <if test="appId != null">
        app_id = #{appId,jdbcType=VARCHAR},
      </if>
      <if test="modularName != null">
        modular_name = #{modularName,jdbcType=VARCHAR},
      </if>
      <if test="method != null">
        method = #{method,jdbcType=VARCHAR},
      </if>
      <if test="errorCountMinute != null">
        error_count_minute = #{errorCountMinute,jdbcType=INTEGER},
      </if>
      <if test="upperLimitCountByDay != null">
        upper_limit_count_by_day = #{upperLimitCountByDay,jdbcType=INTEGER},
      </if>
      <if test="isSmsNotify != null">
        is_sms_notify = #{isSmsNotify,jdbcType=BIT},
      </if>
      <if test="mobile != null">
        mobile = #{mobile,jdbcType=VARCHAR},
      </if>
      <if test="isNotify != null">
        is_notify = #{isNotify,jdbcType=BIT},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createUser != null">
        create_user = #{createUser,jdbcType=BIGINT},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateUser != null">
        update_user = #{updateUser,jdbcType=BIGINT},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
     and app_id = #{appId,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.hengyunsoft.platform.security.entity.interfaces.po.InterfaceConfig">
    <!--
    @mbggenerated
    -->
    update se_interface_config
    set api_name = #{apiName,jdbcType=VARCHAR},
      api_id = #{apiId,jdbcType=BIGINT},
      api_url = #{apiUrl,jdbcType=VARCHAR},
      app_id = #{appId,jdbcType=VARCHAR},
      modular_name = #{modularName,jdbcType=VARCHAR},
      method = #{method,jdbcType=VARCHAR},
      error_count_minute = #{errorCountMinute,jdbcType=INTEGER},
      upper_limit_count_by_day = #{upperLimitCountByDay,jdbcType=INTEGER},
      is_sms_notify = #{isSmsNotify,jdbcType=BIT},
      mobile = #{mobile,jdbcType=VARCHAR},
      is_notify = #{isNotify,jdbcType=BIT},
      status = #{status,jdbcType=INTEGER},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      create_user = #{createUser,jdbcType=BIGINT},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      update_user = #{updateUser,jdbcType=BIGINT}
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByAppIdAndId" parameterType="com.hengyunsoft.platform.security.entity.interfaces.po.InterfaceConfig">
    <!--
    @mbggenerated
    -->
    update se_interface_config
    set api_name = #{apiName,jdbcType=VARCHAR},
      api_id = #{apiId,jdbcType=BIGINT},
      api_url = #{apiUrl,jdbcType=VARCHAR},
      app_id = #{appId,jdbcType=VARCHAR},
      modular_name = #{modularName,jdbcType=VARCHAR},
      method = #{method,jdbcType=VARCHAR},
      error_count_minute = #{errorCountMinute,jdbcType=INTEGER},
      upper_limit_count_by_day = #{upperLimitCountByDay,jdbcType=INTEGER},
      is_sms_notify = #{isSmsNotify,jdbcType=BIT},
      mobile = #{mobile,jdbcType=VARCHAR},
      is_notify = #{isNotify,jdbcType=BIT},
      status = #{status,jdbcType=INTEGER},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      create_user = #{createUser,jdbcType=BIGINT},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      update_user = #{updateUser,jdbcType=BIGINT}
    where id = #{id,jdbcType=BIGINT}
     and app_id = #{appId,jdbcType=VARCHAR}
  </update>
</mapper>