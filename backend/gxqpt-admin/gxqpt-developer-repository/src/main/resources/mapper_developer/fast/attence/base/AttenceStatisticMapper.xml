<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.hengyunsoft.platform.developer.repository.fast.attence.dao.AttenceStatisticMapper">
  <resultMap id="BaseResultMap" type="com.hengyunsoft.platform.developer.entity.fast.po.attence.AttenceStatistic">
    <!--
    @mbggenerated
    -->
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="app_id" jdbcType="VARCHAR" property="appId" />
    <result column="user_id" jdbcType="BIGINT" property="userId" />
    <result column="org_code" jdbcType="VARCHAR" property="orgCode" />
    <result column="work_date" jdbcType="DATE" property="workDate" />
    <result column="extra_work" jdbcType="REAL" property="extraWork" />
    <result column="sick_leave" jdbcType="REAL" property="sickLeave" />
    <result column="affair_leave" jdbcType="REAL" property="affairLeave" />
    <result column="annual_leave" jdbcType="REAL" property="annualLeave" />
    <result column="home_leave" jdbcType="REAL" property="homeLeave" />
    <result column="marital_leave" jdbcType="REAL" property="maritalLeave" />
    <result column="funeral_leave" jdbcType="REAL" property="funeralLeave" />
    <result column="maternity_leave" jdbcType="REAL" property="maternityLeave" />
    <result column="expatriate_leave" jdbcType="REAL" property="expatriateLeave" />
    <result column="outside_hour" jdbcType="REAL" property="outsideHour" />
    <result column="neglect_hour" jdbcType="REAL" property="neglectHour" />
    <result column="neglect_num" jdbcType="INTEGER" property="neglectNum" />
    <result column="late_hour" jdbcType="REAL" property="lateHour" />
    <result column="early_hour" jdbcType="REAL" property="earlyHour" />
    <result column="actual_hour" jdbcType="REAL" property="actualHour" />
    <result column="business_hour" jdbcType="REAL" property="businessHour" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
    <result column="create_user" jdbcType="BIGINT" property="createUser" />
    <result column="update_user" jdbcType="BIGINT" property="updateUser" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <!--
    @mbggenerated
    -->
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <!--
    @mbggenerated
    -->
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    <!--
    @mbggenerated
    -->
    id, app_id, user_id, org_code, work_date, extra_work, sick_leave, affair_leave, annual_leave, 
    home_leave, marital_leave, funeral_leave, maternity_leave, expatriate_leave, outside_hour, 
    neglect_hour, neglect_num, late_hour, early_hour, actual_hour, business_hour, create_time, 
    update_time, create_user, update_user
  </sql>
  <select id="selectByExample" parameterType="com.hengyunsoft.platform.developer.repository.fast.attence.example.AttenceStatisticExample" resultMap="BaseResultMap">
    <!--
    @mbggenerated
    -->
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from b_attence_statistic
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="groupByClause != null">
      group by ${groupByClause}
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <if test="limitValue != null">
      limit ${limitValue}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    <!--
    @mbggenerated
    -->
    select 
    <include refid="Base_Column_List" />
    from b_attence_statistic
    where id = #{id,jdbcType=BIGINT}
  </select>
  <select id="selectEntity" parameterType="com.hengyunsoft.platform.developer.repository.fast.attence.example.AttenceStatisticExample" resultMap="BaseResultMap">
    <!--
    @mbggenerated
    -->
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from b_attence_statistic
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="groupByClause != null">
      group by ${groupByClause}
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    limit 0,1 
  </select>
  <select id="selectByAppIdAndId" parameterType="map" resultMap="BaseResultMap">
    <!--
    @mbggenerated
    -->
    select
    <include refid="Base_Column_List" />
    from b_attence_statistic
    where 1=1 and app_id = #{appId,jdbcType=VARCHAR} and id = #{id,jdbcType=BIGINT}
  </select>
  <select id="selectAppIdById" parameterType="map" resultType="java.lang.String">
    <!--
    @mbggenerated
    -->
    select app_id 
    from b_attence_statistic
    where 1=1 and id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    <!--
    @mbggenerated
    -->
    delete from b_attence_statistic
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.hengyunsoft.platform.developer.repository.fast.attence.example.AttenceStatisticExample">
    <!--
    @mbggenerated
    -->
    delete from b_attence_statistic
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <delete id="deleteByIds" parameterType="list">
    <!--
    @mbggenerated
    -->
    delete from  b_attence_statistic where id in 
    <foreach close=")" collection="list" index="index" item="item" open="(" separator=",">
      #{item}
    </foreach> 
  </delete>
  <delete id="deleteByAppIdAndId" parameterType="java.lang.Long">
    <!--
    @mbggenerated
    -->
    delete from b_attence_statistic
    where id = #{id,jdbcType=BIGINT}
     and app_id = #{appId,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByAppIdAndIds" parameterType="list">
    <!--
    @mbggenerated
    -->
    delete from  b_attence_statistic where id in 
    <foreach close=")" collection="list" index="index" item="item" open="(" separator=",">
      #{item}
    </foreach> 
     and app_id = #{appId,jdbcType=VARCHAR}
  </delete>
  <update id="removeByExample" parameterType="com.hengyunsoft.platform.developer.entity.fast.po.attence.AttenceStatistic">
    <!--
    @mbggenerated
    -->
    update b_attence_statistic
    set is_delete = 1 

    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </update>
  <update id="removeByAppIdAndIds" parameterType="com.hengyunsoft.platform.developer.entity.fast.po.attence.AttenceStatistic">
    <!--
    @mbggenerated
    -->
    update b_attence_statistic
    set is_delete = 1 
 where 1=1 and id in 
 <foreach close=")" collection="list" index="index" item="item" open="(" separator=",">
    #{item}
  </foreach>
     and app_id = #{appId,jdbcType=VARCHAR}
  </update>
  <update id="removeByPrimaryKey" parameterType="com.hengyunsoft.platform.developer.entity.fast.po.attence.AttenceStatistic">
    <!--
    @mbggenerated
    -->
    update b_attence_statistic
    set is_delete = 1 

     where 1=1 and id = #{id,jdbcType=BIGINT}
  </update>
  <update id="removeByAppIdAndId" parameterType="com.hengyunsoft.platform.developer.entity.fast.po.attence.AttenceStatistic">
    <!--
    @mbggenerated
    -->
    update b_attence_statistic
    set is_delete = 1 

     where 1=1 and id = #{id,jdbcType=BIGINT}
     and app_id = #{appId,jdbcType=VARCHAR}
  </update>
  <insert id="insert" parameterType="com.hengyunsoft.platform.developer.entity.fast.po.attence.AttenceStatistic">
    <!--
    @mbggenerated
    -->
    insert into b_attence_statistic (id, app_id, user_id, 
      org_code, work_date, extra_work, 
      sick_leave, affair_leave, annual_leave, 
      home_leave, marital_leave, funeral_leave, 
      maternity_leave, expatriate_leave, outside_hour, 
      neglect_hour, neglect_num, late_hour, 
      early_hour, actual_hour, business_hour, 
      create_time, update_time, create_user, 
      update_user)
    values (#{id,jdbcType=BIGINT}, #{appId,jdbcType=VARCHAR}, #{userId,jdbcType=BIGINT}, 
      #{orgCode,jdbcType=VARCHAR}, #{workDate,jdbcType=DATE}, #{extraWork,jdbcType=REAL}, 
      #{sickLeave,jdbcType=REAL}, #{affairLeave,jdbcType=REAL}, #{annualLeave,jdbcType=REAL}, 
      #{homeLeave,jdbcType=REAL}, #{maritalLeave,jdbcType=REAL}, #{funeralLeave,jdbcType=REAL}, 
      #{maternityLeave,jdbcType=REAL}, #{expatriateLeave,jdbcType=REAL}, #{outsideHour,jdbcType=REAL}, 
      #{neglectHour,jdbcType=REAL}, #{neglectNum,jdbcType=INTEGER}, #{lateHour,jdbcType=REAL}, 
      #{earlyHour,jdbcType=REAL}, #{actualHour,jdbcType=REAL}, #{businessHour,jdbcType=REAL}, 
      #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP}, #{createUser,jdbcType=BIGINT}, 
      #{updateUser,jdbcType=BIGINT})
  </insert>
  <insert id="batchInsert" parameterType="java.util.List">
    <!--
    @mbggenerated
    -->
    insert into b_attence_statistic (id, app_id, user_id, org_code, work_date, extra_work, sick_leave, affair_leave, annual_leave, home_leave, marital_leave, funeral_leave, maternity_leave, expatriate_leave, outside_hour, neglect_hour, neglect_num, late_hour, early_hour, actual_hour, business_hour, create_time, update_time, create_user, update_user ) values 
    <foreach collection="list" index="index" item="item" separator=",">
      (#{item.id,jdbcType=BIGINT}, #{item.appId,jdbcType=VARCHAR}, #{item.userId,jdbcType=BIGINT}, 
        #{item.orgCode,jdbcType=VARCHAR}, #{item.workDate,jdbcType=DATE}, #{item.extraWork,jdbcType=REAL}, 
        #{item.sickLeave,jdbcType=REAL}, #{item.affairLeave,jdbcType=REAL}, #{item.annualLeave,jdbcType=REAL}, 
        #{item.homeLeave,jdbcType=REAL}, #{item.maritalLeave,jdbcType=REAL}, #{item.funeralLeave,jdbcType=REAL}, 
        #{item.maternityLeave,jdbcType=REAL}, #{item.expatriateLeave,jdbcType=REAL}, #{item.outsideHour,jdbcType=REAL}, 
        #{item.neglectHour,jdbcType=REAL}, #{item.neglectNum,jdbcType=INTEGER}, #{item.lateHour,jdbcType=REAL}, 
        #{item.earlyHour,jdbcType=REAL}, #{item.actualHour,jdbcType=REAL}, #{item.businessHour,jdbcType=REAL}, 
        #{item.createTime,jdbcType=TIMESTAMP}, #{item.updateTime,jdbcType=TIMESTAMP}, #{item.createUser,jdbcType=BIGINT}, 
        #{item.updateUser,jdbcType=BIGINT})
    </foreach>
  </insert>
  <insert id="insertSelective" parameterType="com.hengyunsoft.platform.developer.entity.fast.po.attence.AttenceStatistic">
    <!--
    @mbggenerated
    -->
    insert into b_attence_statistic
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="appId != null">
        app_id,
      </if>
      <if test="userId != null">
        user_id,
      </if>
      <if test="orgCode != null">
        org_code,
      </if>
      <if test="workDate != null">
        work_date,
      </if>
      <if test="extraWork != null">
        extra_work,
      </if>
      <if test="sickLeave != null">
        sick_leave,
      </if>
      <if test="affairLeave != null">
        affair_leave,
      </if>
      <if test="annualLeave != null">
        annual_leave,
      </if>
      <if test="homeLeave != null">
        home_leave,
      </if>
      <if test="maritalLeave != null">
        marital_leave,
      </if>
      <if test="funeralLeave != null">
        funeral_leave,
      </if>
      <if test="maternityLeave != null">
        maternity_leave,
      </if>
      <if test="expatriateLeave != null">
        expatriate_leave,
      </if>
      <if test="outsideHour != null">
        outside_hour,
      </if>
      <if test="neglectHour != null">
        neglect_hour,
      </if>
      <if test="neglectNum != null">
        neglect_num,
      </if>
      <if test="lateHour != null">
        late_hour,
      </if>
      <if test="earlyHour != null">
        early_hour,
      </if>
      <if test="actualHour != null">
        actual_hour,
      </if>
      <if test="businessHour != null">
        business_hour,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
      <if test="createUser != null">
        create_user,
      </if>
      <if test="updateUser != null">
        update_user,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=BIGINT},
      </if>
      <if test="appId != null">
        #{appId,jdbcType=VARCHAR},
      </if>
      <if test="userId != null">
        #{userId,jdbcType=BIGINT},
      </if>
      <if test="orgCode != null">
        #{orgCode,jdbcType=VARCHAR},
      </if>
      <if test="workDate != null">
        #{workDate,jdbcType=DATE},
      </if>
      <if test="extraWork != null">
        #{extraWork,jdbcType=REAL},
      </if>
      <if test="sickLeave != null">
        #{sickLeave,jdbcType=REAL},
      </if>
      <if test="affairLeave != null">
        #{affairLeave,jdbcType=REAL},
      </if>
      <if test="annualLeave != null">
        #{annualLeave,jdbcType=REAL},
      </if>
      <if test="homeLeave != null">
        #{homeLeave,jdbcType=REAL},
      </if>
      <if test="maritalLeave != null">
        #{maritalLeave,jdbcType=REAL},
      </if>
      <if test="funeralLeave != null">
        #{funeralLeave,jdbcType=REAL},
      </if>
      <if test="maternityLeave != null">
        #{maternityLeave,jdbcType=REAL},
      </if>
      <if test="expatriateLeave != null">
        #{expatriateLeave,jdbcType=REAL},
      </if>
      <if test="outsideHour != null">
        #{outsideHour,jdbcType=REAL},
      </if>
      <if test="neglectHour != null">
        #{neglectHour,jdbcType=REAL},
      </if>
      <if test="neglectNum != null">
        #{neglectNum,jdbcType=INTEGER},
      </if>
      <if test="lateHour != null">
        #{lateHour,jdbcType=REAL},
      </if>
      <if test="earlyHour != null">
        #{earlyHour,jdbcType=REAL},
      </if>
      <if test="actualHour != null">
        #{actualHour,jdbcType=REAL},
      </if>
      <if test="businessHour != null">
        #{businessHour,jdbcType=REAL},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createUser != null">
        #{createUser,jdbcType=BIGINT},
      </if>
      <if test="updateUser != null">
        #{updateUser,jdbcType=BIGINT},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.hengyunsoft.platform.developer.repository.fast.attence.example.AttenceStatisticExample" resultType="java.lang.Integer">
    <!--
    @mbggenerated
    -->
    select count(*) from b_attence_statistic
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    <!--
    @mbggenerated
    -->
    update b_attence_statistic
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.appId != null">
        app_id = #{record.appId,jdbcType=VARCHAR},
      </if>
      <if test="record.userId != null">
        user_id = #{record.userId,jdbcType=BIGINT},
      </if>
      <if test="record.orgCode != null">
        org_code = #{record.orgCode,jdbcType=VARCHAR},
      </if>
      <if test="record.workDate != null">
        work_date = #{record.workDate,jdbcType=DATE},
      </if>
      <if test="record.extraWork != null">
        extra_work = #{record.extraWork,jdbcType=REAL},
      </if>
      <if test="record.sickLeave != null">
        sick_leave = #{record.sickLeave,jdbcType=REAL},
      </if>
      <if test="record.affairLeave != null">
        affair_leave = #{record.affairLeave,jdbcType=REAL},
      </if>
      <if test="record.annualLeave != null">
        annual_leave = #{record.annualLeave,jdbcType=REAL},
      </if>
      <if test="record.homeLeave != null">
        home_leave = #{record.homeLeave,jdbcType=REAL},
      </if>
      <if test="record.maritalLeave != null">
        marital_leave = #{record.maritalLeave,jdbcType=REAL},
      </if>
      <if test="record.funeralLeave != null">
        funeral_leave = #{record.funeralLeave,jdbcType=REAL},
      </if>
      <if test="record.maternityLeave != null">
        maternity_leave = #{record.maternityLeave,jdbcType=REAL},
      </if>
      <if test="record.expatriateLeave != null">
        expatriate_leave = #{record.expatriateLeave,jdbcType=REAL},
      </if>
      <if test="record.outsideHour != null">
        outside_hour = #{record.outsideHour,jdbcType=REAL},
      </if>
      <if test="record.neglectHour != null">
        neglect_hour = #{record.neglectHour,jdbcType=REAL},
      </if>
      <if test="record.neglectNum != null">
        neglect_num = #{record.neglectNum,jdbcType=INTEGER},
      </if>
      <if test="record.lateHour != null">
        late_hour = #{record.lateHour,jdbcType=REAL},
      </if>
      <if test="record.earlyHour != null">
        early_hour = #{record.earlyHour,jdbcType=REAL},
      </if>
      <if test="record.actualHour != null">
        actual_hour = #{record.actualHour,jdbcType=REAL},
      </if>
      <if test="record.businessHour != null">
        business_hour = #{record.businessHour,jdbcType=REAL},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateTime != null">
        update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.createUser != null">
        create_user = #{record.createUser,jdbcType=BIGINT},
      </if>
      <if test="record.updateUser != null">
        update_user = #{record.updateUser,jdbcType=BIGINT},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    <!--
    @mbggenerated
    -->
    update b_attence_statistic
    set id = #{record.id,jdbcType=BIGINT},
      app_id = #{record.appId,jdbcType=VARCHAR},
      user_id = #{record.userId,jdbcType=BIGINT},
      org_code = #{record.orgCode,jdbcType=VARCHAR},
      work_date = #{record.workDate,jdbcType=DATE},
      extra_work = #{record.extraWork,jdbcType=REAL},
      sick_leave = #{record.sickLeave,jdbcType=REAL},
      affair_leave = #{record.affairLeave,jdbcType=REAL},
      annual_leave = #{record.annualLeave,jdbcType=REAL},
      home_leave = #{record.homeLeave,jdbcType=REAL},
      marital_leave = #{record.maritalLeave,jdbcType=REAL},
      funeral_leave = #{record.funeralLeave,jdbcType=REAL},
      maternity_leave = #{record.maternityLeave,jdbcType=REAL},
      expatriate_leave = #{record.expatriateLeave,jdbcType=REAL},
      outside_hour = #{record.outsideHour,jdbcType=REAL},
      neglect_hour = #{record.neglectHour,jdbcType=REAL},
      neglect_num = #{record.neglectNum,jdbcType=INTEGER},
      late_hour = #{record.lateHour,jdbcType=REAL},
      early_hour = #{record.earlyHour,jdbcType=REAL},
      actual_hour = #{record.actualHour,jdbcType=REAL},
      business_hour = #{record.businessHour,jdbcType=REAL},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      create_user = #{record.createUser,jdbcType=BIGINT},
      update_user = #{record.updateUser,jdbcType=BIGINT}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.hengyunsoft.platform.developer.entity.fast.po.attence.AttenceStatistic">
    <!--
    @mbggenerated
    -->
    update b_attence_statistic
    <set>
      <if test="appId != null">
        app_id = #{appId,jdbcType=VARCHAR},
      </if>
      <if test="userId != null">
        user_id = #{userId,jdbcType=BIGINT},
      </if>
      <if test="orgCode != null">
        org_code = #{orgCode,jdbcType=VARCHAR},
      </if>
      <if test="workDate != null">
        work_date = #{workDate,jdbcType=DATE},
      </if>
      <if test="extraWork != null">
        extra_work = #{extraWork,jdbcType=REAL},
      </if>
      <if test="sickLeave != null">
        sick_leave = #{sickLeave,jdbcType=REAL},
      </if>
      <if test="affairLeave != null">
        affair_leave = #{affairLeave,jdbcType=REAL},
      </if>
      <if test="annualLeave != null">
        annual_leave = #{annualLeave,jdbcType=REAL},
      </if>
      <if test="homeLeave != null">
        home_leave = #{homeLeave,jdbcType=REAL},
      </if>
      <if test="maritalLeave != null">
        marital_leave = #{maritalLeave,jdbcType=REAL},
      </if>
      <if test="funeralLeave != null">
        funeral_leave = #{funeralLeave,jdbcType=REAL},
      </if>
      <if test="maternityLeave != null">
        maternity_leave = #{maternityLeave,jdbcType=REAL},
      </if>
      <if test="expatriateLeave != null">
        expatriate_leave = #{expatriateLeave,jdbcType=REAL},
      </if>
      <if test="outsideHour != null">
        outside_hour = #{outsideHour,jdbcType=REAL},
      </if>
      <if test="neglectHour != null">
        neglect_hour = #{neglectHour,jdbcType=REAL},
      </if>
      <if test="neglectNum != null">
        neglect_num = #{neglectNum,jdbcType=INTEGER},
      </if>
      <if test="lateHour != null">
        late_hour = #{lateHour,jdbcType=REAL},
      </if>
      <if test="earlyHour != null">
        early_hour = #{earlyHour,jdbcType=REAL},
      </if>
      <if test="actualHour != null">
        actual_hour = #{actualHour,jdbcType=REAL},
      </if>
      <if test="businessHour != null">
        business_hour = #{businessHour,jdbcType=REAL},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createUser != null">
        create_user = #{createUser,jdbcType=BIGINT},
      </if>
      <if test="updateUser != null">
        update_user = #{updateUser,jdbcType=BIGINT},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByAppIdAndIdSelective" parameterType="com.hengyunsoft.platform.developer.entity.fast.po.attence.AttenceStatistic">
    <!--
    @mbggenerated
    -->
    update b_attence_statistic
    <set>
      <if test="appId != null">
        app_id = #{appId,jdbcType=VARCHAR},
      </if>
      <if test="userId != null">
        user_id = #{userId,jdbcType=BIGINT},
      </if>
      <if test="orgCode != null">
        org_code = #{orgCode,jdbcType=VARCHAR},
      </if>
      <if test="workDate != null">
        work_date = #{workDate,jdbcType=DATE},
      </if>
      <if test="extraWork != null">
        extra_work = #{extraWork,jdbcType=REAL},
      </if>
      <if test="sickLeave != null">
        sick_leave = #{sickLeave,jdbcType=REAL},
      </if>
      <if test="affairLeave != null">
        affair_leave = #{affairLeave,jdbcType=REAL},
      </if>
      <if test="annualLeave != null">
        annual_leave = #{annualLeave,jdbcType=REAL},
      </if>
      <if test="homeLeave != null">
        home_leave = #{homeLeave,jdbcType=REAL},
      </if>
      <if test="maritalLeave != null">
        marital_leave = #{maritalLeave,jdbcType=REAL},
      </if>
      <if test="funeralLeave != null">
        funeral_leave = #{funeralLeave,jdbcType=REAL},
      </if>
      <if test="maternityLeave != null">
        maternity_leave = #{maternityLeave,jdbcType=REAL},
      </if>
      <if test="expatriateLeave != null">
        expatriate_leave = #{expatriateLeave,jdbcType=REAL},
      </if>
      <if test="outsideHour != null">
        outside_hour = #{outsideHour,jdbcType=REAL},
      </if>
      <if test="neglectHour != null">
        neglect_hour = #{neglectHour,jdbcType=REAL},
      </if>
      <if test="neglectNum != null">
        neglect_num = #{neglectNum,jdbcType=INTEGER},
      </if>
      <if test="lateHour != null">
        late_hour = #{lateHour,jdbcType=REAL},
      </if>
      <if test="earlyHour != null">
        early_hour = #{earlyHour,jdbcType=REAL},
      </if>
      <if test="actualHour != null">
        actual_hour = #{actualHour,jdbcType=REAL},
      </if>
      <if test="businessHour != null">
        business_hour = #{businessHour,jdbcType=REAL},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createUser != null">
        create_user = #{createUser,jdbcType=BIGINT},
      </if>
      <if test="updateUser != null">
        update_user = #{updateUser,jdbcType=BIGINT},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
     and app_id = #{appId,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.hengyunsoft.platform.developer.entity.fast.po.attence.AttenceStatistic">
    <!--
    @mbggenerated
    -->
    update b_attence_statistic
    set app_id = #{appId,jdbcType=VARCHAR},
      user_id = #{userId,jdbcType=BIGINT},
      org_code = #{orgCode,jdbcType=VARCHAR},
      work_date = #{workDate,jdbcType=DATE},
      extra_work = #{extraWork,jdbcType=REAL},
      sick_leave = #{sickLeave,jdbcType=REAL},
      affair_leave = #{affairLeave,jdbcType=REAL},
      annual_leave = #{annualLeave,jdbcType=REAL},
      home_leave = #{homeLeave,jdbcType=REAL},
      marital_leave = #{maritalLeave,jdbcType=REAL},
      funeral_leave = #{funeralLeave,jdbcType=REAL},
      maternity_leave = #{maternityLeave,jdbcType=REAL},
      expatriate_leave = #{expatriateLeave,jdbcType=REAL},
      outside_hour = #{outsideHour,jdbcType=REAL},
      neglect_hour = #{neglectHour,jdbcType=REAL},
      neglect_num = #{neglectNum,jdbcType=INTEGER},
      late_hour = #{lateHour,jdbcType=REAL},
      early_hour = #{earlyHour,jdbcType=REAL},
      actual_hour = #{actualHour,jdbcType=REAL},
      business_hour = #{businessHour,jdbcType=REAL},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      create_user = #{createUser,jdbcType=BIGINT},
      update_user = #{updateUser,jdbcType=BIGINT}
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByAppIdAndId" parameterType="com.hengyunsoft.platform.developer.entity.fast.po.attence.AttenceStatistic">
    <!--
    @mbggenerated
    -->
    update b_attence_statistic
    set app_id = #{appId,jdbcType=VARCHAR},
      user_id = #{userId,jdbcType=BIGINT},
      org_code = #{orgCode,jdbcType=VARCHAR},
      work_date = #{workDate,jdbcType=DATE},
      extra_work = #{extraWork,jdbcType=REAL},
      sick_leave = #{sickLeave,jdbcType=REAL},
      affair_leave = #{affairLeave,jdbcType=REAL},
      annual_leave = #{annualLeave,jdbcType=REAL},
      home_leave = #{homeLeave,jdbcType=REAL},
      marital_leave = #{maritalLeave,jdbcType=REAL},
      funeral_leave = #{funeralLeave,jdbcType=REAL},
      maternity_leave = #{maternityLeave,jdbcType=REAL},
      expatriate_leave = #{expatriateLeave,jdbcType=REAL},
      outside_hour = #{outsideHour,jdbcType=REAL},
      neglect_hour = #{neglectHour,jdbcType=REAL},
      neglect_num = #{neglectNum,jdbcType=INTEGER},
      late_hour = #{lateHour,jdbcType=REAL},
      early_hour = #{earlyHour,jdbcType=REAL},
      actual_hour = #{actualHour,jdbcType=REAL},
      business_hour = #{businessHour,jdbcType=REAL},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      create_user = #{createUser,jdbcType=BIGINT},
      update_user = #{updateUser,jdbcType=BIGINT}
    where id = #{id,jdbcType=BIGINT}
     and app_id = #{appId,jdbcType=VARCHAR}
  </update>
</mapper>