<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.hengyunsoft.platform.developer.repository.fast.attence.dao.WorkApproveBusinessMapper">
  <resultMap id="BaseResultMap" type="com.hengyunsoft.platform.developer.entity.fast.po.attence.WorkApproveBusiness">
    <!--
    @mbggenerated
    -->
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="aprove_id" jdbcType="BIGINT" property="aproveId" />
    <result column="business_type" jdbcType="VARCHAR" property="businessType" />
    <result column="img_url" jdbcType="VARCHAR" property="imgUrl" />
    <result column="work_agent" jdbcType="BIGINT" property="workAgent" />
    <result column="addr_type" jdbcType="INTEGER" property="addrType" />
    <result column="business_addr" jdbcType="VARCHAR" property="businessAddr" />
    <result column="business_vehicle" jdbcType="VARCHAR" property="businessVehicle" />
    <result column="accompany_user" jdbcType="VARCHAR" property="accompanyUser" />
    <result column="accompany_user_phone" jdbcType="VARCHAR" property="accompanyUserPhone" />
    <result column="train_name" jdbcType="VARCHAR" property="trainName" />
    <result column="start_time" jdbcType="TIMESTAMP" property="startTime" />
    <result column="end_time" jdbcType="TIMESTAMP" property="endTime" />
    <result column="bus_hour" jdbcType="REAL" property="busHour" />
    <result column="business_renson" jdbcType="VARCHAR" property="businessRenson" />
    <result column="travel_apply" jdbcType="INTEGER" property="travelApply" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
    <result column="create_user" jdbcType="BIGINT" property="createUser" />
    <result column="update_user" jdbcType="BIGINT" property="updateUser" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <!--
    @mbggenerated
    -->
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <!--
    @mbggenerated
    -->
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    <!--
    @mbggenerated
    -->
    id, aprove_id, business_type, img_url, work_agent, addr_type, business_addr, business_vehicle, 
    accompany_user, accompany_user_phone, train_name, start_time, end_time, bus_hour, 
    business_renson, travel_apply, create_time, update_time, create_user, update_user
  </sql>
  <select id="selectByExample" parameterType="com.hengyunsoft.platform.developer.repository.fast.attence.example.WorkApproveBusinessExample" resultMap="BaseResultMap">
    <!--
    @mbggenerated
    -->
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from b_work_appr_business
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="groupByClause != null">
      group by ${groupByClause}
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <if test="limitValue != null">
      limit ${limitValue}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    <!--
    @mbggenerated
    -->
    select 
    <include refid="Base_Column_List" />
    from b_work_appr_business
    where id = #{id,jdbcType=BIGINT}
  </select>
  <select id="selectEntity" parameterType="com.hengyunsoft.platform.developer.repository.fast.attence.example.WorkApproveBusinessExample" resultMap="BaseResultMap">
    <!--
    @mbggenerated
    -->
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from b_work_appr_business
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="groupByClause != null">
      group by ${groupByClause}
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    limit 0,1 
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    <!--
    @mbggenerated
    -->
    delete from b_work_appr_business
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.hengyunsoft.platform.developer.repository.fast.attence.example.WorkApproveBusinessExample">
    <!--
    @mbggenerated
    -->
    delete from b_work_appr_business
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <update id="removeByExample" parameterType="com.hengyunsoft.platform.developer.entity.fast.po.attence.WorkApproveBusiness">
    <!--
    @mbggenerated
    -->
    update b_work_appr_business
    set is_delete = 1 

    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </update>
  <update id="removeByPrimaryKey" parameterType="com.hengyunsoft.platform.developer.entity.fast.po.attence.WorkApproveBusiness">
    <!--
    @mbggenerated
    -->
    update b_work_appr_business
    set is_delete = 1 

     where 1=1 and id = #{id,jdbcType=BIGINT}
  </update>
  <insert id="insert" parameterType="com.hengyunsoft.platform.developer.entity.fast.po.attence.WorkApproveBusiness">
    <!--
    @mbggenerated
    -->
    insert into b_work_appr_business (id, aprove_id, business_type, 
      img_url, work_agent, addr_type, 
      business_addr, business_vehicle, accompany_user, 
      accompany_user_phone, train_name, start_time, 
      end_time, bus_hour, business_renson, 
      travel_apply, create_time, update_time, 
      create_user, update_user)
    values (#{id,jdbcType=BIGINT}, #{aproveId,jdbcType=BIGINT}, #{businessType,jdbcType=VARCHAR}, 
      #{imgUrl,jdbcType=VARCHAR}, #{workAgent,jdbcType=BIGINT}, #{addrType,jdbcType=INTEGER}, 
      #{businessAddr,jdbcType=VARCHAR}, #{businessVehicle,jdbcType=VARCHAR}, #{accompanyUser,jdbcType=VARCHAR}, 
      #{accompanyUserPhone,jdbcType=VARCHAR}, #{trainName,jdbcType=VARCHAR}, #{startTime,jdbcType=TIMESTAMP}, 
      #{endTime,jdbcType=TIMESTAMP}, #{busHour,jdbcType=REAL}, #{businessRenson,jdbcType=VARCHAR}, 
      #{travelApply,jdbcType=INTEGER}, #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP}, 
      #{createUser,jdbcType=BIGINT}, #{updateUser,jdbcType=BIGINT})
  </insert>
  <insert id="batchInsert" parameterType="java.util.List">
    <!--
    @mbggenerated
    -->
    insert into b_work_appr_business (id, aprove_id, business_type, img_url, work_agent, addr_type, business_addr, business_vehicle, accompany_user, accompany_user_phone, train_name, start_time, end_time, bus_hour, business_renson, travel_apply, create_time, update_time, create_user, update_user ) values 
    <foreach collection="list" index="index" item="item" separator=",">
      (#{item.id,jdbcType=BIGINT}, #{item.aproveId,jdbcType=BIGINT}, #{item.businessType,jdbcType=VARCHAR}, 
        #{item.imgUrl,jdbcType=VARCHAR}, #{item.workAgent,jdbcType=BIGINT}, #{item.addrType,jdbcType=INTEGER}, 
        #{item.businessAddr,jdbcType=VARCHAR}, #{item.businessVehicle,jdbcType=VARCHAR}, 
        #{item.accompanyUser,jdbcType=VARCHAR}, #{item.accompanyUserPhone,jdbcType=VARCHAR}, 
        #{item.trainName,jdbcType=VARCHAR}, #{item.startTime,jdbcType=TIMESTAMP}, #{item.endTime,jdbcType=TIMESTAMP}, 
        #{item.busHour,jdbcType=REAL}, #{item.businessRenson,jdbcType=VARCHAR}, #{item.travelApply,jdbcType=INTEGER}, 
        #{item.createTime,jdbcType=TIMESTAMP}, #{item.updateTime,jdbcType=TIMESTAMP}, #{item.createUser,jdbcType=BIGINT}, 
        #{item.updateUser,jdbcType=BIGINT})
    </foreach>
  </insert>
  <insert id="insertSelective" parameterType="com.hengyunsoft.platform.developer.entity.fast.po.attence.WorkApproveBusiness">
    <!--
    @mbggenerated
    -->
    insert into b_work_appr_business
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="aproveId != null">
        aprove_id,
      </if>
      <if test="businessType != null">
        business_type,
      </if>
      <if test="imgUrl != null">
        img_url,
      </if>
      <if test="workAgent != null">
        work_agent,
      </if>
      <if test="addrType != null">
        addr_type,
      </if>
      <if test="businessAddr != null">
        business_addr,
      </if>
      <if test="businessVehicle != null">
        business_vehicle,
      </if>
      <if test="accompanyUser != null">
        accompany_user,
      </if>
      <if test="accompanyUserPhone != null">
        accompany_user_phone,
      </if>
      <if test="trainName != null">
        train_name,
      </if>
      <if test="startTime != null">
        start_time,
      </if>
      <if test="endTime != null">
        end_time,
      </if>
      <if test="busHour != null">
        bus_hour,
      </if>
      <if test="businessRenson != null">
        business_renson,
      </if>
      <if test="travelApply != null">
        travel_apply,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
      <if test="createUser != null">
        create_user,
      </if>
      <if test="updateUser != null">
        update_user,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=BIGINT},
      </if>
      <if test="aproveId != null">
        #{aproveId,jdbcType=BIGINT},
      </if>
      <if test="businessType != null">
        #{businessType,jdbcType=VARCHAR},
      </if>
      <if test="imgUrl != null">
        #{imgUrl,jdbcType=VARCHAR},
      </if>
      <if test="workAgent != null">
        #{workAgent,jdbcType=BIGINT},
      </if>
      <if test="addrType != null">
        #{addrType,jdbcType=INTEGER},
      </if>
      <if test="businessAddr != null">
        #{businessAddr,jdbcType=VARCHAR},
      </if>
      <if test="businessVehicle != null">
        #{businessVehicle,jdbcType=VARCHAR},
      </if>
      <if test="accompanyUser != null">
        #{accompanyUser,jdbcType=VARCHAR},
      </if>
      <if test="accompanyUserPhone != null">
        #{accompanyUserPhone,jdbcType=VARCHAR},
      </if>
      <if test="trainName != null">
        #{trainName,jdbcType=VARCHAR},
      </if>
      <if test="startTime != null">
        #{startTime,jdbcType=TIMESTAMP},
      </if>
      <if test="endTime != null">
        #{endTime,jdbcType=TIMESTAMP},
      </if>
      <if test="busHour != null">
        #{busHour,jdbcType=REAL},
      </if>
      <if test="businessRenson != null">
        #{businessRenson,jdbcType=VARCHAR},
      </if>
      <if test="travelApply != null">
        #{travelApply,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createUser != null">
        #{createUser,jdbcType=BIGINT},
      </if>
      <if test="updateUser != null">
        #{updateUser,jdbcType=BIGINT},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.hengyunsoft.platform.developer.repository.fast.attence.example.WorkApproveBusinessExample" resultType="java.lang.Integer">
    <!--
    @mbggenerated
    -->
    select count(*) from b_work_appr_business
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    <!--
    @mbggenerated
    -->
    update b_work_appr_business
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.aproveId != null">
        aprove_id = #{record.aproveId,jdbcType=BIGINT},
      </if>
      <if test="record.businessType != null">
        business_type = #{record.businessType,jdbcType=VARCHAR},
      </if>
      <if test="record.imgUrl != null">
        img_url = #{record.imgUrl,jdbcType=VARCHAR},
      </if>
      <if test="record.workAgent != null">
        work_agent = #{record.workAgent,jdbcType=BIGINT},
      </if>
      <if test="record.addrType != null">
        addr_type = #{record.addrType,jdbcType=INTEGER},
      </if>
      <if test="record.businessAddr != null">
        business_addr = #{record.businessAddr,jdbcType=VARCHAR},
      </if>
      <if test="record.businessVehicle != null">
        business_vehicle = #{record.businessVehicle,jdbcType=VARCHAR},
      </if>
      <if test="record.accompanyUser != null">
        accompany_user = #{record.accompanyUser,jdbcType=VARCHAR},
      </if>
      <if test="record.accompanyUserPhone != null">
        accompany_user_phone = #{record.accompanyUserPhone,jdbcType=VARCHAR},
      </if>
      <if test="record.trainName != null">
        train_name = #{record.trainName,jdbcType=VARCHAR},
      </if>
      <if test="record.startTime != null">
        start_time = #{record.startTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.endTime != null">
        end_time = #{record.endTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.busHour != null">
        bus_hour = #{record.busHour,jdbcType=REAL},
      </if>
      <if test="record.businessRenson != null">
        business_renson = #{record.businessRenson,jdbcType=VARCHAR},
      </if>
      <if test="record.travelApply != null">
        travel_apply = #{record.travelApply,jdbcType=INTEGER},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateTime != null">
        update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.createUser != null">
        create_user = #{record.createUser,jdbcType=BIGINT},
      </if>
      <if test="record.updateUser != null">
        update_user = #{record.updateUser,jdbcType=BIGINT},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    <!--
    @mbggenerated
    -->
    update b_work_appr_business
    set id = #{record.id,jdbcType=BIGINT},
      aprove_id = #{record.aproveId,jdbcType=BIGINT},
      business_type = #{record.businessType,jdbcType=VARCHAR},
      img_url = #{record.imgUrl,jdbcType=VARCHAR},
      work_agent = #{record.workAgent,jdbcType=BIGINT},
      addr_type = #{record.addrType,jdbcType=INTEGER},
      business_addr = #{record.businessAddr,jdbcType=VARCHAR},
      business_vehicle = #{record.businessVehicle,jdbcType=VARCHAR},
      accompany_user = #{record.accompanyUser,jdbcType=VARCHAR},
      accompany_user_phone = #{record.accompanyUserPhone,jdbcType=VARCHAR},
      train_name = #{record.trainName,jdbcType=VARCHAR},
      start_time = #{record.startTime,jdbcType=TIMESTAMP},
      end_time = #{record.endTime,jdbcType=TIMESTAMP},
      bus_hour = #{record.busHour,jdbcType=REAL},
      business_renson = #{record.businessRenson,jdbcType=VARCHAR},
      travel_apply = #{record.travelApply,jdbcType=INTEGER},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      create_user = #{record.createUser,jdbcType=BIGINT},
      update_user = #{record.updateUser,jdbcType=BIGINT}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.hengyunsoft.platform.developer.entity.fast.po.attence.WorkApproveBusiness">
    <!--
    @mbggenerated
    -->
    update b_work_appr_business
    <set>
      <if test="aproveId != null">
        aprove_id = #{aproveId,jdbcType=BIGINT},
      </if>
      <if test="businessType != null">
        business_type = #{businessType,jdbcType=VARCHAR},
      </if>
      <if test="imgUrl != null">
        img_url = #{imgUrl,jdbcType=VARCHAR},
      </if>
      <if test="workAgent != null">
        work_agent = #{workAgent,jdbcType=BIGINT},
      </if>
      <if test="addrType != null">
        addr_type = #{addrType,jdbcType=INTEGER},
      </if>
      <if test="businessAddr != null">
        business_addr = #{businessAddr,jdbcType=VARCHAR},
      </if>
      <if test="businessVehicle != null">
        business_vehicle = #{businessVehicle,jdbcType=VARCHAR},
      </if>
      <if test="accompanyUser != null">
        accompany_user = #{accompanyUser,jdbcType=VARCHAR},
      </if>
      <if test="accompanyUserPhone != null">
        accompany_user_phone = #{accompanyUserPhone,jdbcType=VARCHAR},
      </if>
      <if test="trainName != null">
        train_name = #{trainName,jdbcType=VARCHAR},
      </if>
      <if test="startTime != null">
        start_time = #{startTime,jdbcType=TIMESTAMP},
      </if>
      <if test="endTime != null">
        end_time = #{endTime,jdbcType=TIMESTAMP},
      </if>
      <if test="busHour != null">
        bus_hour = #{busHour,jdbcType=REAL},
      </if>
      <if test="businessRenson != null">
        business_renson = #{businessRenson,jdbcType=VARCHAR},
      </if>
      <if test="travelApply != null">
        travel_apply = #{travelApply,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createUser != null">
        create_user = #{createUser,jdbcType=BIGINT},
      </if>
      <if test="updateUser != null">
        update_user = #{updateUser,jdbcType=BIGINT},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.hengyunsoft.platform.developer.entity.fast.po.attence.WorkApproveBusiness">
    <!--
    @mbggenerated
    -->
    update b_work_appr_business
    set aprove_id = #{aproveId,jdbcType=BIGINT},
      business_type = #{businessType,jdbcType=VARCHAR},
      img_url = #{imgUrl,jdbcType=VARCHAR},
      work_agent = #{workAgent,jdbcType=BIGINT},
      addr_type = #{addrType,jdbcType=INTEGER},
      business_addr = #{businessAddr,jdbcType=VARCHAR},
      business_vehicle = #{businessVehicle,jdbcType=VARCHAR},
      accompany_user = #{accompanyUser,jdbcType=VARCHAR},
      accompany_user_phone = #{accompanyUserPhone,jdbcType=VARCHAR},
      train_name = #{trainName,jdbcType=VARCHAR},
      start_time = #{startTime,jdbcType=TIMESTAMP},
      end_time = #{endTime,jdbcType=TIMESTAMP},
      bus_hour = #{busHour,jdbcType=REAL},
      business_renson = #{businessRenson,jdbcType=VARCHAR},
      travel_apply = #{travelApply,jdbcType=INTEGER},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      create_user = #{createUser,jdbcType=BIGINT},
      update_user = #{updateUser,jdbcType=BIGINT}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>