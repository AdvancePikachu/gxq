<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.hengyunsoft.platform.developer.repository.fast.attence.dao.AttenceRuleMapper">
  <resultMap id="BaseResultMap" type="com.hengyunsoft.platform.developer.entity.fast.po.attence.AttenceRule">
    <!--
    @mbggenerated
    -->
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="app_id" jdbcType="VARCHAR" property="appId" />
    <result column="in_time" jdbcType="VARCHAR" property="inTime" />
    <result column="out_time" jdbcType="VARCHAR" property="outTime" />
    <result column="later_start_time" jdbcType="CHAR" property="laterStartTime" />
    <result column="later_end_time" jdbcType="CHAR" property="laterEndTime" />
    <result column="lunch_start_time" jdbcType="CHAR" property="lunchStartTime" />
    <result column="lunch_end_time" jdbcType="CHAR" property="lunchEndTime" />
    <result column="absent_time_range" jdbcType="VARCHAR" property="absentTimeRange" />
    <result column="leave_time_range" jdbcType="VARCHAR" property="leaveTimeRange" />
    <result column="distance_range" jdbcType="VARCHAR" property="distanceRange" />
    <result column="latitude" jdbcType="DOUBLE" property="latitude" />
    <result column="upload_url" jdbcType="VARCHAR" property="uploadUrl" />
    <result column="longtude" jdbcType="DOUBLE" property="longtude" />
    <result column="location" jdbcType="VARCHAR" property="location" />
    <result column="start_time" jdbcType="VARCHAR" property="startTime" />
    <result column="coefficient" jdbcType="REAL" property="coefficient" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
    <result column="create_user" jdbcType="BIGINT" property="createUser" />
    <result column="update_user" jdbcType="BIGINT" property="updateUser" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <!--
    @mbggenerated
    -->
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <!--
    @mbggenerated
    -->
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    <!--
    @mbggenerated
    -->
    id, app_id, in_time, out_time, later_start_time, later_end_time, lunch_start_time, 
    lunch_end_time, absent_time_range, leave_time_range, distance_range, latitude, upload_url, 
    longtude, location, start_time, coefficient, create_time, update_time, create_user, 
    update_user
  </sql>
  <select id="selectByExample" parameterType="com.hengyunsoft.platform.developer.repository.fast.attence.example.AttenceRuleExample" resultMap="BaseResultMap">
    <!--
    @mbggenerated
    -->
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from b_attence_rule
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="groupByClause != null">
      group by ${groupByClause}
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <if test="limitValue != null">
      limit ${limitValue}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    <!--
    @mbggenerated
    -->
    select 
    <include refid="Base_Column_List" />
    from b_attence_rule
    where id = #{id,jdbcType=BIGINT}
  </select>
  <select id="selectEntity" parameterType="com.hengyunsoft.platform.developer.repository.fast.attence.example.AttenceRuleExample" resultMap="BaseResultMap">
    <!--
    @mbggenerated
    -->
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from b_attence_rule
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="groupByClause != null">
      group by ${groupByClause}
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    limit 0,1 
  </select>
  <select id="selectByAppIdAndId" parameterType="map" resultMap="BaseResultMap">
    <!--
    @mbggenerated
    -->
    select
    <include refid="Base_Column_List" />
    from b_attence_rule
    where 1=1 and app_id = #{appId,jdbcType=VARCHAR} and id = #{id,jdbcType=BIGINT}
  </select>
  <select id="selectAppIdById" parameterType="map" resultType="java.lang.String">
    <!--
    @mbggenerated
    -->
    select app_id 
    from b_attence_rule
    where 1=1 and id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    <!--
    @mbggenerated
    -->
    delete from b_attence_rule
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.hengyunsoft.platform.developer.repository.fast.attence.example.AttenceRuleExample">
    <!--
    @mbggenerated
    -->
    delete from b_attence_rule
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <delete id="deleteByIds" parameterType="list">
    <!--
    @mbggenerated
    -->
    delete from  b_attence_rule where id in 
    <foreach close=")" collection="list" index="index" item="item" open="(" separator=",">
      #{item}
    </foreach> 
  </delete>
  <delete id="deleteByAppIdAndId" parameterType="java.lang.Long">
    <!--
    @mbggenerated
    -->
    delete from b_attence_rule
    where id = #{id,jdbcType=BIGINT}
     and app_id = #{appId,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByAppIdAndIds" parameterType="list">
    <!--
    @mbggenerated
    -->
    delete from  b_attence_rule where id in 
    <foreach close=")" collection="list" index="index" item="item" open="(" separator=",">
      #{item}
    </foreach> 
     and app_id = #{appId,jdbcType=VARCHAR}
  </delete>
  <update id="removeByExample" parameterType="com.hengyunsoft.platform.developer.entity.fast.po.attence.AttenceRule">
    <!--
    @mbggenerated
    -->
    update b_attence_rule
    set is_delete = 1 

    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </update>
  <update id="removeByAppIdAndIds" parameterType="com.hengyunsoft.platform.developer.entity.fast.po.attence.AttenceRule">
    <!--
    @mbggenerated
    -->
    update b_attence_rule
    set is_delete = 1 
 where 1=1 and id in 
 <foreach close=")" collection="list" index="index" item="item" open="(" separator=",">
    #{item}
  </foreach>
     and app_id = #{appId,jdbcType=VARCHAR}
  </update>
  <update id="removeByPrimaryKey" parameterType="com.hengyunsoft.platform.developer.entity.fast.po.attence.AttenceRule">
    <!--
    @mbggenerated
    -->
    update b_attence_rule
    set is_delete = 1 

     where 1=1 and id = #{id,jdbcType=BIGINT}
  </update>
  <update id="removeByAppIdAndId" parameterType="com.hengyunsoft.platform.developer.entity.fast.po.attence.AttenceRule">
    <!--
    @mbggenerated
    -->
    update b_attence_rule
    set is_delete = 1 

     where 1=1 and id = #{id,jdbcType=BIGINT}
     and app_id = #{appId,jdbcType=VARCHAR}
  </update>
  <insert id="insert" parameterType="com.hengyunsoft.platform.developer.entity.fast.po.attence.AttenceRule">
    <!--
    @mbggenerated
    -->
    insert into b_attence_rule (id, app_id, in_time, 
      out_time, later_start_time, later_end_time, 
      lunch_start_time, lunch_end_time, absent_time_range, 
      leave_time_range, distance_range, latitude, 
      upload_url, longtude, location, 
      start_time, coefficient, create_time, 
      update_time, create_user, update_user
      )
    values (#{id,jdbcType=BIGINT}, #{appId,jdbcType=VARCHAR}, #{inTime,jdbcType=VARCHAR}, 
      #{outTime,jdbcType=VARCHAR}, #{laterStartTime,jdbcType=CHAR}, #{laterEndTime,jdbcType=CHAR}, 
      #{lunchStartTime,jdbcType=CHAR}, #{lunchEndTime,jdbcType=CHAR}, #{absentTimeRange,jdbcType=VARCHAR}, 
      #{leaveTimeRange,jdbcType=VARCHAR}, #{distanceRange,jdbcType=VARCHAR}, #{latitude,jdbcType=DOUBLE}, 
      #{uploadUrl,jdbcType=VARCHAR}, #{longtude,jdbcType=DOUBLE}, #{location,jdbcType=VARCHAR}, 
      #{startTime,jdbcType=VARCHAR}, #{coefficient,jdbcType=REAL}, #{createTime,jdbcType=TIMESTAMP}, 
      #{updateTime,jdbcType=TIMESTAMP}, #{createUser,jdbcType=BIGINT}, #{updateUser,jdbcType=BIGINT}
      )
  </insert>
  <insert id="batchInsert" parameterType="java.util.List">
    <!--
    @mbggenerated
    -->
    insert into b_attence_rule (id, app_id, in_time, out_time, later_start_time, later_end_time, lunch_start_time, lunch_end_time, absent_time_range, leave_time_range, distance_range, latitude, upload_url, longtude, location, start_time, coefficient, create_time, update_time, create_user, update_user ) values 
    <foreach collection="list" index="index" item="item" separator=",">
      (#{item.id,jdbcType=BIGINT}, #{item.appId,jdbcType=VARCHAR}, #{item.inTime,jdbcType=VARCHAR}, 
        #{item.outTime,jdbcType=VARCHAR}, #{item.laterStartTime,jdbcType=CHAR}, #{item.laterEndTime,jdbcType=CHAR}, 
        #{item.lunchStartTime,jdbcType=CHAR}, #{item.lunchEndTime,jdbcType=CHAR}, #{item.absentTimeRange,jdbcType=VARCHAR}, 
        #{item.leaveTimeRange,jdbcType=VARCHAR}, #{item.distanceRange,jdbcType=VARCHAR}, 
        #{item.latitude,jdbcType=DOUBLE}, #{item.uploadUrl,jdbcType=VARCHAR}, #{item.longtude,jdbcType=DOUBLE}, 
        #{item.location,jdbcType=VARCHAR}, #{item.startTime,jdbcType=VARCHAR}, #{item.coefficient,jdbcType=REAL}, 
        #{item.createTime,jdbcType=TIMESTAMP}, #{item.updateTime,jdbcType=TIMESTAMP}, #{item.createUser,jdbcType=BIGINT}, 
        #{item.updateUser,jdbcType=BIGINT})
    </foreach>
  </insert>
  <insert id="insertSelective" parameterType="com.hengyunsoft.platform.developer.entity.fast.po.attence.AttenceRule">
    <!--
    @mbggenerated
    -->
    insert into b_attence_rule
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="appId != null">
        app_id,
      </if>
      <if test="inTime != null">
        in_time,
      </if>
      <if test="outTime != null">
        out_time,
      </if>
      <if test="laterStartTime != null">
        later_start_time,
      </if>
      <if test="laterEndTime != null">
        later_end_time,
      </if>
      <if test="lunchStartTime != null">
        lunch_start_time,
      </if>
      <if test="lunchEndTime != null">
        lunch_end_time,
      </if>
      <if test="absentTimeRange != null">
        absent_time_range,
      </if>
      <if test="leaveTimeRange != null">
        leave_time_range,
      </if>
      <if test="distanceRange != null">
        distance_range,
      </if>
      <if test="latitude != null">
        latitude,
      </if>
      <if test="uploadUrl != null">
        upload_url,
      </if>
      <if test="longtude != null">
        longtude,
      </if>
      <if test="location != null">
        location,
      </if>
      <if test="startTime != null">
        start_time,
      </if>
      <if test="coefficient != null">
        coefficient,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
      <if test="createUser != null">
        create_user,
      </if>
      <if test="updateUser != null">
        update_user,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=BIGINT},
      </if>
      <if test="appId != null">
        #{appId,jdbcType=VARCHAR},
      </if>
      <if test="inTime != null">
        #{inTime,jdbcType=VARCHAR},
      </if>
      <if test="outTime != null">
        #{outTime,jdbcType=VARCHAR},
      </if>
      <if test="laterStartTime != null">
        #{laterStartTime,jdbcType=CHAR},
      </if>
      <if test="laterEndTime != null">
        #{laterEndTime,jdbcType=CHAR},
      </if>
      <if test="lunchStartTime != null">
        #{lunchStartTime,jdbcType=CHAR},
      </if>
      <if test="lunchEndTime != null">
        #{lunchEndTime,jdbcType=CHAR},
      </if>
      <if test="absentTimeRange != null">
        #{absentTimeRange,jdbcType=VARCHAR},
      </if>
      <if test="leaveTimeRange != null">
        #{leaveTimeRange,jdbcType=VARCHAR},
      </if>
      <if test="distanceRange != null">
        #{distanceRange,jdbcType=VARCHAR},
      </if>
      <if test="latitude != null">
        #{latitude,jdbcType=DOUBLE},
      </if>
      <if test="uploadUrl != null">
        #{uploadUrl,jdbcType=VARCHAR},
      </if>
      <if test="longtude != null">
        #{longtude,jdbcType=DOUBLE},
      </if>
      <if test="location != null">
        #{location,jdbcType=VARCHAR},
      </if>
      <if test="startTime != null">
        #{startTime,jdbcType=VARCHAR},
      </if>
      <if test="coefficient != null">
        #{coefficient,jdbcType=REAL},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createUser != null">
        #{createUser,jdbcType=BIGINT},
      </if>
      <if test="updateUser != null">
        #{updateUser,jdbcType=BIGINT},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.hengyunsoft.platform.developer.repository.fast.attence.example.AttenceRuleExample" resultType="java.lang.Integer">
    <!--
    @mbggenerated
    -->
    select count(*) from b_attence_rule
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    <!--
    @mbggenerated
    -->
    update b_attence_rule
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.appId != null">
        app_id = #{record.appId,jdbcType=VARCHAR},
      </if>
      <if test="record.inTime != null">
        in_time = #{record.inTime,jdbcType=VARCHAR},
      </if>
      <if test="record.outTime != null">
        out_time = #{record.outTime,jdbcType=VARCHAR},
      </if>
      <if test="record.laterStartTime != null">
        later_start_time = #{record.laterStartTime,jdbcType=CHAR},
      </if>
      <if test="record.laterEndTime != null">
        later_end_time = #{record.laterEndTime,jdbcType=CHAR},
      </if>
      <if test="record.lunchStartTime != null">
        lunch_start_time = #{record.lunchStartTime,jdbcType=CHAR},
      </if>
      <if test="record.lunchEndTime != null">
        lunch_end_time = #{record.lunchEndTime,jdbcType=CHAR},
      </if>
      <if test="record.absentTimeRange != null">
        absent_time_range = #{record.absentTimeRange,jdbcType=VARCHAR},
      </if>
      <if test="record.leaveTimeRange != null">
        leave_time_range = #{record.leaveTimeRange,jdbcType=VARCHAR},
      </if>
      <if test="record.distanceRange != null">
        distance_range = #{record.distanceRange,jdbcType=VARCHAR},
      </if>
      <if test="record.latitude != null">
        latitude = #{record.latitude,jdbcType=DOUBLE},
      </if>
      <if test="record.uploadUrl != null">
        upload_url = #{record.uploadUrl,jdbcType=VARCHAR},
      </if>
      <if test="record.longtude != null">
        longtude = #{record.longtude,jdbcType=DOUBLE},
      </if>
      <if test="record.location != null">
        location = #{record.location,jdbcType=VARCHAR},
      </if>
      <if test="record.startTime != null">
        start_time = #{record.startTime,jdbcType=VARCHAR},
      </if>
      <if test="record.coefficient != null">
        coefficient = #{record.coefficient,jdbcType=REAL},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateTime != null">
        update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.createUser != null">
        create_user = #{record.createUser,jdbcType=BIGINT},
      </if>
      <if test="record.updateUser != null">
        update_user = #{record.updateUser,jdbcType=BIGINT},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    <!--
    @mbggenerated
    -->
    update b_attence_rule
    set id = #{record.id,jdbcType=BIGINT},
      app_id = #{record.appId,jdbcType=VARCHAR},
      in_time = #{record.inTime,jdbcType=VARCHAR},
      out_time = #{record.outTime,jdbcType=VARCHAR},
      later_start_time = #{record.laterStartTime,jdbcType=CHAR},
      later_end_time = #{record.laterEndTime,jdbcType=CHAR},
      lunch_start_time = #{record.lunchStartTime,jdbcType=CHAR},
      lunch_end_time = #{record.lunchEndTime,jdbcType=CHAR},
      absent_time_range = #{record.absentTimeRange,jdbcType=VARCHAR},
      leave_time_range = #{record.leaveTimeRange,jdbcType=VARCHAR},
      distance_range = #{record.distanceRange,jdbcType=VARCHAR},
      latitude = #{record.latitude,jdbcType=DOUBLE},
      upload_url = #{record.uploadUrl,jdbcType=VARCHAR},
      longtude = #{record.longtude,jdbcType=DOUBLE},
      location = #{record.location,jdbcType=VARCHAR},
      start_time = #{record.startTime,jdbcType=VARCHAR},
      coefficient = #{record.coefficient,jdbcType=REAL},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      create_user = #{record.createUser,jdbcType=BIGINT},
      update_user = #{record.updateUser,jdbcType=BIGINT}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.hengyunsoft.platform.developer.entity.fast.po.attence.AttenceRule">
    <!--
    @mbggenerated
    -->
    update b_attence_rule
    <set>
      <if test="appId != null">
        app_id = #{appId,jdbcType=VARCHAR},
      </if>
      <if test="inTime != null">
        in_time = #{inTime,jdbcType=VARCHAR},
      </if>
      <if test="outTime != null">
        out_time = #{outTime,jdbcType=VARCHAR},
      </if>
      <if test="laterStartTime != null">
        later_start_time = #{laterStartTime,jdbcType=CHAR},
      </if>
      <if test="laterEndTime != null">
        later_end_time = #{laterEndTime,jdbcType=CHAR},
      </if>
      <if test="lunchStartTime != null">
        lunch_start_time = #{lunchStartTime,jdbcType=CHAR},
      </if>
      <if test="lunchEndTime != null">
        lunch_end_time = #{lunchEndTime,jdbcType=CHAR},
      </if>
      <if test="absentTimeRange != null">
        absent_time_range = #{absentTimeRange,jdbcType=VARCHAR},
      </if>
      <if test="leaveTimeRange != null">
        leave_time_range = #{leaveTimeRange,jdbcType=VARCHAR},
      </if>
      <if test="distanceRange != null">
        distance_range = #{distanceRange,jdbcType=VARCHAR},
      </if>
      <if test="latitude != null">
        latitude = #{latitude,jdbcType=DOUBLE},
      </if>
      <if test="uploadUrl != null">
        upload_url = #{uploadUrl,jdbcType=VARCHAR},
      </if>
      <if test="longtude != null">
        longtude = #{longtude,jdbcType=DOUBLE},
      </if>
      <if test="location != null">
        location = #{location,jdbcType=VARCHAR},
      </if>
      <if test="startTime != null">
        start_time = #{startTime,jdbcType=VARCHAR},
      </if>
      <if test="coefficient != null">
        coefficient = #{coefficient,jdbcType=REAL},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createUser != null">
        create_user = #{createUser,jdbcType=BIGINT},
      </if>
      <if test="updateUser != null">
        update_user = #{updateUser,jdbcType=BIGINT},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByAppIdAndIdSelective" parameterType="com.hengyunsoft.platform.developer.entity.fast.po.attence.AttenceRule">
    <!--
    @mbggenerated
    -->
    update b_attence_rule
    <set>
      <if test="appId != null">
        app_id = #{appId,jdbcType=VARCHAR},
      </if>
      <if test="inTime != null">
        in_time = #{inTime,jdbcType=VARCHAR},
      </if>
      <if test="outTime != null">
        out_time = #{outTime,jdbcType=VARCHAR},
      </if>
      <if test="laterStartTime != null">
        later_start_time = #{laterStartTime,jdbcType=CHAR},
      </if>
      <if test="laterEndTime != null">
        later_end_time = #{laterEndTime,jdbcType=CHAR},
      </if>
      <if test="lunchStartTime != null">
        lunch_start_time = #{lunchStartTime,jdbcType=CHAR},
      </if>
      <if test="lunchEndTime != null">
        lunch_end_time = #{lunchEndTime,jdbcType=CHAR},
      </if>
      <if test="absentTimeRange != null">
        absent_time_range = #{absentTimeRange,jdbcType=VARCHAR},
      </if>
      <if test="leaveTimeRange != null">
        leave_time_range = #{leaveTimeRange,jdbcType=VARCHAR},
      </if>
      <if test="distanceRange != null">
        distance_range = #{distanceRange,jdbcType=VARCHAR},
      </if>
      <if test="latitude != null">
        latitude = #{latitude,jdbcType=DOUBLE},
      </if>
      <if test="uploadUrl != null">
        upload_url = #{uploadUrl,jdbcType=VARCHAR},
      </if>
      <if test="longtude != null">
        longtude = #{longtude,jdbcType=DOUBLE},
      </if>
      <if test="location != null">
        location = #{location,jdbcType=VARCHAR},
      </if>
      <if test="startTime != null">
        start_time = #{startTime,jdbcType=VARCHAR},
      </if>
      <if test="coefficient != null">
        coefficient = #{coefficient,jdbcType=REAL},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createUser != null">
        create_user = #{createUser,jdbcType=BIGINT},
      </if>
      <if test="updateUser != null">
        update_user = #{updateUser,jdbcType=BIGINT},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
     and app_id = #{appId,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.hengyunsoft.platform.developer.entity.fast.po.attence.AttenceRule">
    <!--
    @mbggenerated
    -->
    update b_attence_rule
    set app_id = #{appId,jdbcType=VARCHAR},
      in_time = #{inTime,jdbcType=VARCHAR},
      out_time = #{outTime,jdbcType=VARCHAR},
      later_start_time = #{laterStartTime,jdbcType=CHAR},
      later_end_time = #{laterEndTime,jdbcType=CHAR},
      lunch_start_time = #{lunchStartTime,jdbcType=CHAR},
      lunch_end_time = #{lunchEndTime,jdbcType=CHAR},
      absent_time_range = #{absentTimeRange,jdbcType=VARCHAR},
      leave_time_range = #{leaveTimeRange,jdbcType=VARCHAR},
      distance_range = #{distanceRange,jdbcType=VARCHAR},
      latitude = #{latitude,jdbcType=DOUBLE},
      upload_url = #{uploadUrl,jdbcType=VARCHAR},
      longtude = #{longtude,jdbcType=DOUBLE},
      location = #{location,jdbcType=VARCHAR},
      start_time = #{startTime,jdbcType=VARCHAR},
      coefficient = #{coefficient,jdbcType=REAL},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      create_user = #{createUser,jdbcType=BIGINT},
      update_user = #{updateUser,jdbcType=BIGINT}
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByAppIdAndId" parameterType="com.hengyunsoft.platform.developer.entity.fast.po.attence.AttenceRule">
    <!--
    @mbggenerated
    -->
    update b_attence_rule
    set app_id = #{appId,jdbcType=VARCHAR},
      in_time = #{inTime,jdbcType=VARCHAR},
      out_time = #{outTime,jdbcType=VARCHAR},
      later_start_time = #{laterStartTime,jdbcType=CHAR},
      later_end_time = #{laterEndTime,jdbcType=CHAR},
      lunch_start_time = #{lunchStartTime,jdbcType=CHAR},
      lunch_end_time = #{lunchEndTime,jdbcType=CHAR},
      absent_time_range = #{absentTimeRange,jdbcType=VARCHAR},
      leave_time_range = #{leaveTimeRange,jdbcType=VARCHAR},
      distance_range = #{distanceRange,jdbcType=VARCHAR},
      latitude = #{latitude,jdbcType=DOUBLE},
      upload_url = #{uploadUrl,jdbcType=VARCHAR},
      longtude = #{longtude,jdbcType=DOUBLE},
      location = #{location,jdbcType=VARCHAR},
      start_time = #{startTime,jdbcType=VARCHAR},
      coefficient = #{coefficient,jdbcType=REAL},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      create_user = #{createUser,jdbcType=BIGINT},
      update_user = #{updateUser,jdbcType=BIGINT}
    where id = #{id,jdbcType=BIGINT}
     and app_id = #{appId,jdbcType=VARCHAR}
  </update>
</mapper>