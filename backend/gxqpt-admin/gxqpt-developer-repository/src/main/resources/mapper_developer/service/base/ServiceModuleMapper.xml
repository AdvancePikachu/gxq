<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.hengyunsoft.platform.developer.repository.service.dao.ServiceModuleMapper">
  <resultMap id="BaseResultMap" type="com.hengyunsoft.platform.developer.entity.service.po.ServiceModule">
    <!--
    @mbggenerated
    -->
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="logo_" jdbcType="VARCHAR" property="logo" />
    <result column="name_" jdbcType="VARCHAR" property="name" />
    <result column="code_" jdbcType="VARCHAR" property="code" />
    <result column="desc_" jdbcType="VARCHAR" property="desc" />
    <result column="status_" jdbcType="SMALLINT" property="status" />
    <result column="email_" jdbcType="VARCHAR" property="email" />
    <result column="app_id" jdbcType="VARCHAR" property="appId" />
    <result column="module_type" jdbcType="VARCHAR" property="moduleType" />
    <result column="create_user" jdbcType="BIGINT" property="createUser" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="update_user" jdbcType="BIGINT" property="updateUser" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
    <result column="public_is" jdbcType="BIT" property="publicIs" />
    <result column="public_look" jdbcType="BIT" property="publicLook" />
    <result column="api_sync_url" jdbcType="VARCHAR" property="apiSyncUrl" />
    <result column="resource_num" jdbcType="INTEGER" property="resourceNum" />
    <result column="stop_time" jdbcType="TIMESTAMP" property="stopTime" />
    <result column="advice_module" jdbcType="BIGINT" property="adviceModule" />
    <result column="reduce_time" jdbcType="DOUBLE" property="reduceTime" />
    <result column="reduce_cost" jdbcType="INTEGER" property="reduceCost" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <!--
    @mbggenerated
    -->
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <!--
    @mbggenerated
    -->
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    <!--
    @mbggenerated
    -->
    id, logo_, name_, code_, desc_, status_, email_, app_id, module_type, create_user, 
    create_time, update_user, update_time, public_is, public_look, api_sync_url, resource_num, 
    stop_time, advice_module, reduce_time, reduce_cost
  </sql>
  <select id="selectByExample" parameterType="com.hengyunsoft.platform.developer.repository.service.example.ServiceModuleExample" resultMap="BaseResultMap">
    <!--
    @mbggenerated
    -->
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from c_service_module
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="groupByClause != null">
      group by ${groupByClause}
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <if test="limitValue != null">
      limit ${limitValue}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    <!--
    @mbggenerated
    -->
    select 
    <include refid="Base_Column_List" />
    from c_service_module
    where id = #{id,jdbcType=BIGINT}
  </select>
  <select id="selectEntity" parameterType="com.hengyunsoft.platform.developer.repository.service.example.ServiceModuleExample" resultMap="BaseResultMap">
    <!--
    @mbggenerated
    -->
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from c_service_module
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="groupByClause != null">
      group by ${groupByClause}
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    limit 0,1 
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    <!--
    @mbggenerated
    -->
    delete from c_service_module
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.hengyunsoft.platform.developer.repository.service.example.ServiceModuleExample">
    <!--
    @mbggenerated
    -->
    delete from c_service_module
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <update id="removeByExample" parameterType="com.hengyunsoft.platform.developer.entity.service.po.ServiceModule">
    <!--
    @mbggenerated
    -->
    update c_service_module
    set is_delete = 1 

    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </update>
  <update id="removeByPrimaryKey" parameterType="com.hengyunsoft.platform.developer.entity.service.po.ServiceModule">
    <!--
    @mbggenerated
    -->
    update c_service_module
    set is_delete = 1 

     where 1=1 and id = #{id,jdbcType=BIGINT}
  </update>
  <insert id="insert" parameterType="com.hengyunsoft.platform.developer.entity.service.po.ServiceModule">
    <!--
    @mbggenerated
    -->
    insert into c_service_module (id, logo_, name_, 
      code_, desc_, status_, 
      email_, app_id, module_type, 
      create_user, create_time, update_user, 
      update_time, public_is, public_look, 
      api_sync_url, resource_num, stop_time, 
      advice_module, reduce_time, reduce_cost
      )
    values (#{id,jdbcType=BIGINT}, #{logo,jdbcType=VARCHAR}, #{name,jdbcType=VARCHAR}, 
      #{code,jdbcType=VARCHAR}, #{desc,jdbcType=VARCHAR}, #{status,jdbcType=SMALLINT}, 
      #{email,jdbcType=VARCHAR}, #{appId,jdbcType=VARCHAR}, #{moduleType,jdbcType=VARCHAR}, 
      #{createUser,jdbcType=BIGINT}, #{createTime,jdbcType=TIMESTAMP}, #{updateUser,jdbcType=BIGINT}, 
      #{updateTime,jdbcType=TIMESTAMP}, #{publicIs,jdbcType=BIT}, #{publicLook,jdbcType=BIT}, 
      #{apiSyncUrl,jdbcType=VARCHAR}, #{resourceNum,jdbcType=INTEGER}, #{stopTime,jdbcType=TIMESTAMP}, 
      #{adviceModule,jdbcType=BIGINT}, #{reduceTime,jdbcType=DOUBLE}, #{reduceCost,jdbcType=INTEGER}
      )
  </insert>
  <insert id="batchInsert" parameterType="java.util.List">
    <!--
    @mbggenerated
    -->
    insert into c_service_module (id, logo_, name_, code_, desc_, status_, email_, app_id, module_type, create_user, create_time, update_user, update_time, public_is, public_look, api_sync_url, resource_num, stop_time, advice_module, reduce_time, reduce_cost ) values 
    <foreach collection="list" index="index" item="item" separator=",">
      (#{item.id,jdbcType=BIGINT}, #{item.logo,jdbcType=VARCHAR}, #{item.name,jdbcType=VARCHAR}, 
        #{item.code,jdbcType=VARCHAR}, #{item.desc,jdbcType=VARCHAR}, #{item.status,jdbcType=SMALLINT}, 
        #{item.email,jdbcType=VARCHAR}, #{item.appId,jdbcType=VARCHAR}, #{item.moduleType,jdbcType=VARCHAR}, 
        #{item.createUser,jdbcType=BIGINT}, #{item.createTime,jdbcType=TIMESTAMP}, #{item.updateUser,jdbcType=BIGINT}, 
        #{item.updateTime,jdbcType=TIMESTAMP}, #{item.publicIs,jdbcType=BIT}, #{item.publicLook,jdbcType=BIT}, 
        #{item.apiSyncUrl,jdbcType=VARCHAR}, #{item.resourceNum,jdbcType=INTEGER}, #{item.stopTime,jdbcType=TIMESTAMP}, 
        #{item.adviceModule,jdbcType=BIGINT}, #{item.reduceTime,jdbcType=DOUBLE}, #{item.reduceCost,jdbcType=INTEGER}
        )
    </foreach>
  </insert>
  <insert id="insertSelective" parameterType="com.hengyunsoft.platform.developer.entity.service.po.ServiceModule">
    <!--
    @mbggenerated
    -->
    insert into c_service_module
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="logo != null">
        logo_,
      </if>
      <if test="name != null">
        name_,
      </if>
      <if test="code != null">
        code_,
      </if>
      <if test="desc != null">
        desc_,
      </if>
      <if test="status != null">
        status_,
      </if>
      <if test="email != null">
        email_,
      </if>
      <if test="appId != null">
        app_id,
      </if>
      <if test="moduleType != null">
        module_type,
      </if>
      <if test="createUser != null">
        create_user,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="updateUser != null">
        update_user,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
      <if test="publicIs != null">
        public_is,
      </if>
      <if test="publicLook != null">
        public_look,
      </if>
      <if test="apiSyncUrl != null">
        api_sync_url,
      </if>
      <if test="resourceNum != null">
        resource_num,
      </if>
      <if test="stopTime != null">
        stop_time,
      </if>
      <if test="adviceModule != null">
        advice_module,
      </if>
      <if test="reduceTime != null">
        reduce_time,
      </if>
      <if test="reduceCost != null">
        reduce_cost,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=BIGINT},
      </if>
      <if test="logo != null">
        #{logo,jdbcType=VARCHAR},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="code != null">
        #{code,jdbcType=VARCHAR},
      </if>
      <if test="desc != null">
        #{desc,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        #{status,jdbcType=SMALLINT},
      </if>
      <if test="email != null">
        #{email,jdbcType=VARCHAR},
      </if>
      <if test="appId != null">
        #{appId,jdbcType=VARCHAR},
      </if>
      <if test="moduleType != null">
        #{moduleType,jdbcType=VARCHAR},
      </if>
      <if test="createUser != null">
        #{createUser,jdbcType=BIGINT},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateUser != null">
        #{updateUser,jdbcType=BIGINT},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="publicIs != null">
        #{publicIs,jdbcType=BIT},
      </if>
      <if test="publicLook != null">
        #{publicLook,jdbcType=BIT},
      </if>
      <if test="apiSyncUrl != null">
        #{apiSyncUrl,jdbcType=VARCHAR},
      </if>
      <if test="resourceNum != null">
        #{resourceNum,jdbcType=INTEGER},
      </if>
      <if test="stopTime != null">
        #{stopTime,jdbcType=TIMESTAMP},
      </if>
      <if test="adviceModule != null">
        #{adviceModule,jdbcType=BIGINT},
      </if>
      <if test="reduceTime != null">
        #{reduceTime,jdbcType=DOUBLE},
      </if>
      <if test="reduceCost != null">
        #{reduceCost,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.hengyunsoft.platform.developer.repository.service.example.ServiceModuleExample" resultType="java.lang.Integer">
    <!--
    @mbggenerated
    -->
    select count(*) from c_service_module
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    <!--
    @mbggenerated
    -->
    update c_service_module
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.logo != null">
        logo_ = #{record.logo,jdbcType=VARCHAR},
      </if>
      <if test="record.name != null">
        name_ = #{record.name,jdbcType=VARCHAR},
      </if>
      <if test="record.code != null">
        code_ = #{record.code,jdbcType=VARCHAR},
      </if>
      <if test="record.desc != null">
        desc_ = #{record.desc,jdbcType=VARCHAR},
      </if>
      <if test="record.status != null">
        status_ = #{record.status,jdbcType=SMALLINT},
      </if>
      <if test="record.email != null">
        email_ = #{record.email,jdbcType=VARCHAR},
      </if>
      <if test="record.appId != null">
        app_id = #{record.appId,jdbcType=VARCHAR},
      </if>
      <if test="record.moduleType != null">
        module_type = #{record.moduleType,jdbcType=VARCHAR},
      </if>
      <if test="record.createUser != null">
        create_user = #{record.createUser,jdbcType=BIGINT},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateUser != null">
        update_user = #{record.updateUser,jdbcType=BIGINT},
      </if>
      <if test="record.updateTime != null">
        update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.publicIs != null">
        public_is = #{record.publicIs,jdbcType=BIT},
      </if>
      <if test="record.publicLook != null">
        public_look = #{record.publicLook,jdbcType=BIT},
      </if>
      <if test="record.apiSyncUrl != null">
        api_sync_url = #{record.apiSyncUrl,jdbcType=VARCHAR},
      </if>
      <if test="record.resourceNum != null">
        resource_num = #{record.resourceNum,jdbcType=INTEGER},
      </if>
      <if test="record.stopTime != null">
        stop_time = #{record.stopTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.adviceModule != null">
        advice_module = #{record.adviceModule,jdbcType=BIGINT},
      </if>
      <if test="record.reduceTime != null">
        reduce_time = #{record.reduceTime,jdbcType=DOUBLE},
      </if>
      <if test="record.reduceCost != null">
        reduce_cost = #{record.reduceCost,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    <!--
    @mbggenerated
    -->
    update c_service_module
    set id = #{record.id,jdbcType=BIGINT},
      logo_ = #{record.logo,jdbcType=VARCHAR},
      name_ = #{record.name,jdbcType=VARCHAR},
      code_ = #{record.code,jdbcType=VARCHAR},
      desc_ = #{record.desc,jdbcType=VARCHAR},
      status_ = #{record.status,jdbcType=SMALLINT},
      email_ = #{record.email,jdbcType=VARCHAR},
      app_id = #{record.appId,jdbcType=VARCHAR},
      module_type = #{record.moduleType,jdbcType=VARCHAR},
      create_user = #{record.createUser,jdbcType=BIGINT},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      update_user = #{record.updateUser,jdbcType=BIGINT},
      update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      public_is = #{record.publicIs,jdbcType=BIT},
      public_look = #{record.publicLook,jdbcType=BIT},
      api_sync_url = #{record.apiSyncUrl,jdbcType=VARCHAR},
      resource_num = #{record.resourceNum,jdbcType=INTEGER},
      stop_time = #{record.stopTime,jdbcType=TIMESTAMP},
      advice_module = #{record.adviceModule,jdbcType=BIGINT},
      reduce_time = #{record.reduceTime,jdbcType=DOUBLE},
      reduce_cost = #{record.reduceCost,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.hengyunsoft.platform.developer.entity.service.po.ServiceModule">
    <!--
    @mbggenerated
    -->
    update c_service_module
    <set>
      <if test="logo != null">
        logo_ = #{logo,jdbcType=VARCHAR},
      </if>
      <if test="name != null">
        name_ = #{name,jdbcType=VARCHAR},
      </if>
      <if test="code != null">
        code_ = #{code,jdbcType=VARCHAR},
      </if>
      <if test="desc != null">
        desc_ = #{desc,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        status_ = #{status,jdbcType=SMALLINT},
      </if>
      <if test="email != null">
        email_ = #{email,jdbcType=VARCHAR},
      </if>
      <if test="appId != null">
        app_id = #{appId,jdbcType=VARCHAR},
      </if>
      <if test="moduleType != null">
        module_type = #{moduleType,jdbcType=VARCHAR},
      </if>
      <if test="createUser != null">
        create_user = #{createUser,jdbcType=BIGINT},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateUser != null">
        update_user = #{updateUser,jdbcType=BIGINT},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="publicIs != null">
        public_is = #{publicIs,jdbcType=BIT},
      </if>
      <if test="publicLook != null">
        public_look = #{publicLook,jdbcType=BIT},
      </if>
      <if test="apiSyncUrl != null">
        api_sync_url = #{apiSyncUrl,jdbcType=VARCHAR},
      </if>
      <if test="resourceNum != null">
        resource_num = #{resourceNum,jdbcType=INTEGER},
      </if>
      <if test="stopTime != null">
        stop_time = #{stopTime,jdbcType=TIMESTAMP},
      </if>
      <if test="adviceModule != null">
        advice_module = #{adviceModule,jdbcType=BIGINT},
      </if>
      <if test="reduceTime != null">
        reduce_time = #{reduceTime,jdbcType=DOUBLE},
      </if>
      <if test="reduceCost != null">
        reduce_cost = #{reduceCost,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.hengyunsoft.platform.developer.entity.service.po.ServiceModule">
    <!--
    @mbggenerated
    -->
    update c_service_module
    set logo_ = #{logo,jdbcType=VARCHAR},
      name_ = #{name,jdbcType=VARCHAR},
      code_ = #{code,jdbcType=VARCHAR},
      desc_ = #{desc,jdbcType=VARCHAR},
      status_ = #{status,jdbcType=SMALLINT},
      email_ = #{email,jdbcType=VARCHAR},
      app_id = #{appId,jdbcType=VARCHAR},
      module_type = #{moduleType,jdbcType=VARCHAR},
      create_user = #{createUser,jdbcType=BIGINT},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_user = #{updateUser,jdbcType=BIGINT},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      public_is = #{publicIs,jdbcType=BIT},
      public_look = #{publicLook,jdbcType=BIT},
      api_sync_url = #{apiSyncUrl,jdbcType=VARCHAR},
      resource_num = #{resourceNum,jdbcType=INTEGER},
      stop_time = #{stopTime,jdbcType=TIMESTAMP},
      advice_module = #{adviceModule,jdbcType=BIGINT},
      reduce_time = #{reduceTime,jdbcType=DOUBLE},
      reduce_cost = #{reduceCost,jdbcType=INTEGER}
    where id = #{id,jdbcType=BIGINT}
  </update>
  
  <update id="update" parameterType="com.hengyunsoft.platform.developer.entity.service.po.ServiceModule">
    <!--
    @mbggenerated
    -->
    update c_service_module
    set logo_ = #{logo,jdbcType=VARCHAR},
    name_ = #{name,jdbcType=VARCHAR},
    code_ = #{code,jdbcType=VARCHAR},
    desc_ = #{desc,jdbcType=VARCHAR},
    status_ = #{status,jdbcType=SMALLINT},
    email_ = #{email,jdbcType=VARCHAR},
    app_id = #{appId,jdbcType=VARCHAR},
    module_type = #{moduleType,jdbcType=VARCHAR},
    update_user = #{updateUser,jdbcType=BIGINT},
    update_time = #{updateTime,jdbcType=TIMESTAMP},
    public_is = #{publicIs,jdbcType=BIT},
    public_look = #{publicLook,jdbcType=BIT},
    api_sync_url = #{apiSyncUrl,jdbcType=VARCHAR},
    resource_num = #{resourceNum,jdbcType=INTEGER},
    stop_time = #{stopTime,jdbcType=TIMESTAMP},
    advice_module = #{adviceModule,jdbcType=BIGINT},
    reduce_time = #{reduceTime,jdbcType=DOUBLE},
    reduce_cost = #{reduceCost,jdbcType=INTEGER}
    where id = #{id,jdbcType=BIGINT}
  </update>

  <!--根据用户Id查找所有-->
  <select id="selectListByUserId" parameterType="java.lang.Long" resultMap="BaseResultMap">

    <!--
     @mbggenerated
     -->
    SELECT
    <include refid="Base_Column_List"/>
    FROM c_service_module  WHERE app_id in
      (
      select
      c.app_id
      from c_application c left join b_dictionary on b_dictionary.`code`=c.type_
      where c.app_id in (
      select c_role.app_id
      from c_role join c_assign_role on c_assign_role.role_id=c_role.id
      where c_role.code_ = 'app_admin' and c_assign_role.user_id = #{userId}
      )
      order by b_dictionary.order_num is null,b_dictionary.order_num,c.order_no is null,c.order_no
      )
    ORDER BY status_
  </select>
  <!--根据appId查找所有-->
  <select id="selectByAppId" parameterType="java.lang.String" resultMap="BaseResultMap">
    <!--
     @mbggenerated
     -->
    SELECT
    <include refid="Base_Column_List"/>
    FROM c_service_module
    WHERE app_id = #{appId}
  </select>
</mapper>