<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.hengyunsoft.platform.logs.repository.logs.dao.LogWarningMapper">
  <resultMap id="BaseResultMap" type="com.hengyunsoft.platform.logs.entity.logs.po.LogWarning">
    <!--
    @mbggenerated
    -->
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="app_id" jdbcType="VARCHAR" property="appId" />
    <result column="log_type" jdbcType="VARCHAR" property="logType" />
    <result column="rule_id" jdbcType="BIGINT" property="ruleId" />
    <result column="log_description" jdbcType="VARCHAR" property="logDescription" />
    <result column="is_deal" jdbcType="VARCHAR" property="isDeal" />
    <result column="deal_result" jdbcType="VARCHAR" property="dealResult" />
    <result column="deal_result_description" jdbcType="VARCHAR" property="dealResultDescription" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="create_user" jdbcType="BIGINT" property="createUser" />
    <result column="create_user_name" jdbcType="VARCHAR" property="createUserName" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
    <result column="update_user" jdbcType="BIGINT" property="updateUser" />
    <result column="update_user_name" jdbcType="VARCHAR" property="updateUserName" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <!--
    @mbggenerated
    -->
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <!--
    @mbggenerated
    -->
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    <!--
    @mbggenerated
    -->
    id, app_id, log_type, rule_id, log_description, is_deal, deal_result, deal_result_description, 
    create_time, create_user, create_user_name, update_time, update_user, update_user_name
  </sql>
  <select id="selectByExample" parameterType="com.hengyunsoft.platform.logs.repository.logs.example.LogWarningExample" resultMap="BaseResultMap">
    <!--
    @mbggenerated
    -->
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from log_warning
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="groupByClause != null">
      group by ${groupByClause}
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <if test="limitValue != null">
      limit ${limitValue}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    <!--
    @mbggenerated
    -->
    select 
    <include refid="Base_Column_List" />
    from log_warning
    where id = #{id,jdbcType=BIGINT}
  </select>
  <select id="selectEntity" parameterType="com.hengyunsoft.platform.logs.repository.logs.example.LogWarningExample" resultMap="BaseResultMap">
    <!--
    @mbggenerated
    -->
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from log_warning
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="groupByClause != null">
      group by ${groupByClause}
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    limit 0,1 
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    <!--
    @mbggenerated
    -->
    delete from log_warning
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.hengyunsoft.platform.logs.repository.logs.example.LogWarningExample">
    <!--
    @mbggenerated
    -->
    delete from log_warning
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <update id="removeByExample" parameterType="com.hengyunsoft.platform.logs.entity.logs.po.LogWarning">
    <!--
    @mbggenerated
    -->
    update log_warning
    set is_delete = 1 

    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </update>
  <update id="removeByPrimaryKey" parameterType="com.hengyunsoft.platform.logs.entity.logs.po.LogWarning">
    <!--
    @mbggenerated
    -->
    update log_warning
    set is_delete = 1 

     where 1=1 and id = #{id,jdbcType=BIGINT}
  </update>
  <insert id="insert" parameterType="com.hengyunsoft.platform.logs.entity.logs.po.LogWarning">
    <!--
    @mbggenerated
    -->
    insert into log_warning (id, app_id, log_type, 
      rule_id, log_description, is_deal, 
      deal_result, deal_result_description, create_time, 
      create_user, create_user_name, update_time, 
      update_user, update_user_name)
    values (#{id,jdbcType=BIGINT}, #{appId,jdbcType=VARCHAR}, #{logType,jdbcType=VARCHAR}, 
      #{ruleId,jdbcType=BIGINT}, #{logDescription,jdbcType=VARCHAR}, #{isDeal,jdbcType=VARCHAR}, 
      #{dealResult,jdbcType=VARCHAR}, #{dealResultDescription,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}, 
      #{createUser,jdbcType=BIGINT}, #{createUserName,jdbcType=VARCHAR}, #{updateTime,jdbcType=TIMESTAMP}, 
      #{updateUser,jdbcType=BIGINT}, #{updateUserName,jdbcType=VARCHAR})
  </insert>
  <insert id="batchInsert" parameterType="java.util.List">
    <!--
    @mbggenerated
    -->
    insert into log_warning (id, app_id, log_type, rule_id, log_description, is_deal, deal_result, deal_result_description, create_time, create_user, create_user_name, update_time, update_user, update_user_name ) values 
    <foreach collection="list" index="index" item="item" separator=",">
      (#{item.id,jdbcType=BIGINT}, #{item.appId,jdbcType=VARCHAR}, #{item.logType,jdbcType=VARCHAR}, 
        #{item.ruleId,jdbcType=BIGINT}, #{item.logDescription,jdbcType=VARCHAR}, #{item.isDeal,jdbcType=VARCHAR}, 
        #{item.dealResult,jdbcType=VARCHAR}, #{item.dealResultDescription,jdbcType=VARCHAR}, 
        #{item.createTime,jdbcType=TIMESTAMP}, #{item.createUser,jdbcType=BIGINT}, #{item.createUserName,jdbcType=VARCHAR}, 
        #{item.updateTime,jdbcType=TIMESTAMP}, #{item.updateUser,jdbcType=BIGINT}, #{item.updateUserName,jdbcType=VARCHAR}
        )
    </foreach>
  </insert>
  <insert id="insertSelective" parameterType="com.hengyunsoft.platform.logs.entity.logs.po.LogWarning">
    <!--
    @mbggenerated
    -->
    insert into log_warning
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="appId != null">
        app_id,
      </if>
      <if test="logType != null">
        log_type,
      </if>
      <if test="ruleId != null">
        rule_id,
      </if>
      <if test="logDescription != null">
        log_description,
      </if>
      <if test="isDeal != null">
        is_deal,
      </if>
      <if test="dealResult != null">
        deal_result,
      </if>
      <if test="dealResultDescription != null">
        deal_result_description,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="createUser != null">
        create_user,
      </if>
      <if test="createUserName != null">
        create_user_name,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
      <if test="updateUser != null">
        update_user,
      </if>
      <if test="updateUserName != null">
        update_user_name,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=BIGINT},
      </if>
      <if test="appId != null">
        #{appId,jdbcType=VARCHAR},
      </if>
      <if test="logType != null">
        #{logType,jdbcType=VARCHAR},
      </if>
      <if test="ruleId != null">
        #{ruleId,jdbcType=BIGINT},
      </if>
      <if test="logDescription != null">
        #{logDescription,jdbcType=VARCHAR},
      </if>
      <if test="isDeal != null">
        #{isDeal,jdbcType=VARCHAR},
      </if>
      <if test="dealResult != null">
        #{dealResult,jdbcType=VARCHAR},
      </if>
      <if test="dealResultDescription != null">
        #{dealResultDescription,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createUser != null">
        #{createUser,jdbcType=BIGINT},
      </if>
      <if test="createUserName != null">
        #{createUserName,jdbcType=VARCHAR},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateUser != null">
        #{updateUser,jdbcType=BIGINT},
      </if>
      <if test="updateUserName != null">
        #{updateUserName,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.hengyunsoft.platform.logs.repository.logs.example.LogWarningExample" resultType="java.lang.Integer">
    <!--
    @mbggenerated
    -->
    select count(*) from log_warning
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    <!--
    @mbggenerated
    -->
    update log_warning
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.appId != null">
        app_id = #{record.appId,jdbcType=VARCHAR},
      </if>
      <if test="record.logType != null">
        log_type = #{record.logType,jdbcType=VARCHAR},
      </if>
      <if test="record.ruleId != null">
        rule_id = #{record.ruleId,jdbcType=BIGINT},
      </if>
      <if test="record.logDescription != null">
        log_description = #{record.logDescription,jdbcType=VARCHAR},
      </if>
      <if test="record.isDeal != null">
        is_deal = #{record.isDeal,jdbcType=VARCHAR},
      </if>
      <if test="record.dealResult != null">
        deal_result = #{record.dealResult,jdbcType=VARCHAR},
      </if>
      <if test="record.dealResultDescription != null">
        deal_result_description = #{record.dealResultDescription,jdbcType=VARCHAR},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.createUser != null">
        create_user = #{record.createUser,jdbcType=BIGINT},
      </if>
      <if test="record.createUserName != null">
        create_user_name = #{record.createUserName,jdbcType=VARCHAR},
      </if>
      <if test="record.updateTime != null">
        update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateUser != null">
        update_user = #{record.updateUser,jdbcType=BIGINT},
      </if>
      <if test="record.updateUserName != null">
        update_user_name = #{record.updateUserName,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    <!--
    @mbggenerated
    -->
    update log_warning
    set id = #{record.id,jdbcType=BIGINT},
      app_id = #{record.appId,jdbcType=VARCHAR},
      log_type = #{record.logType,jdbcType=VARCHAR},
      rule_id = #{record.ruleId,jdbcType=BIGINT},
      log_description = #{record.logDescription,jdbcType=VARCHAR},
      is_deal = #{record.isDeal,jdbcType=VARCHAR},
      deal_result = #{record.dealResult,jdbcType=VARCHAR},
      deal_result_description = #{record.dealResultDescription,jdbcType=VARCHAR},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      create_user = #{record.createUser,jdbcType=BIGINT},
      create_user_name = #{record.createUserName,jdbcType=VARCHAR},
      update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      update_user = #{record.updateUser,jdbcType=BIGINT},
      update_user_name = #{record.updateUserName,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.hengyunsoft.platform.logs.entity.logs.po.LogWarning">
    <!--
    @mbggenerated
    -->
    update log_warning
    <set>
      <if test="appId != null">
        app_id = #{appId,jdbcType=VARCHAR},
      </if>
      <if test="logType != null">
        log_type = #{logType,jdbcType=VARCHAR},
      </if>
      <if test="ruleId != null">
        rule_id = #{ruleId,jdbcType=BIGINT},
      </if>
      <if test="logDescription != null">
        log_description = #{logDescription,jdbcType=VARCHAR},
      </if>
      <if test="isDeal != null">
        is_deal = #{isDeal,jdbcType=VARCHAR},
      </if>
      <if test="dealResult != null">
        deal_result = #{dealResult,jdbcType=VARCHAR},
      </if>
      <if test="dealResultDescription != null">
        deal_result_description = #{dealResultDescription,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createUser != null">
        create_user = #{createUser,jdbcType=BIGINT},
      </if>
      <if test="createUserName != null">
        create_user_name = #{createUserName,jdbcType=VARCHAR},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateUser != null">
        update_user = #{updateUser,jdbcType=BIGINT},
      </if>
      <if test="updateUserName != null">
        update_user_name = #{updateUserName,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.hengyunsoft.platform.logs.entity.logs.po.LogWarning">
    <!--
    @mbggenerated
    -->
    update log_warning
    set app_id = #{appId,jdbcType=VARCHAR},
      log_type = #{logType,jdbcType=VARCHAR},
      rule_id = #{ruleId,jdbcType=BIGINT},
      log_description = #{logDescription,jdbcType=VARCHAR},
      is_deal = #{isDeal,jdbcType=VARCHAR},
      deal_result = #{dealResult,jdbcType=VARCHAR},
      deal_result_description = #{dealResultDescription,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      create_user = #{createUser,jdbcType=BIGINT},
      create_user_name = #{createUserName,jdbcType=VARCHAR},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      update_user = #{updateUser,jdbcType=BIGINT},
      update_user_name = #{updateUserName,jdbcType=VARCHAR}
    where id = #{id,jdbcType=BIGINT}
  </update>

</mapper>