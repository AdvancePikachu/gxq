<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.hengyunsoft.platform.msgs.repository.msgsmessage.dao.BacklogMapper">
  <resultMap id="BaseResultMap" type="com.hengyunsoft.platform.msgs.entity.msgsmessage.po.Backlog">
    <!--
    @mbggenerated
    -->
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="task" jdbcType="VARCHAR" property="task" />
    <result column="readed" jdbcType="INTEGER" property="readed" />
    <result column="receiver_id" jdbcType="BIGINT" property="receiverId" />
    <result column="task_source" jdbcType="VARCHAR" property="taskSource" />
    <result column="task_num" jdbcType="INTEGER" property="taskNum" />
    <result column="task_link" jdbcType="VARCHAR" property="taskLink" />
    <result column="task_url" jdbcType="VARCHAR" property="taskUrl" />
    <result column="create_user_id" jdbcType="BIGINT" property="createUserId" />
    <result column="create_user" jdbcType="VARCHAR" property="createUser" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <!--
    @mbggenerated
    -->
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <!--
    @mbggenerated
    -->
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    <!--
    @mbggenerated
    -->
    id, task, readed, receiver_id, task_source, task_num, task_link, task_url, create_user_id, 
    create_user, create_time, update_time
  </sql>
  <select id="selectByExample" parameterType="com.hengyunsoft.platform.msgs.repository.msgsmessage.example.BacklogExample" resultMap="BaseResultMap">
    <!--
    @mbggenerated
    -->
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from sys_backlog
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="groupByClause != null">
      group by ${groupByClause}
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <if test="limitValue != null">
      limit ${limitValue}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    <!--
    @mbggenerated
    -->
    select 
    <include refid="Base_Column_List" />
    from sys_backlog
    where id = #{id,jdbcType=BIGINT}
  </select>
  <select id="selectEntity" parameterType="com.hengyunsoft.platform.msgs.repository.msgsmessage.example.BacklogExample" resultMap="BaseResultMap">
    <!--
    @mbggenerated
    -->
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from sys_backlog
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="groupByClause != null">
      group by ${groupByClause}
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    limit 0,1 
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    <!--
    @mbggenerated
    -->
    delete from sys_backlog
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.hengyunsoft.platform.msgs.repository.msgsmessage.example.BacklogExample">
    <!--
    @mbggenerated
    -->
    delete from sys_backlog
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <update id="removeByExample" parameterType="com.hengyunsoft.platform.msgs.entity.msgsmessage.po.Backlog">
    <!--
    @mbggenerated
    -->
    update sys_backlog
    set is_delete = 1 

    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </update>
  <update id="removeByPrimaryKey" parameterType="com.hengyunsoft.platform.msgs.entity.msgsmessage.po.Backlog">
    <!--
    @mbggenerated
    -->
    update sys_backlog
    set is_delete = 1 

     where 1=1 and id = #{id,jdbcType=BIGINT}
  </update>
  <insert id="insert" parameterType="com.hengyunsoft.platform.msgs.entity.msgsmessage.po.Backlog">
    <!--
    @mbggenerated
    -->
    insert into sys_backlog (id, task, readed, 
      receiver_id, task_source, task_num, 
      task_link, task_url, create_user_id, 
      create_user, create_time, update_time
      )
    values (#{id,jdbcType=BIGINT}, #{task,jdbcType=VARCHAR}, #{readed,jdbcType=INTEGER}, 
      #{receiverId,jdbcType=BIGINT}, #{taskSource,jdbcType=VARCHAR}, #{taskNum,jdbcType=INTEGER}, 
      #{taskLink,jdbcType=VARCHAR}, #{taskUrl,jdbcType=VARCHAR}, #{createUserId,jdbcType=BIGINT}, 
      #{createUser,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP}
      )
  </insert>
  <insert id="batchInsert" parameterType="java.util.List">
    <!--
    @mbggenerated
    -->
    insert into sys_backlog (id, task, readed, receiver_id, task_source, task_num, task_link, task_url, create_user_id, create_user, create_time, update_time ) values 
    <foreach collection="list" index="index" item="item" separator=",">
      (#{item.id,jdbcType=BIGINT}, #{item.task,jdbcType=VARCHAR}, #{item.readed,jdbcType=INTEGER}, 
        #{item.receiverId,jdbcType=BIGINT}, #{item.taskSource,jdbcType=VARCHAR}, #{item.taskNum,jdbcType=INTEGER}, 
        #{item.taskLink,jdbcType=VARCHAR}, #{item.taskUrl,jdbcType=VARCHAR}, #{item.createUserId,jdbcType=BIGINT}, 
        #{item.createUser,jdbcType=VARCHAR}, #{item.createTime,jdbcType=TIMESTAMP}, #{item.updateTime,jdbcType=TIMESTAMP}
        )
    </foreach>
  </insert>
  <insert id="insertSelective" parameterType="com.hengyunsoft.platform.msgs.entity.msgsmessage.po.Backlog">
    <!--
    @mbggenerated
    -->
    insert into sys_backlog
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="task != null">
        task,
      </if>
      <if test="readed != null">
        readed,
      </if>
      <if test="receiverId != null">
        receiver_id,
      </if>
      <if test="taskSource != null">
        task_source,
      </if>
      <if test="taskNum != null">
        task_num,
      </if>
      <if test="taskLink != null">
        task_link,
      </if>
      <if test="taskUrl != null">
        task_url,
      </if>
      <if test="createUserId != null">
        create_user_id,
      </if>
      <if test="createUser != null">
        create_user,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=BIGINT},
      </if>
      <if test="task != null">
        #{task,jdbcType=VARCHAR},
      </if>
      <if test="readed != null">
        #{readed,jdbcType=INTEGER},
      </if>
      <if test="receiverId != null">
        #{receiverId,jdbcType=BIGINT},
      </if>
      <if test="taskSource != null">
        #{taskSource,jdbcType=VARCHAR},
      </if>
      <if test="taskNum != null">
        #{taskNum,jdbcType=INTEGER},
      </if>
      <if test="taskLink != null">
        #{taskLink,jdbcType=VARCHAR},
      </if>
      <if test="taskUrl != null">
        #{taskUrl,jdbcType=VARCHAR},
      </if>
      <if test="createUserId != null">
        #{createUserId,jdbcType=BIGINT},
      </if>
      <if test="createUser != null">
        #{createUser,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.hengyunsoft.platform.msgs.repository.msgsmessage.example.BacklogExample" resultType="java.lang.Integer">
    <!--
    @mbggenerated
    -->
    select count(*) from sys_backlog
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    <!--
    @mbggenerated
    -->
    update sys_backlog
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.task != null">
        task = #{record.task,jdbcType=VARCHAR},
      </if>
      <if test="record.readed != null">
        readed = #{record.readed,jdbcType=INTEGER},
      </if>
      <if test="record.receiverId != null">
        receiver_id = #{record.receiverId,jdbcType=BIGINT},
      </if>
      <if test="record.taskSource != null">
        task_source = #{record.taskSource,jdbcType=VARCHAR},
      </if>
      <if test="record.taskNum != null">
        task_num = #{record.taskNum,jdbcType=INTEGER},
      </if>
      <if test="record.taskLink != null">
        task_link = #{record.taskLink,jdbcType=VARCHAR},
      </if>
      <if test="record.taskUrl != null">
        task_url = #{record.taskUrl,jdbcType=VARCHAR},
      </if>
      <if test="record.createUserId != null">
        create_user_id = #{record.createUserId,jdbcType=BIGINT},
      </if>
      <if test="record.createUser != null">
        create_user = #{record.createUser,jdbcType=VARCHAR},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateTime != null">
        update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    <!--
    @mbggenerated
    -->
    update sys_backlog
    set id = #{record.id,jdbcType=BIGINT},
      task = #{record.task,jdbcType=VARCHAR},
      readed = #{record.readed,jdbcType=INTEGER},
      receiver_id = #{record.receiverId,jdbcType=BIGINT},
      task_source = #{record.taskSource,jdbcType=VARCHAR},
      task_num = #{record.taskNum,jdbcType=INTEGER},
      task_link = #{record.taskLink,jdbcType=VARCHAR},
      task_url = #{record.taskUrl,jdbcType=VARCHAR},
      create_user_id = #{record.createUserId,jdbcType=BIGINT},
      create_user = #{record.createUser,jdbcType=VARCHAR},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      update_time = #{record.updateTime,jdbcType=TIMESTAMP}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.hengyunsoft.platform.msgs.entity.msgsmessage.po.Backlog">
    <!--
    @mbggenerated
    -->
    update sys_backlog
    <set>
      <if test="task != null">
        task = #{task,jdbcType=VARCHAR},
      </if>
      <if test="readed != null">
        readed = #{readed,jdbcType=INTEGER},
      </if>
      <if test="receiverId != null">
        receiver_id = #{receiverId,jdbcType=BIGINT},
      </if>
      <if test="taskSource != null">
        task_source = #{taskSource,jdbcType=VARCHAR},
      </if>
      <if test="taskNum != null">
        task_num = #{taskNum,jdbcType=INTEGER},
      </if>
      <if test="taskLink != null">
        task_link = #{taskLink,jdbcType=VARCHAR},
      </if>
      <if test="taskUrl != null">
        task_url = #{taskUrl,jdbcType=VARCHAR},
      </if>
      <if test="createUserId != null">
        create_user_id = #{createUserId,jdbcType=BIGINT},
      </if>
      <if test="createUser != null">
        create_user = #{createUser,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.hengyunsoft.platform.msgs.entity.msgsmessage.po.Backlog">
    <!--
    @mbggenerated
    -->
    update sys_backlog
    set task = #{task,jdbcType=VARCHAR},
      readed = #{readed,jdbcType=INTEGER},
      receiver_id = #{receiverId,jdbcType=BIGINT},
      task_source = #{taskSource,jdbcType=VARCHAR},
      task_num = #{taskNum,jdbcType=INTEGER},
      task_link = #{taskLink,jdbcType=VARCHAR},
      task_url = #{taskUrl,jdbcType=VARCHAR},
      create_user_id = #{createUserId,jdbcType=BIGINT},
      create_user = #{createUser,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=BIGINT}
  </update>
  <select id="getAllCount" parameterType="java.lang.Long" resultType="java.lang.Integer">
  	select count(id) as count from sys_backlog where 1=1
    <if test="reciverId != null">
    and receiver_id = #{reciverId}
    </if>
  </select>
</mapper>