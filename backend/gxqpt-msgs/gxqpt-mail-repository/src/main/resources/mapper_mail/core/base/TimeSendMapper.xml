<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.hengyunsoft.platform.mail.repository.core.dao.TimeSendMapper">
  <resultMap id="BaseResultMap" type="com.hengyunsoft.platform.mail.entity.core.po.TimeSend">
    <!--
    @mbggenerated
    -->
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="mail_name" jdbcType="VARCHAR" property="mailName" />
    <result column="mail_from" jdbcType="VARCHAR" property="mailFrom" />
    <result column="mail_to" jdbcType="VARCHAR" property="mailTo" />
    <result column="mail_cc" jdbcType="VARCHAR" property="mailCc" />
    <result column="subject" jdbcType="VARCHAR" property="subject" />
    <result column="content" jdbcType="LONGVARCHAR" property="content" />
    <result column="is_reply_sign" jdbcType="INTEGER" property="isReplySign" />
    <result column="send_time" jdbcType="TIMESTAMP" property="sendTime" />
    <result column="mail_type" jdbcType="VARCHAR" property="mailType" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <!--
    @mbggenerated
    -->
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <!--
    @mbggenerated
    -->
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    <!--
    @mbggenerated
    -->
    id, mail_name, mail_from, mail_to, mail_cc, subject, content, is_reply_sign, send_time, 
    mail_type
  </sql>
  <select id="selectByExample" parameterType="com.hengyunsoft.platform.mail.repository.core.example.TimeSendExample" resultMap="BaseResultMap">
    <!--
    @mbggenerated
    -->
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from mail_time_send
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="groupByClause != null">
      group by ${groupByClause}
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <if test="limitValue != null">
      limit ${limitValue}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    <!--
    @mbggenerated
    -->
    select 
    <include refid="Base_Column_List" />
    from mail_time_send
    where id = #{id,jdbcType=BIGINT}
  </select>
  <select id="selectEntity" parameterType="com.hengyunsoft.platform.mail.repository.core.example.TimeSendExample" resultMap="BaseResultMap">
    <!--
    @mbggenerated
    -->
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from mail_time_send
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="groupByClause != null">
      group by ${groupByClause}
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    limit 0,1 
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    <!--
    @mbggenerated
    -->
    delete from mail_time_send
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.hengyunsoft.platform.mail.repository.core.example.TimeSendExample">
    <!--
    @mbggenerated
    -->
    delete from mail_time_send
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <update id="removeByExample" parameterType="com.hengyunsoft.platform.mail.entity.core.po.TimeSend">
    <!--
    @mbggenerated
    -->
    update mail_time_send
    set is_delete = 1 

    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </update>
  <update id="removeByPrimaryKey" parameterType="java.lang.Long">
    <!--
    @mbggenerated
    -->
    update mail_time_send
    set is_delete = 1 

     where 1=1 and id = #{id,jdbcType=BIGINT}
  </update>
  <insert id="insert" parameterType="com.hengyunsoft.platform.mail.entity.core.po.TimeSend">
    <!--
    @mbggenerated
    -->
    insert into mail_time_send (id, mail_name, mail_from, 
      mail_to, mail_cc, subject, 
      content, is_reply_sign, send_time, 
      mail_type)
    values (#{id,jdbcType=BIGINT}, #{mailName,jdbcType=VARCHAR}, #{mailFrom,jdbcType=VARCHAR}, 
      #{mailTo,jdbcType=VARCHAR}, #{mailCc,jdbcType=VARCHAR}, #{subject,jdbcType=VARCHAR}, 
      #{content,jdbcType=LONGVARCHAR}, #{isReplySign,jdbcType=INTEGER}, #{sendTime,jdbcType=TIMESTAMP}, 
      #{mailType,jdbcType=VARCHAR})
  </insert>
  <insert id="batchInsert" parameterType="java.util.List">
    <!--
    @mbggenerated
    -->
    insert into mail_time_send (id, mail_name, mail_from, mail_to, mail_cc, subject, content, is_reply_sign, send_time, mail_type ) values 
    <foreach collection="list" index="index" item="item" separator=",">
      (#{item.id,jdbcType=BIGINT}, #{item.mailName,jdbcType=VARCHAR}, #{item.mailFrom,jdbcType=VARCHAR}, 
        #{item.mailTo,jdbcType=VARCHAR}, #{item.mailCc,jdbcType=VARCHAR}, #{item.subject,jdbcType=VARCHAR}, 
        #{item.content,jdbcType=LONGVARCHAR}, #{item.isReplySign,jdbcType=INTEGER}, #{item.sendTime,jdbcType=TIMESTAMP}, 
        #{item.mailType,jdbcType=VARCHAR})
    </foreach>
  </insert>
  <insert id="insertSelective" parameterType="com.hengyunsoft.platform.mail.entity.core.po.TimeSend">
    <!--
    @mbggenerated
    -->
    insert into mail_time_send
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="mailName != null">
        mail_name,
      </if>
      <if test="mailFrom != null">
        mail_from,
      </if>
      <if test="mailTo != null">
        mail_to,
      </if>
      <if test="mailCc != null">
        mail_cc,
      </if>
      <if test="subject != null">
        subject,
      </if>
      <if test="content != null">
        content,
      </if>
      <if test="isReplySign != null">
        is_reply_sign,
      </if>
      <if test="sendTime != null">
        send_time,
      </if>
      <if test="mailType != null">
        mail_type,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=BIGINT},
      </if>
      <if test="mailName != null">
        #{mailName,jdbcType=VARCHAR},
      </if>
      <if test="mailFrom != null">
        #{mailFrom,jdbcType=VARCHAR},
      </if>
      <if test="mailTo != null">
        #{mailTo,jdbcType=VARCHAR},
      </if>
      <if test="mailCc != null">
        #{mailCc,jdbcType=VARCHAR},
      </if>
      <if test="subject != null">
        #{subject,jdbcType=VARCHAR},
      </if>
      <if test="content != null">
        #{content,jdbcType=LONGVARCHAR},
      </if>
      <if test="isReplySign != null">
        #{isReplySign,jdbcType=INTEGER},
      </if>
      <if test="sendTime != null">
        #{sendTime,jdbcType=TIMESTAMP},
      </if>
      <if test="mailType != null">
        #{mailType,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.hengyunsoft.platform.mail.repository.core.example.TimeSendExample" resultType="java.lang.Integer">
    <!--
    @mbggenerated
    -->
    select count(*) from mail_time_send
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    <!--
    @mbggenerated
    -->
    update mail_time_send
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.mailName != null">
        mail_name = #{record.mailName,jdbcType=VARCHAR},
      </if>
      <if test="record.mailFrom != null">
        mail_from = #{record.mailFrom,jdbcType=VARCHAR},
      </if>
      <if test="record.mailTo != null">
        mail_to = #{record.mailTo,jdbcType=VARCHAR},
      </if>
      <if test="record.mailCc != null">
        mail_cc = #{record.mailCc,jdbcType=VARCHAR},
      </if>
      <if test="record.subject != null">
        subject = #{record.subject,jdbcType=VARCHAR},
      </if>
      <if test="record.content != null">
        content = #{record.content,jdbcType=LONGVARCHAR},
      </if>
      <if test="record.isReplySign != null">
        is_reply_sign = #{record.isReplySign,jdbcType=INTEGER},
      </if>
      <if test="record.sendTime != null">
        send_time = #{record.sendTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.mailType != null">
        mail_type = #{record.mailType,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    <!--
    @mbggenerated
    -->
    update mail_time_send
    set id = #{record.id,jdbcType=BIGINT},
      mail_name = #{record.mailName,jdbcType=VARCHAR},
      mail_from = #{record.mailFrom,jdbcType=VARCHAR},
      mail_to = #{record.mailTo,jdbcType=VARCHAR},
      mail_cc = #{record.mailCc,jdbcType=VARCHAR},
      subject = #{record.subject,jdbcType=VARCHAR},
      content = #{record.content,jdbcType=LONGVARCHAR},
      is_reply_sign = #{record.isReplySign,jdbcType=INTEGER},
      send_time = #{record.sendTime,jdbcType=TIMESTAMP},
      mail_type = #{record.mailType,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.hengyunsoft.platform.mail.entity.core.po.TimeSend">
    <!--
    @mbggenerated
    -->
    update mail_time_send
    <set>
      <if test="mailName != null">
        mail_name = #{mailName,jdbcType=VARCHAR},
      </if>
      <if test="mailFrom != null">
        mail_from = #{mailFrom,jdbcType=VARCHAR},
      </if>
      <if test="mailTo != null">
        mail_to = #{mailTo,jdbcType=VARCHAR},
      </if>
      <if test="mailCc != null">
        mail_cc = #{mailCc,jdbcType=VARCHAR},
      </if>
      <if test="subject != null">
        subject = #{subject,jdbcType=VARCHAR},
      </if>
      <if test="content != null">
        content = #{content,jdbcType=LONGVARCHAR},
      </if>
      <if test="isReplySign != null">
        is_reply_sign = #{isReplySign,jdbcType=INTEGER},
      </if>
      <if test="sendTime != null">
        send_time = #{sendTime,jdbcType=TIMESTAMP},
      </if>
      <if test="mailType != null">
        mail_type = #{mailType,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.hengyunsoft.platform.mail.entity.core.po.TimeSend">
    <!--
    @mbggenerated
    -->
    update mail_time_send
    set mail_name = #{mailName,jdbcType=VARCHAR},
      mail_from = #{mailFrom,jdbcType=VARCHAR},
      mail_to = #{mailTo,jdbcType=VARCHAR},
      mail_cc = #{mailCc,jdbcType=VARCHAR},
      subject = #{subject,jdbcType=VARCHAR},
      content = #{content,jdbcType=LONGVARCHAR},
      is_reply_sign = #{isReplySign,jdbcType=INTEGER},
      send_time = #{sendTime,jdbcType=TIMESTAMP},
      mail_type = #{mailType,jdbcType=VARCHAR}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>