<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.hengyunsoft.platform.standard.repository.standard.dao.StandardFileLogMapper">
  <resultMap id="BaseResultMap" type="com.hengyunsoft.platform.standard.entity.standard.po.StandardFileLog">
    <!--
    @mbggenerated
    -->
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="document_id" jdbcType="BIGINT" property="documentId" />
    <result column="operator_user_id" jdbcType="BIGINT" property="operatorUserId" />
    <result column="operator_user_name" jdbcType="VARCHAR" property="operatorUserName" />
    <result column="operator_company_id" jdbcType="BIGINT" property="operatorCompanyId" />
    <result column="operator_time" jdbcType="TIMESTAMP" property="operatorTime" />
    <result column="ip" jdbcType="VARCHAR" property="ip" />
    <result column="operator_type" jdbcType="VARCHAR" property="operatorType" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <!--
    @mbggenerated
    -->
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <!--
    @mbggenerated
    -->
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    <!--
    @mbggenerated
    -->
    id, document_id, operator_user_id, operator_user_name, operator_company_id, operator_time, 
    ip, operator_type, create_time, update_time
  </sql>
  <select id="selectByExample" parameterType="com.hengyunsoft.platform.standard.repository.standard.example.StandardFileLogExample" resultMap="BaseResultMap">
    <!--
    @mbggenerated
    -->
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from standard_file_log
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="groupByClause != null">
      group by ${groupByClause}
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <if test="limitValue != null">
      limit ${limitValue}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    <!--
    @mbggenerated
    -->
    select 
    <include refid="Base_Column_List" />
    from standard_file_log
    where id = #{id,jdbcType=BIGINT}
  </select>
  <select id="selectEntity" parameterType="com.hengyunsoft.platform.standard.repository.standard.example.StandardFileLogExample" resultMap="BaseResultMap">
    <!--
    @mbggenerated
    -->
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from standard_file_log
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="groupByClause != null">
      group by ${groupByClause}
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    limit 0,1 
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    <!--
    @mbggenerated
    -->
    delete from standard_file_log
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.hengyunsoft.platform.standard.repository.standard.example.StandardFileLogExample">
    <!--
    @mbggenerated
    -->
    delete from standard_file_log
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <update id="removeByExample" parameterType="com.hengyunsoft.platform.standard.entity.standard.po.StandardFileLog">
    <!--
    @mbggenerated
    -->
    update standard_file_log
    set is_delete = 1 

    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </update>
  <update id="removeByPrimaryKey" parameterType="com.hengyunsoft.platform.standard.entity.standard.po.StandardFileLog">
    <!--
    @mbggenerated
    -->
    update standard_file_log
    set is_delete = 1 

     where 1=1 and id = #{id,jdbcType=BIGINT}
  </update>
  <insert id="insert" parameterType="com.hengyunsoft.platform.standard.entity.standard.po.StandardFileLog">
    <!--
    @mbggenerated
    -->
    insert into standard_file_log (id, document_id, operator_user_id, 
      operator_user_name, operator_company_id, operator_time, 
      ip, operator_type, create_time, 
      update_time)
    values (#{id,jdbcType=BIGINT}, #{documentId,jdbcType=BIGINT}, #{operatorUserId,jdbcType=BIGINT}, 
      #{operatorUserName,jdbcType=VARCHAR}, #{operatorCompanyId,jdbcType=BIGINT}, #{operatorTime,jdbcType=TIMESTAMP}, 
      #{ip,jdbcType=VARCHAR}, #{operatorType,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}, 
      #{updateTime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="batchInsert" parameterType="java.util.List">
    <!--
    @mbggenerated
    -->
    insert into standard_file_log (id, document_id, operator_user_id, operator_user_name, operator_company_id, operator_time, ip, operator_type, create_time, update_time ) values 
    <foreach collection="list" index="index" item="item" separator=",">
      (#{item.id,jdbcType=BIGINT}, #{item.documentId,jdbcType=BIGINT}, #{item.operatorUserId,jdbcType=BIGINT}, 
        #{item.operatorUserName,jdbcType=VARCHAR}, #{item.operatorCompanyId,jdbcType=BIGINT}, 
        #{item.operatorTime,jdbcType=TIMESTAMP}, #{item.ip,jdbcType=VARCHAR}, #{item.operatorType,jdbcType=VARCHAR}, 
        #{item.createTime,jdbcType=TIMESTAMP}, #{item.updateTime,jdbcType=TIMESTAMP})
    </foreach>
  </insert>
  <insert id="insertSelective" parameterType="com.hengyunsoft.platform.standard.entity.standard.po.StandardFileLog">
    <!--
    @mbggenerated
    -->
    insert into standard_file_log
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="documentId != null">
        document_id,
      </if>
      <if test="operatorUserId != null">
        operator_user_id,
      </if>
      <if test="operatorUserName != null">
        operator_user_name,
      </if>
      <if test="operatorCompanyId != null">
        operator_company_id,
      </if>
      <if test="operatorTime != null">
        operator_time,
      </if>
      <if test="ip != null">
        ip,
      </if>
      <if test="operatorType != null">
        operator_type,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=BIGINT},
      </if>
      <if test="documentId != null">
        #{documentId,jdbcType=BIGINT},
      </if>
      <if test="operatorUserId != null">
        #{operatorUserId,jdbcType=BIGINT},
      </if>
      <if test="operatorUserName != null">
        #{operatorUserName,jdbcType=VARCHAR},
      </if>
      <if test="operatorCompanyId != null">
        #{operatorCompanyId,jdbcType=BIGINT},
      </if>
      <if test="operatorTime != null">
        #{operatorTime,jdbcType=TIMESTAMP},
      </if>
      <if test="ip != null">
        #{ip,jdbcType=VARCHAR},
      </if>
      <if test="operatorType != null">
        #{operatorType,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.hengyunsoft.platform.standard.repository.standard.example.StandardFileLogExample" resultType="java.lang.Integer">
    <!--
    @mbggenerated
    -->
    select count(*) from standard_file_log
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    <!--
    @mbggenerated
    -->
    update standard_file_log
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.documentId != null">
        document_id = #{record.documentId,jdbcType=BIGINT},
      </if>
      <if test="record.operatorUserId != null">
        operator_user_id = #{record.operatorUserId,jdbcType=BIGINT},
      </if>
      <if test="record.operatorUserName != null">
        operator_user_name = #{record.operatorUserName,jdbcType=VARCHAR},
      </if>
      <if test="record.operatorCompanyId != null">
        operator_company_id = #{record.operatorCompanyId,jdbcType=BIGINT},
      </if>
      <if test="record.operatorTime != null">
        operator_time = #{record.operatorTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.ip != null">
        ip = #{record.ip,jdbcType=VARCHAR},
      </if>
      <if test="record.operatorType != null">
        operator_type = #{record.operatorType,jdbcType=VARCHAR},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateTime != null">
        update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    <!--
    @mbggenerated
    -->
    update standard_file_log
    set id = #{record.id,jdbcType=BIGINT},
      document_id = #{record.documentId,jdbcType=BIGINT},
      operator_user_id = #{record.operatorUserId,jdbcType=BIGINT},
      operator_user_name = #{record.operatorUserName,jdbcType=VARCHAR},
      operator_company_id = #{record.operatorCompanyId,jdbcType=BIGINT},
      operator_time = #{record.operatorTime,jdbcType=TIMESTAMP},
      ip = #{record.ip,jdbcType=VARCHAR},
      operator_type = #{record.operatorType,jdbcType=VARCHAR},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      update_time = #{record.updateTime,jdbcType=TIMESTAMP}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.hengyunsoft.platform.standard.entity.standard.po.StandardFileLog">
    <!--
    @mbggenerated
    -->
    update standard_file_log
    <set>
      <if test="documentId != null">
        document_id = #{documentId,jdbcType=BIGINT},
      </if>
      <if test="operatorUserId != null">
        operator_user_id = #{operatorUserId,jdbcType=BIGINT},
      </if>
      <if test="operatorUserName != null">
        operator_user_name = #{operatorUserName,jdbcType=VARCHAR},
      </if>
      <if test="operatorCompanyId != null">
        operator_company_id = #{operatorCompanyId,jdbcType=BIGINT},
      </if>
      <if test="operatorTime != null">
        operator_time = #{operatorTime,jdbcType=TIMESTAMP},
      </if>
      <if test="ip != null">
        ip = #{ip,jdbcType=VARCHAR},
      </if>
      <if test="operatorType != null">
        operator_type = #{operatorType,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.hengyunsoft.platform.standard.entity.standard.po.StandardFileLog">
    <!--
    @mbggenerated
    -->
    update standard_file_log
    set document_id = #{documentId,jdbcType=BIGINT},
      operator_user_id = #{operatorUserId,jdbcType=BIGINT},
      operator_user_name = #{operatorUserName,jdbcType=VARCHAR},
      operator_company_id = #{operatorCompanyId,jdbcType=BIGINT},
      operator_time = #{operatorTime,jdbcType=TIMESTAMP},
      ip = #{ip,jdbcType=VARCHAR},
      operator_type = #{operatorType,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>